{"version":3,"sources":["store.es6"],"names":[],"mappings":";;AAAA,IAAI,aAAa,QAAQ,eAAR,CAAjB;;AAEA,QAAQ,SAAR,GAAoB,gBAAQ;AACxB,eAAW,GAAX,GAAiB,KAAjB,CAAuB,wBAAvB,EAAiD,UAAC,KAAD,EAAQ,MAAR,EAAmB;AAChE,YAAG,KAAH,EAAU;AACN,mBAAO,KAAK,KAAL,CAAP;AACH;;AAED,aAAK,IAAL,EAAW,MAAX;AACH,KAND;AAOH,CARD;;AAUA,QAAQ,kBAAR,GAA6B,UAAC,EAAD,EAAK,IAAL,EAAc;AACvC,eAAW,GAAX,GAAiB,KAAjB,CAAuB,iCACH,gEADG,GAEH,kDAFpB,EAEwE,EAFxE,EAE4E,UAAC,KAAD,EAAQ,MAAR,EAAmB;AAC3F,YAAG,KAAH,EAAU;AACN,mBAAO,KAAK,KAAL,CAAP;AACH;;AAED,aAAK,IAAL,EAAW,MAAX;AACH,KARD;AASH,CAVD;;AAaA,QAAQ,gBAAR,GAA2B,UAAC,EAAD,EAAK,IAAL,EAAc;AACrC,eAAW,GAAX,GAAiB,KAAjB,CAAuB,8BAAvB,EAAuD,EAAvD,EAA2D,UAAC,KAAD,EAAQ,MAAR,EAAmB;AAC1E,YAAG,KAAH,EAAU;AACN,mBAAO,KAAK,KAAL,CAAP;AACH;;AAED,aAAK,IAAL,EAAW,MAAX;AACH,KAND;AAOH,CARD;;AAWA,QAAQ,QAAR,GAAmB,UAAC,KAAD,EAAQ,IAAR,EAAiB;AAChC,eAAW,GAAX,GAAiB,KAAjB,CAAuB,uDAAvB,EAAgF,CAAC,KAAD,CAAhF,EAAyF,UAAC,KAAD,EAAQ,MAAR,EAAmB;AACxG,YAAG,KAAH,EAAU;AACN,mBAAO,KAAK,KAAL,CAAP;AACH;;AAED,aAAK,IAAL,EAAW,IAAX;AACH,KAND;AAOH,CARD;;AAUA,QAAQ,sBAAR,GAAiC,UAAC,EAAD,EAAK,IAAL,EAAc;AAC3C,eAAW,GAAX,GAAiB,KAAjB,CAAuB,iCACnB,gEADmB,GAEnB,0DAFJ,EAEgE,EAFhE,EAEoE,UAAC,KAAD,EAAQ,MAAR,EAAmB;AACnF,YAAG,KAAH,EAAU;AACN,mBAAO,KAAK,KAAL,CAAP;AACH;;AAED,aAAK,IAAL,EAAW,MAAX;AACH,KARD;AASH,CAVD;;AAYA,QAAQ,iBAAR,GAA4B,UAAC,EAAD,EAAK,IAAL,EAAc;AACtC,eAAW,GAAX,GAAiB,KAAjB,CAAuB,+DACnB,oEADmB,GAEnB,oBAFJ,EAE0B,EAF1B,EAE8B,UAAC,KAAD,EAAQ,MAAR,EAAmB;AAC7C,YAAG,KAAH,EAAU;AACN,mBAAO,KAAK,KAAL,CAAP;AACH;;AAED,aAAK,IAAL,EAAW,MAAX;AACH,KARD;AASH,CAVD","file":"store.js","sourcesContent":["var connection = require('../connection');\n\nexports.getStores = done => {\n    connection.get().query('SELECT * FROM `stores`', (error, result) => {\n        if(error) {\n            return done(error);\n        }\n\n        done(null, result);\n    });\n};\n\nexports.getStoresByTNumber = (id, done) => {\n    connection.get().query('SELECT * FROM `stores_util` ' +\n                        'INNER JOIN `stores` ON stores_util.store_id = stores.store_id ' +\n                        'WHERE t_number = ? GROUP BY stores_util.store_id', id, (error, result) => {\n        if(error) {\n            return done(error);\n        }\n\n        done(null, result);\n    });\n};\n\n\nexports.createStoresUtil = (id, done) => {\n    connection.get().query('INSERT INTO stores_util SET ', id, (error, result) => {\n        if(error) {\n            return done(error);\n        }\n\n        done(null, result);\n    });\n};\n\n\nexports.addStore = (store, done) => {\n    connection.get().query('INSERT INTO stores_util (t_number, store_id) VALUES ?', [store], (error, result) => {\n        if(error) {\n            return done(error);\n        }\n\n        done(null, null);\n    });\n};\n\nexports.getFirstStoreByTNumber = (id, done) => {\n    connection.get().query('SELECT * FROM `stores_util` ' +\n        'INNER JOIN `stores` ON stores_util.store_id = stores.store_id ' +\n        'WHERE t_number = ? GROUP BY stores_util.store_id LIMIT 1', id, (error, result) => {\n        if(error) {\n            return done(error);\n        }\n\n        done(null, result);\n    });\n};\n\nexports.getUsersByStoreId = (id, done) => {\n    connection.get().query('SELECT first_name, last_name, users.t_number FROM `users` ' +\n        'INNER JOIN `stores_util` ON users.t_number = stores_util.t_number ' +\n        'WHERE store_id = ?', id, (error, result) => {\n        if(error) {\n            return done(error);\n        }\n\n        done(null, result);\n    });\n};"]}