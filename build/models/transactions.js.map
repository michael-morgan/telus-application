{"version":3,"sources":["transactions.es6"],"names":[],"mappings":"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","file":"transactions.js","sourcesContent":["var connection = require('../connection');\n\nexports.getTransactions = function(done) {\n    connection.get().query('SELECT * FROM transaction_types', function(error, result) {\n        if(error) {\n            return done(error);\n        }\n\n        done(null, result);\n    });\n};\n\nexports.getTransactionss = function(done) {\n    connection.get().query('SELECT * FROM transactions', function(error, result) {\n        if(error) {\n            return done(error);\n        }\n\n        done(null, result);\n    });\n};\n\nexports.getTransactionItems = function(done) {\n    connection.get().query('SELECT * FROM transaction_items', function(error, result) {\n        if(error) {\n            return done(error);\n        }\n\n        done(null, result);\n    });\n};\n\nexports.getAdditionalMetricItems = function(done) {\n    connection.get().query('SELECT * FROM addition_metrics_items', function(error, result) {\n        if(error) {\n            return done(error);\n        }\n\n        done(null, result);\n    });\n};\n\nexports.getActivation = function(done) {\n    connection.get().query('SELECT * FROM activation_types', function(error, result) {\n        if(error) {\n            return done(error);\n        }\n\n        done(null, result);\n    });\n};\n\nexports.getDevice = function(done) {\n    connection.get().query('SELECT * FROM device_types', function(error, result) {\n        if(error) {\n            return done(error);\n        }\n\n        done(null, result);\n    });\n};\n\nexports.getWarranty = function(done) {\n    connection.get().query('SELECT * FROM warranty_types', function(error, result) {\n        if(error) {\n            return done(error);\n        }\n\n        done(null, result);\n    });\n};\n\nexports.getTransactionTypes = function(done) {\n    connection.get().query('SELECT * FROM transaction_types', function(error, result) {\n        if(error) {\n            return done(error);\n        }\n\n        done(null, result);\n    });\n};\n\n\nexports.getSbs = function(done) {\n    connection.get().query('SELECT * FROM sbs_returns_exchanges_discounts', function(error, result) {\n        if(error) {\n            return done(error);\n        }\n\n        done(null, result);\n    });\n};\n\n\nexports.addTransaction = function(transactions, done) {\n    connection.get().query('INSERT INTO `transactions` SET ?', [transactions], function(error, result) {\n        if(error) {\n            return done(error);\n        }\n\n        done(null, result);\n    });\n};\n\nexports.addTransactionItems = function(transactions_items, done) {\n    connection.get().query('INSERT INTO `transaction_items` SET ?', [transactions_items], function(error, result) {\n        if(error) {\n            return done(error);\n        }\n\n        done(null, result);\n    });\n};\n\nexports.deleteTransaction  = function(id, done) {\n    connection.get().query('DELETE FROM `addition_metrics_items` WHERE transaction_id = ?', id, function(error, result) {\n        if(error) {\n            return done(error);\n        }\n        connection.get().query('DELETE FROM `transaction_items` WHERE transaction_id = ?', id, function(error, result) {\n            if(error) {\n                return done(error);\n            }\n            connection.get().query('DELETE FROM `transactions` WHERE transaction_id = ?', id, function(error, result) {\n                if(error) {\n                    return done(error);\n                }\n                done(null, result.affectedRows);\n            });\n        });\n    });\n};\n\nexports.addAdditionalMetrics = function(metrics, done) {\n    connection.get().query('INSERT INTO `addition_metrics_items` SET ?', [metrics], function(error, result) {\n        if(error) {\n            return done(error);\n        }\n\n        done(null, result);\n    });\n};\n\nexports.getUserTransactions = (done) => {\n\tconnection.get().query('SELECT t_number, COUNT(*) AS count FROM `transactions` GROUP BY t_number', (error, result) => {\n\t\tif(error) {\n\t\t\treturn done(error);\n\t\t}\n\n\t\tdone(null, result);\n\t});\n};\n"]}