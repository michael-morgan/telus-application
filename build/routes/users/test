// When we submit the add behaviour page with a skill and remove parameter
router.post('/add-behaviour/:skill/:canRemove', ensureAuthenticated, function (req, res, next) {
    if (!req.body) { return res.sendStatus(400); }
    //Setup some variables, remember req.body is all the submitted data from the form
    var behaviours = req.body;
    var skillTitle = req.body.skillTitleBox;
    var behaviourDesc = '';
    var num = '';
    returnObj['title'] ='Edit Skills/Behaviours';
    var behaviourAdded = false;
    var behaviourDeleted = false;
    var skillDeleted = false;
    //Filter post data
    for(var aBehaviour in behaviours) {
        if (aBehaviour.indexOf('skillid') == -1 && aBehaviour.indexOf('behaviourid') == -1 && aBehaviour.indexOf('deletebehaviourid') == -1 && aBehaviour.indexOf('deleteskillid') == -1) {
            delete behaviours[aBehaviour];
        }
    }

    //See if we are deleting
    for(var aBehaviour in behaviours) {
        //Delete Skill
        if (aBehaviour.indexOf('deleteskillid') > -1) {
            var skillToDelete = aBehaviour;
            //Grab the number from the checkbox id
            var skillID = String(skillToDelete.match(/[0-9]+/g));
            connection.get().query('DELETE FROM skills WHERE skill_id = ?', [skillID], function (err, skillResults) {
                //If an error is thrown
                if (err) {
                    returnObj['message'] = 'Our database servers maybe down. Please try again.';
                    //Render the page wth error messages
                    return res.render('add-behaviour', returnObj);
                }
            });
            behaviourDeleted = true;
            skillDeleted = true;
        }
        //If we arent deleting a skill
        if(!skillDeleted) {
            //Delete Behaviour
            if (aBehaviour.indexOf('deletebehaviourid') > -1) {
                var behaviourToDelete = aBehaviour;
                //Grab the id from the checkbox
                var behaviourID = String(behaviourToDelete.match(/[0-9]+/g));
                connection.get().query('DELETE behaviours FROM behaviours INNER JOIN skills ON skills.skill_id = behaviours.skill_id WHERE behaviours.behaviour_id = ?', [behaviourID], function (err, skillResults) {
                    //If an error is thrown
                    if (err) {
                        returnObj['message'] = 'Our database servers maybe down. Please try again.';
                        //Render the page wth error messages
                        return res.render('add-behaviour', returnObj);
                    }
                });
                behaviourDeleted = true;
            }
        }
    }
    //If a behaviour was deleted go to the behaviours page and flash a message
    if(behaviourDeleted) {
        req.flash('success_messages', 'The behaviour was successfully deleted from the database.');
        req.session.success = true;
        returnObj['message'] = undefined;
        return res.redirect('/users/behaviours');
    }
    //Update the skillname
    if(skillTitle != null || skillTitle != "") {
        //Update the skill name
        connection.get().query('UPDATE skills SET skill_title = ? WHERE skill_id = ?', [skillTitle, req.params.skill], function (err, skillResults) {
            //If an error is thrown
            if (err) {
                returnObj['message'] = 'Our database servers maybe down. Please try again.';
                //Render the page wth error messages
                return res.render('add-behaviour', returnObj);
            }
        });
    }
    else
    {
        returnObj['message'] = 'One of the skills was empty, please enter a skill name';
        return res.render('add-behaviour', returnObj);
    }
    //Loop through each behaviour, add if there is none or edit
    for(var aBehaviour in behaviours) {
        //Update the behaviour description
        if(aBehaviour.indexOf('behaviourid') > -1)
        {
            if (behaviours[aBehaviour] == null || behaviours[aBehaviour] == "") {
                returnObj['message'] = 'One of the behaviours was empty, please enter a behaviour name';
                //Render the page wth error messages
                return res.render('add-behaviour', returnObj);
            }
            behaviourAdded = true;
            behaviourDesc = behaviours[aBehaviour];
            //Regex to extract numbers from textarea id
            num = String(aBehaviour.match(/[0-9]+/g));

            connection.get().query('SELECT behaviour_id FROM behaviours WHERE behaviour_id = ?',num, function (err, behaviourResults) {
                //If an error is thrown
                if (err) {
                    returnObj['message'] = 'Our database servers maybe down. Please try again.';
                    //Render the page wth error messages
                    return res.render('add-behaviour', returnObj);
                }
                //Add Behaviour
                else if(behaviourResults.length <= 0)
                {
                    //Creating the JSON array to store the behaviour data
                    var behaviour = {
                        skill_id: req.params.skill,
                        behaviour_desc: behaviourDesc
                    }; //End behaviour
                    connection.get().query('INSERT INTO behaviours SET ?',[behaviour], function (err, skillResults) {
                        //If an error is thrown
                        if (err) {
                            returnObj['message'] = 'Our database servers maybe down. Please try again.';
                            //Render the page wth error messages
                            return res.render('add-behaviour', returnObj);
                        }
                    });
                }
            });
            //Update Behaviour
            connection.get().query('UPDATE behaviours SET behaviour_desc = ? WHERE behaviour_id = ?',[behaviourDesc,num], function (err, skillResults) {
                //If an error is thrown
                if (err) {
                    returnObj['message'] = 'Our database servers maybe down. Please try again.';
                    //Render the page wth error messages
                    return res.render('add-behaviour', returnObj);
                }

            });
        }
    }

    //If all is good, return them to the behaviours page with a nice message
    req.flash('success_messages', 'The skill ' + skillTitle+ ' and behaviour(s) have been edited successfully.');
    req.session.success = true;
    returnObj['message'] = undefined;
    return res.redirect('/users/behaviours');
});