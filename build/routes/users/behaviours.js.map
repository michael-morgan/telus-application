{"version":3,"sources":["behaviours.es6"],"names":[],"mappings":"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","file":"behaviours.js","sourcesContent":["/**\n * Created by Jacob on 2016-05-29.\n */\nvar express = require('express');\nvar connection = require('../../connection');\nvar passport = require('passport');\nvar async = require('async');var async = require('async');\nimport * as utility from \"../../utility\";\n\nvar behaviourModel = require('../../models/observation');\nvar returnObj = {};\nvar router = express.Router();\n\n// Get for behaviours and show them for each skill\nrouter.get('/', ensureAuthenticated, function (req, res, next) {\n    returnObj['message'] = undefined;\n    //Ensure user is logged in\n    if (req.user.privileged <= 2) { return res.redirect('/users/'); }\n\n    if (!req.body) { return res.sendStatus(400); }\n\n    returnObj['title'] = 'Behaviours';\n\n    //Display success message on adding,editing or remove a behaviour/skill\n    if(req.session.success)\n    {\n        res.locals.success_messages = req.flash('success_messages');\n        req.session.success = false;\n    }\n\n    //Connection to get all the skills\n    connection.get().query('SELECT skill_id,skill_title FROM skills', function (err, skillResults) {\n        //If an error is thrown\n        if (err) {\n            returnObj['message'] = 'Our database servers maybe down. Please try again.';\n            //Render the page wth error messages\n            return res.render('behaviours/behaviours', returnObj);\n        }\n\n        //Connection to get all behaviours\n        connection.get().query('SELECT skill_id,behaviour_id,behaviour_desc FROM behaviours', function (err, behaviourResults) {\n            //If an error is thrown\n            if (err) {\n                returnObj['message'] = 'Our database servers maybe down. Please try again.';\n                //Render the page wth error messages\n                return res.render('behaviours/behaviours', returnObj);\n            }\n\n            returnObj['skills'] = skillResults;\n            returnObj['behaviours'] = behaviourResults;\n            //Render the behaviours page with a list of behaviours and skills\n            res.render('behaviours/behaviours', returnObj);\n        });\n    });\n});\n//Display the add behaviour page, you can edit and remove behaviours here as well\nrouter.get('/add-behaviour', ensureAuthenticated, function (req, res, next) {\n    if (req.user.privileged <= 2) {\n        return res.redirect('/users/');\n    }\n\n    if (!req.body) {\n        return res.sendStatus(400);\n    }\n\n    var returnObj = {\n        title :'Add Behaviour'\n    };\n\n    returnObj['message'] = undefined;\n\n    //Connection to get all skills\n    connection.get().query('SELECT skill_id,skill_title FROM skills', function (err, skillResults) {\n        //If an error is thrown\n        if (err) {\n            returnObj['message'] = 'Our database servers maybe down. Please try again.';\n            //Render the page wth error messages\n            return res.render('behaviours/add-behaviour', returnObj);\n        }\n        //We are not removing a skill in this case\n        returnObj['canRemove'] = undefined;\n        //Render the add-behaviour page with an interface to perform CRUD\n        return res.render('behaviours/add-behaviour', returnObj);\n    });\n});\n\n// When the add-behaviour page is loaded, and there is a skill id in the url.\nrouter.get('/add-behaviour/:skill', ensureAuthenticated, function (req, res, next) {\n    if (req.user.privileged <= 2) {\n        return res.redirect('/users/');\n    }\n\n    if (!req.body) { return res.sendStatus(400); }\n    returnObj['message'] = undefined;\n    returnObj['title'] ='Edit Skills/Behaviours';\n    //Connection to get all skills\n    connection.get().query('SELECT skill_id,skill_title FROM skills', function (err, skillResults) {\n        //If an error is thrown\n        if (err) {\n            returnObj['message'] = 'Our database servers maybe down. Please try again.';\n            //Render the page wth error messages\n            return res.render('behaviours/add-behaviour', returnObj);\n        }\n        else {\n            //Get the skill id we are working with by using the skill parameter in the URL\n            connection.get().query('SELECT skills.skill_id,skills.skill_title,behaviour_id,behaviours.behaviour_desc FROM skills INNER JOIN behaviours ON skills.skill_id = behaviours.skill_id ' +\n                'WHERE skills.skill_id = ?', req.params.skill, function (err, behaviourResults) {\n                //If an error is thrown\n                if (err) {\n                    returnObj['message'] = 'Our database servers maybe down. Please try again.';\n                    //Render the page wth error messages\n                    return res.render('behaviours/add-behaviour', returnObj);\n                }\n                //No errors render the add-behaviour page\n                else {\n                    //We are not removing a skill in this case\n                    returnObj['canRemove'] = undefined;\n                    returnObj['selectedskill'] = behaviourResults;\n                    return res.render('behaviours/add-behaviour', returnObj);\n                }\n            });\n        }\n    });\n});\n\n// When the add-behaviour page is loaded, and there is a skill id in the url and the user clicked Remove skill\nrouter.get('/add-behaviour/:skill/:canRemove', ensureAuthenticated, function (req, res, next) {\n    if (req.user.privileged <= 2) {\n        return res.redirect('/users/');\n    }\n\n    if (!req.body) { return res.sendStatus(400); }\n    returnObj['message'] = undefined;\n    returnObj['title'] ='Edit Skills/Behaviours';\n    //Connection to get all skills\n    connection.get().query('SELECT skill_id,skill_title FROM skills', function (err, skillResults) {\n        //If an error is thrown\n        if (err) {\n            returnObj['message'] = 'Our database servers maybe down. Please try again.';\n            //Render the page wth error messages\n            return res.render('behaviours/add-behaviour', returnObj);\n        }\n        else {\n            //Get the skill we are working with\n            connection.get().query('SELECT skills.skill_id,skills.skill_title,behaviour_id,behaviours.behaviour_desc FROM skills INNER JOIN behaviours ON skills.skill_id = behaviours.skill_id ' +\n                'WHERE skills.skill_id = ?', req.params.skill, function (err, behaviourResults) {\n                //If an error is thrown\n                if (err) {\n                    returnObj['message'] = 'Our database servers maybe down. Please try again.';\n                    //Render the page wth error messages\n                    return res.render('behaviours/add-behaviour', returnObj);\n                }\n                //If all is well, render the add behaviour page and pass a remove parameter to automatically open the delete interface\n                else {\n                    returnObj['selectedskill'] = behaviourResults;\n                    returnObj['canRemove'] = req.params.canRemove;\n                    return res.render('behaviours/add-behaviour', returnObj);\n                }\n            });\n        }\n    });\n});\n// When we submit the add behaviour page with a skill and a remove parameter\nrouter.post('/add-behaviour/:skill/:canRemove', ensureAuthenticated, function (req, res, next) {\n    if (!req.body) { return res.sendStatus(400); }\n    //Set the save data to null first so its not passed if the form submission was successful\n    returnObj['savedBehaviours'] = undefined;\n    returnObj['skillTitle'] = undefined;\n    //Store variables from the submitted form\n    var behaviours = req.body;\n    var skillTitle = req.body.skillTitleBox;\n    var behaviourDesc = '';\n    var num = '';\n    returnObj['title'] ='Edit Skills/Behaviours';\n    var behaviourAdded = false;\n    var behaviourDeleted = false;\n    var skillDeleted = false;\n    //Execute these functions in series, that is 1 after the other\n    async.series([\n        filterPostData,\n        deleteSkills,\n        deleteBehaviours,\n        updateSkill,\n        updateBehaviour,\n        redirectUser\n    ], function(err, results){\n    });\n    //Filter submitted data\n    function filterPostData(fnCallback) {\n        async.eachSeries(Object.keys(behaviours), function (aBehaviour, callback) {\n            if (aBehaviour.indexOf('skillid') == -1 && aBehaviour.indexOf('behaviourid') == -1 && aBehaviour.indexOf('deletebehaviourid') == -1 && aBehaviour.indexOf('deleteskillid') == -1) {\n                delete behaviours[aBehaviour];\n            }\n            callback(null);\n        }, fnCallback);\n    }\n    //Check to see if we are deleting any skills\n    function deleteSkills(fnCallback) {\n        async.eachSeries(Object.keys(behaviours), function (aBehaviour, callback) {\n            //Delete Skill\n            if (aBehaviour.indexOf('deleteskillid') > -1) {\n                var skillToDelete = aBehaviour;\n                var skillID = String(skillToDelete.match(/[0-9]+/g));\n                connection.get().query('DELETE FROM skills WHERE skill_id = ?', [skillID], function (err, skillResults) {\n                    //If an error is thrown\n                    if (err) {\n                        returnObj['message'] = 'Our database servers maybe down. Please try again.';\n                        returnObj['savedBehaviours'] = behaviours;\n                        returnObj['skillTitle'] = req.body.skillid1;\n                        //Render the page wth error messages\n                        return res.render('behaviours/add-behaviour', returnObj);\n                    }\n                    else {\n                        behaviourDeleted = true;\n                        skillDeleted = true;\n                        fnCallback(null);\n                    }\n                });\n            }\n            else\n            {\n                callback(null);\n            }\n        }, fnCallback);\n    }\n    //Check to see if we are deleting any behaviours\n    function deleteBehaviours(fnCallback)\n    {\n        if (!skillDeleted) {\n            async.eachSeries(Object.keys(behaviours), function (aBehaviour, callback) {\n                //Delete Behaviour\n                if (aBehaviour.indexOf('deletebehaviourid') > -1) {\n                    var behaviourToDelete = aBehaviour;\n                    var behaviourID = String(behaviourToDelete.match(/[0-9]+/g));\n                    connection.get().query('DELETE behaviours FROM behaviours INNER JOIN skills ON skills.skill_id = behaviours.skill_id WHERE behaviours.behaviour_id = ?', [behaviourID], function (err, skillResults) {\n                        //If an error is thrown\n                        if (err) {\n                            returnObj['message'] = 'Our database servers maybe down. Please try again.';\n                            returnObj['savedBehaviours'] = behaviours;\n                            returnObj['skillTitle'] = req.body.skillid1;\n                            //Render the page wth error messages\n                            return res.render('behaviours/add-behaviour', returnObj);\n                        }\n                        else {\n                            behaviourDeleted = true;\n                            callback(null);\n                        }\n                    });\n                }\n                else\n                {\n                    callback(null);\n                }\n            }, fnCallback);\n        }\n        else\n        {\n            fnCallback(null);\n        }\n    }\n    //If we aren't deleting any skills or behaviours, we must be updating a skill\n    function updateSkill(fnCallback) {\n        if (!behaviourDeleted) {\n            async.eachSeries(Object.keys(behaviours), function (aBehaviour, callback) {\n                if (skillTitle != null || skillTitle != \"\") {\n                    //Update the skill name\n                    connection.get().query('UPDATE skills SET skill_title = ? WHERE skill_id = ?', [skillTitle, req.params.skill], function (err, skillResults) {\n                        //If an error is thrown\n                        if (err) {\n                            returnObj['message'] = 'Our database servers maybe down. Please try again.';\n                            returnObj['savedBehaviours'] = behaviours;\n                            returnObj['skillTitle'] = req.body.skillid1;\n                            //Render the page wth error messages\n                            return res.render('behaviours/add-behaviour', returnObj);\n                        }\n                        else {\n                            callback(null);\n                        }\n                    });\n                }\n                else {\n                    returnObj['message'] = 'One of the skills was empty, please enter a skill name';\n                    returnObj['savedBehaviours'] = behaviours;\n                    returnObj['skillTitle'] = req.body.skillid1;\n                    //Render the page wth error messages\n                    return res.render('behaviours/add-behaviour', returnObj);\n                }\n            }, fnCallback);\n        }\n        else\n        {\n            fnCallback(null);\n        }\n    }\n    //If we aren't deleting any skills or behaviours, we must be updating a behaviour\n    function updateBehaviour(fnCallback)\n    {\n        async.eachSeries(Object.keys(behaviours), function (aBehaviour, callback) {\n            if(!skillDeleted && !behaviourDeleted) {\n                //Update the behaviour description\n                if (aBehaviour.indexOf('behaviourid') > -1) {\n                    if (behaviours[aBehaviour] == null || behaviours[aBehaviour] == \"\") {\n                        returnObj['message'] = 'One of the behaviours was empty, please enter a behaviour description';\n                        returnObj['savedBehaviours'] = behaviours;\n                        returnObj['skillTitle'] = req.body.skillid1;\n                        //Render the page wth error messages\n                        return res.render('behaviours/add-behaviour', returnObj);\n                    }\n                    behaviourAdded = true;\n                    behaviourDesc = behaviours[aBehaviour];\n                    //Regex to extract numbers from textarea id\n                    num = String(aBehaviour.match(/[0-9]+/g));\n                    connection.get().query('SELECT behaviour_id FROM behaviours WHERE behaviour_id = ?', num, function (err, behaviourResults) {\n                        //If an error is thrown\n                        if (err) {\n                            returnObj['message'] = 'Our database servers maybe down. Please try again.';\n                            returnObj['savedBehaviours'] = behaviours;\n                            returnObj['skillTitle'] = req.body.skillid1;\n                            //Render the page wth error messages\n                            return res.render('behaviours/add-behaviour', returnObj);\n                        }\n                        //Add Behaviour\n                        else if (behaviourResults.length <= 0) {\n                            //Creating the JSON array to store the behaviour data\n                            var behaviour = {\n                                skill_id: req.params.skill,\n                                behaviour_desc: behaviourDesc\n                            }; //End behaviour\n                            connection.get().query('INSERT INTO behaviours SET ?', [behaviour], function (err, skillResults) {\n                                //If an error is thrown\n                                if (err) {\n                                    returnObj['message'] = 'Our database servers maybe down. Please try again.';\n                                    returnObj['savedBehaviours'] = behaviours;\n                                    returnObj['skillTitle'] = req.body.skillid1;\n                                    //Render the page wth error messages\n                                    return res.render('behaviours/add-behaviour', returnObj);\n                                }\n                                else {\n                                    callback(null);\n                                }\n                            });\n                        }\n                        else\n                        {\n                            //Update Behaviour\n                            connection.get().query('UPDATE behaviours SET behaviour_desc = ? WHERE behaviour_id = ?', [behaviourDesc, num], function (err, skillResults) {\n                                //If an error is thrown\n                                if (err) {\n                                    returnObj['message'] = 'Our database servers maybe down. Please try again.';\n                                    returnObj['savedBehaviours'] = behaviours;\n                                    returnObj['skillTitle'] = req.body.skillid1;\n                                    //Render the page wth error messages\n                                    return res.render('behaviours/add-behaviour', returnObj);\n                                }\n                                else {\n                                    callback(null);\n                                }\n                            });\n                        }\n                    });\n                }\n            }\n        },fnCallback);\n    }\n    //Finally redirect the user back to the behaviours page\n    function redirectUser(fnCallback)\n    {\n        //If all is good, return them to the behaviours page\n        if (behaviourDeleted && !skillDeleted) {\n            req.flash('success_messages', 'The behaviour was successfully deleted from the database.');\n            req.session.success = true;\n            returnObj['message'] = undefined;\n            //callback(null);\n            return res.redirect('/users/behaviours');\n        }\n        else {\n            req.flash('success_messages', 'The skill ' + skillTitle + ' and behaviour(s) have been edited successfully.');\n            req.session.success = true;\n            returnObj['message'] = undefined;\n            return res.redirect('/users/behaviours');\n        }\n    }\n});\n// When the user has added a behaviour, update the database and return them to the behaviours page\nrouter.post('/add-behaviour', ensureAuthenticated, function (req, res, next) {\n    if (!req.body) { return res.sendStatus(400); }\n    //Set the save data to null first so its not passed if the form submission was successful\n    returnObj['savedBehaviours'] = undefined;\n    returnObj['skillTitle'] = undefined;\n    var behaviours = req.body;\n    var skillTitle = req.body.skillid1;\n    var skillID = '';\n    var behaviourDesc = '';\n    var num = \"\";\n    var skillsDone = false;\n    var behavioursDone = false;\n    returnObj['title'] ='Add Skills/Behaviours';\n    //Filter post data\n    async.eachSeries(Object.keys(behaviours), function (aSkill, callback) {\n        if (aSkill.indexOf('skillid') == -1 && aSkill.indexOf('behaviourid') == -1) {\n            delete behaviours[aSkill];\n        }\n    }\n    );\n    //If a behaviour is blank stop, and show them an error message\n    for(var aBehaviour in behaviours)\n    {\n        if (aBehaviour.indexOf('behaviourid') > -1) {\n            if (behaviours[aBehaviour] == null || behaviours[aBehaviour] == \"\") {\n                returnObj['message'] = 'One of the behaviours was empty, please enter a behaviour name';\n                //Render the page wth error messages\n                returnObj['savedBehaviours'] = behaviours;\n                returnObj['skillTitle'] = req.body.skillid1;\n                return res.render('behaviours/add-behaviour', returnObj);\n            }\n        }\n    }\n\n    async.series([\n        insertSkill,\n        insertBehaviours,\n        redirectUser\n    ], function(err, results) {\n        utility.log({ type: 'log', message: results });\n    });\n\n\n    function insertSkill(fnCallback){\n        //Get the skill title and behaviours, then perform CRUD if necessary\n        async.eachSeries(Object.keys(behaviours), function (aSkill, callback){\n            if (aSkill.indexOf('skillid') > -1) {\n                if (behaviours[aSkill] == null || behaviours[aSkill] == \"\") {\n                    returnObj['message'] = 'One of the skills was empty, please enter a skill name';\n                    returnObj['savedBehaviours'] = behaviours;\n                    returnObj['skillTitle'] = req.body.skillid1;\n                    //Render the page wth error messages\n                    return res.render('behaviours/add-behaviour', returnObj);\n                }\n\n                //Regex to extract numbers from textarea id\n                skillTitle = behaviours[aSkill];\n                num = String(skillTitle.match(/[0-9]+/g));\n                connection.get().query('SELECT skill_id FROM skills WHERE skill_id = ?', num, function (err, skillResults) {\n                    //If an error is thrown\n                    if (err) {\n                        returnObj['message'] = 'Our database servers maybe down. Please try again.';\n                        returnObj['savedBehaviours'] = behaviours;\n                        returnObj['skillTitle'] = req.body.skillid1;\n                        //Render the page wth error messages\n                        return res.render('behaviours/add-behaviour', returnObj);\n                    }\n                    //Add Behaviour\n                    if (skillTitle != null || skillTitle != \"\") {\n                        //Creating the JSON array to store the behaviour data\n                        var skill = {\n                            skill_title: skillTitle\n                        }; //End behaviour\n                        connection.get().query('INSERT INTO skills SET ?', [skill], function (err, skillResults) {\n                            //If an error is thrown\n                            if (err) {\n                                returnObj['message'] = 'Our database servers maybe down. Please try again.';\n                                returnObj['savedBehaviours'] = behaviours;\n                                returnObj['skillTitle'] = req.body.skillid1;\n                                //Render the page wth error messages\n                                return res.render('behaviours/add-behaviour', returnObj);\n                            }\n                            else {\n                                callback(null);\n                                skillID = skillResults.insertId;\n                                fnCallback(null);\n                            }\n                        });\n                    }\n                    else\n                    {\n                        returnObj['message'] = 'One of the skills was empty, please enter a skill name';\n                        returnObj['savedBehaviours'] = behaviours;\n                        returnObj['skillTitle'] = req.body.skillid1;\n                        //Render the page wth error messages\n                        return res.render('behaviours/add-behaviour', returnObj);\n                    }\n                });\n            }\n        },fnCallback);\n    }\n    function insertBehaviours(fnCallback){\n        async.eachSeries(Object.keys(behaviours), function (aBehaviour, secondCallback) {\n            if (aBehaviour.indexOf('behaviourid') > -1) {\n                if (behaviours[aBehaviour] == null || behaviours[aBehaviour] == \"\") {\n                    returnObj['message'] = 'One of the behaviours was empty, please enter a behaviour name';\n                    returnObj['savedBehaviours'] = behaviours;\n                    returnObj['skillTitle'] = req.body.skillid1;\n                    //Render the page wth error messages\n                    return res.render('behaviours/add-behaviour', returnObj);\n                }\n                behaviourDesc = behaviours[aBehaviour];\n                if (skillID != '') {\n                    var behaviour = {\n                        skill_id: skillID,\n                        behaviour_desc: behaviourDesc\n                    }; //End behaviour\n                    connection.get().query('INSERT INTO behaviours SET ?', [behaviour], function (err, skillResults) {\n                        //If an error is thrown\n                        if (err) {\n                            returnObj['message'] = 'Our database servers maybe down. Please try again.';\n                            returnObj['savedBehaviours'] = behaviours;\n                            returnObj['skillTitle'] = req.body.skillid1;\n                            //Render the page wth error messages\n                            return res.render('behaviours/add-behaviour', returnObj);\n                        }\n                    });\n                }\n            }\n            secondCallback(null);\n        },fnCallback);\n    }\n    function redirectUser(fnCallBack)\n    {\n        //Update the behaviour description\n        //If all is good, return them to the behaviours page\n        req.flash('success_messages', 'The behaviour was successfully added to the database.');\n        req.session.success = true;\n        returnObj['message'] = undefined;\n        return res.redirect('/users/behaviours');\n    }\n});\n\n// When the user has edited a behaviour, update the database and return them to the behaviours page\nrouter.post('/add-behaviour/:skill', ensureAuthenticated, function (req, res, next) {\n    if (!req.body) { return res.sendStatus(400); }\n    //Set the save data to null first so its not passed if the form submission was successful\n    returnObj['savedBehaviours'] = undefined;\n    returnObj['skillTitle'] = undefined;\n    //Store variables from the submitted form\n    var behaviours = req.body;\n    var skillTitle = req.body.skillTitleBox;\n    var behaviourDesc = '';\n    var num = '';\n    returnObj['title'] ='Edit Skills/Behaviours';\n    var behaviourAdded = false;\n    var behaviourDeleted = false;\n    var skillDeleted = false;\n    //Execute these functions in series, that is 1 after the other\n    async.series([\n        filterPostData,\n        deleteSkills,\n        deleteBehaviours,\n        updateSkill,\n        updateBehaviour,\n        redirectUser\n    ], function(err, results){\n    });\n    //Filter submitted data\n    function filterPostData(fnCallback) {\n        async.eachSeries(Object.keys(behaviours), function (aBehaviour, callback) {\n            if (aBehaviour.indexOf('skillid') == -1 && aBehaviour.indexOf('behaviourid') == -1 && aBehaviour.indexOf('deletebehaviourid') == -1 && aBehaviour.indexOf('deleteskillid') == -1) {\n                delete behaviours[aBehaviour];\n            }\n            callback(null);\n        }, fnCallback);\n    }\n    //Check to see if we are deleting any skills\n    function deleteSkills(fnCallback) {\n        async.eachSeries(Object.keys(behaviours), function (aBehaviour, callback) {\n            //Delete Skill\n            if (aBehaviour.indexOf('deleteskillid') > -1) {\n                var skillToDelete = aBehaviour;\n                var skillID = String(skillToDelete.match(/[0-9]+/g));\n                connection.get().query('DELETE FROM skills WHERE skill_id = ?', [skillID], function (err, skillResults) {\n                    //If an error is thrown\n                    if (err) {\n                        returnObj['message'] = 'Our database servers maybe down. Please try again.';\n                        returnObj['savedBehaviours'] = behaviours;\n                        returnObj['skillTitle'] = req.body.skillid1;\n                        //Render the page wth error messages\n                        return res.render('behaviours/add-behaviour', returnObj);\n                    }\n                    else {\n                        behaviourDeleted = true;\n                        skillDeleted = true;\n                        fnCallback(null);\n                    }\n                });\n            }\n            else\n            {\n                callback(null);\n            }\n        }, fnCallback);\n    }\n    //Check to see if we are deleting any behaviours\n    function deleteBehaviours(fnCallback)\n    {\n        if (!skillDeleted) {\n            async.eachSeries(Object.keys(behaviours), function (aBehaviour, callback) {\n                //Delete Behaviour\n                if (aBehaviour.indexOf('deletebehaviourid') > -1) {\n                    var behaviourToDelete = aBehaviour;\n                    var behaviourID = String(behaviourToDelete.match(/[0-9]+/g));\n                    connection.get().query('DELETE behaviours FROM behaviours INNER JOIN skills ON skills.skill_id = behaviours.skill_id WHERE behaviours.behaviour_id = ?', [behaviourID], function (err, skillResults) {\n                        //If an error is thrown\n                        if (err) {\n                            returnObj['message'] = 'Our database servers maybe down. Please try again.';\n                            returnObj['savedBehaviours'] = behaviours;\n                            returnObj['skillTitle'] = req.body.skillid1;\n                            //Render the page wth error messages\n                            return res.render('behaviours/add-behaviour', returnObj);\n                        }\n                        else {\n                            behaviourDeleted = true;\n                            callback(null);\n                        }\n                    });\n                }\n                else\n                {\n                    callback(null);\n                }\n            }, fnCallback);\n        }\n        else\n        {\n            fnCallback(null);\n        }\n    }\n    //If we aren't deleting any skills or behaviours, we must be updating a skill\n    function updateSkill(fnCallback) {\n        if (!behaviourDeleted) {\n            async.eachSeries(Object.keys(behaviours), function (aBehaviour, callback) {\n                if (skillTitle != null || skillTitle != \"\") {\n                    //Update the skill name\n                    connection.get().query('UPDATE skills SET skill_title = ? WHERE skill_id = ?', [skillTitle, req.params.skill], function (err, skillResults) {\n                        //If an error is thrown\n                        if (err) {\n                            returnObj['message'] = 'Our database servers maybe down. Please try again.';\n                            returnObj['savedBehaviours'] = behaviours;\n                            returnObj['skillTitle'] = req.body.skillid1;\n                            //Render the page wth error messages\n                            return res.render('behaviours/add-behaviour', returnObj);\n                        }\n                        else {\n                            callback(null);\n                        }\n                    });\n                }\n                else {\n                    returnObj['message'] = 'One of the skills was empty, please enter a skill name';\n                    returnObj['savedBehaviours'] = behaviours;\n                    returnObj['skillTitle'] = req.body.skillid1;\n                    //Render the page wth error messages\n                    return res.render('behaviours/add-behaviour', returnObj);\n                }\n            }, fnCallback);\n        } else {\n            fnCallback(null);\n        }\n    }\n    //If we aren't deleting any skills or behaviours, we must be updating a behaviour\n    function updateBehaviour(fnCallback) {\n        async.eachSeries(Object.keys(behaviours), function (aBehaviour, callback) {\n            if(!skillDeleted && !behaviourDeleted) {\n                //Update the behaviour description\n                if (aBehaviour.indexOf('behaviourid') > -1) {\n                    if (behaviours[aBehaviour] == null || behaviours[aBehaviour] == \"\") {\n                        returnObj['message'] = 'One of the behaviours was empty, please enter a behaviour description';\n                        returnObj['savedBehaviours'] = behaviours;\n                        returnObj['skillTitle'] = req.body.skillid1;\n                        //Render the page wth error messages\n                        return res.render('behaviours/add-behaviour', returnObj);\n                    }\n                    behaviourAdded = true;\n                    behaviourDesc = behaviours[aBehaviour];\n                    //Regex to extract numbers from textarea id\n                    num = String(aBehaviour.match(/[0-9]+/g));\n                    connection.get().query('SELECT behaviour_id FROM behaviours WHERE behaviour_id = ?', num, function (err, behaviourResults) {\n                        //If an error is thrown\n                        if (err) {\n                            returnObj['message'] = 'Our database servers maybe down. Please try again.';\n                            returnObj['savedBehaviours'] = behaviours;\n                            returnObj['skillTitle'] = req.body.skillid1;\n                            //Render the page wth error messages\n                            return res.render('behaviours/add-behaviour', returnObj);\n                        }\n                        //Add Behaviour\n                        else if (behaviourResults.length <= 0) {\n                            //Creating the JSON array to store the behaviour data\n                            var behaviour = {\n                                skill_id: req.params.skill,\n                                behaviour_desc: behaviourDesc\n                            }; //End behaviour\n                            connection.get().query('INSERT INTO behaviours SET ?', [behaviour], function (err, skillResults) {\n                                //If an error is thrown\n                                if (err) {\n                                    returnObj['message'] = 'Our database servers maybe down. Please try again.';\n                                    returnObj['savedBehaviours'] = behaviours;\n                                    returnObj['skillTitle'] = req.body.skillid1;\n                                    //Render the page wth error messages\n                                    return res.render('behaviours/add-behaviour', returnObj);\n                                }\n                                else {\n                                    callback(null);\n                                }\n                            });\n                        }\n                        else\n                        {\n                            //Update Behaviour\n                            connection.get().query('UPDATE behaviours SET behaviour_desc = ? WHERE behaviour_id = ?', [behaviourDesc, num], function (err, skillResults) {\n                                //If an error is thrown\n                                if (err) {\n                                    returnObj['message'] = 'Our database servers maybe down. Please try again.';\n                                    returnObj['savedBehaviours'] = behaviours;\n                                    returnObj['skillTitle'] = req.body.skillid1;\n                                    //Render the page wth error messages\n                                    return res.render('behaviours/add-behaviour', returnObj);\n                                }\n                                else {\n                                    callback(null);\n                                }\n                            });\n                        }\n                    });\n                }\n            }\n        },fnCallback);\n    }\n    //Finally redirect the user back to the behaviours page\n    function redirectUser(fnCallback)\n    {\n        //If all is good, return them to the behaviours page\n        if (behaviourDeleted && !skillDeleted) {\n            req.flash('success_messages', 'The behaviour was successfully deleted from the database.');\n            req.session.success = true;\n            returnObj['message'] = undefined;\n            //callback(null);\n            return res.redirect('/users/behaviours');\n        }\n        else {\n            req.flash('success_messages', 'The skill ' + skillTitle + ' and behaviour(s) have been edited successfully.');\n            req.session.success = true;\n            returnObj['message'] = undefined;\n            return res.redirect('/users/behaviours');\n        }\n    }\n});\n\n// Ensure sure the user is authenticated\nfunction ensureAuthenticated(req, res, next) {\n    if (req.isAuthenticated()) { return next(); }\n    res.redirect('/');\n}\n\nmodule.exports = router;"]}