{"version":3,"sources":["wmp.es6"],"names":[],"mappings":";;AAAA;;IAAY,O;;AAEZ;;IAAY,C;;AACZ;;IAAY,K;;AAGZ;;IAAY,S;;AACZ;;IAAY,U;;AACZ;;IAAY,gB;;AACZ;;IAAY,iB;;;;AAGZ;AACA;;AARA;;AAJA;AAcA,IAAI,SAAS,QAAQ,MAAR,EAAb;;AAEA,OAAO,GAAP,CAAW,GAAX,EAAgB,mBAAhB,EAAqC,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AAC3D,KAAI,IAAI,IAAJ,CAAS,UAAT,IAAuB,CAA3B,EAA8B;AAAE,SAAO,IAAI,QAAJ,CAAa,SAAb,CAAP;AAAiC;;AAEpE;AACA,KAAI,YAAY,EAAE,OAAO,KAAT,EAAgB,SAAS,SAAzB,EAAhB;AACA,KAAI,WAAW,EAAf;;AAEG,KAAI,YAAY,SAAZ,SAAY,CAAC,QAAD,EAAc;AAChC,aAAW,kBAAX,CAA8B,IAAI,IAAJ,CAAS,QAAvC,EAAiD,UAAC,GAAD,EAAM,MAAN,EAAiB;AACjE,OAAG,GAAH,EAAQ;AACP,UAAM,KAAK,GAAL,CAAN;AACA;;AAED,aAAU,QAAV,IAAsB,MAAtB;AACA,aAAU,cAAV,IAA4B,EAAE,IAAF,CAAO,MAAP,EAAe,UAAC,KAAD;AAAA,WAAW,MAAM,QAAN,IAAkB,IAAI,OAAJ,CAAY,QAAzC;AAAA,IAAf,CAA5B;;AAEA,SAAM,IAAN,CAAW,MAAX,EAAmB,UAAC,IAAD,EAAO,EAAP,EAAc;AAChC,aAAS,IAAT,CAAc,KAAK,QAAnB;AACA;AACA,IAHD,EAGG,UAAC,SAAD,EAAe;AACjB,QAAG,SAAH,EAAc;AACb,WAAM,KAAK,SAAL,CAAN;AACA;AACD,IAPD;;AASA,YAAS,IAAT;AACA,GAlBD;AAmBA,EApBE;;AAsBA,KAAI,WAAW,SAAX,QAAW,CAAC,QAAD,EAAc;AAC/B,YAAU,qBAAV,CAAgC,QAAhC,EAA0C,UAAC,GAAD,EAAM,MAAN,EAAiB;AAC1D,OAAG,GAAH,EAAQ;AACP,UAAM,KAAK,GAAL,CAAN;AACA;;AAED,aAAU,OAAV,IAAqB,EAArB;;AAEA,SAAM,IAAN,CAAW,MAAX,EAAmB,UAAC,IAAD,EAAO,EAAP,EAAc;AAChC,WAAO,KAAK,UAAL,CAAP;AACA,cAAU,OAAV,EAAmB,IAAnB,CAAwB,IAAxB;AACA;AACA,IAJD,EAIG,UAAC,SAAD,EAAe;AACjB,QAAG,SAAH,EAAc;AACb,WAAM,KAAK,SAAL,CAAN;AACA;AACD,IARD;;AAUA,aAAU,kBAAV,IAAgC,IAAI,IAAJ,CAAS,QAAzC;;AAEA,YAAS,IAAT;AACA,GApBD;AAqBA,EAtBE;;AAwBA,KAAI,sBAAsB,SAAtB,mBAAsB,CAAC,QAAD,EAAc;AAC1C,mBAAiB,mBAAjB,CAAqC,UAAC,GAAD,EAAM,MAAN,EAAiB;AACrD,OAAG,GAAH,EAAQ;AACP,UAAM,KAAK,GAAL,CAAN;AACA;;AAED,SAAM,IAAN,CAAW,UAAU,OAAV,CAAX,EAA+B,UAAC,IAAD,EAAO,EAAP,EAAc;AAC5C,QAAI,kBAAkB,EAAE,IAAF,CACrB,MADqB,EAErB;AAAA,YAAoB,iBAAiB,QAAjB,KAA8B,KAAK,QAAvD;AAAA,KAFqB,CAAtB;;AAKA,SAAK,cAAL,IACC,kBACG,gBAAgB,KADnB,GAEG,CAHJ;AAIA;AACA,IAXD,EAWG,UAAC,SAAD,EAAe;AACjB,QAAG,SAAH,EAAc;AACb,WAAM,KAAK,SAAL,CAAN;AACA;AACD,IAfD;;AAiBA,YAAS,IAAT;AACA,GAvBD;AAwBA,EAzBE;;AA2BA,KAAI,WAAW,SAAX,QAAW,CAAC,QAAD,EAAc;AAC/B,oBAAkB,iBAAlB,CAAoC,IAAI,OAAJ,CAAY,QAAhD,EAA0D,UAAC,GAAD,EAAM,MAAN,EAAiB;AAC1E,OAAG,GAAH,EAAQ;AACP,UAAM,KAAK,GAAL,CAAN;AACA;;AAED,aAAU,OAAV,IAAqB,MAArB;;AAEA,OAAI,kBAAkB,CAAtB;;AAEA,SAAM,IAAN,CAAW,UAAU,OAAV,CAAX,EAA+B,UAAC,IAAD,EAAO,EAAP,EAAc;;AAE5C,SAAK,OAAL,IAAgB,EAAE,MAAF,CAAS,MAAT,EAAiB;AAAA,YAAO,IAAI,WAAJ,IAAmB,KAAK,QAA/B;AAAA,KAAjB,CAAhB;;AAEA,QAAI,QAAQ,CAAZ;AACA,SAAK,IAAI,SAAT,IAAsB,KAAK,OAAL,CAAtB,EAAqC;AACpC,cAAS,KAAK,OAAL,EAAc,SAAd,EAAyB,aAAlC;AACA;;AAED,SAAK,YAAL,IAAqB,KAArB;AACA,uBAAmB,KAAnB;;AAEA;AACA,IAbD,EAaG,UAAC,SAAD,EAAe;AACjB,QAAG,SAAH,EAAc;AACb,WAAM,KAAK,SAAL,CAAN;AACA;AACD,IAjBD;;AAmBA,aAAU,QAAV,EACC,EAAE,SAAF,CACC,UAAU,QAAV,CADD,EAEC;AAAA,WAAS,MAAM,QAAN,KAAmB,IAAI,OAAJ,CAAY,QAAxC;AAAA,IAFD,CADD,EAKE,YALF,IAKkB,eALlB;;AAOA,aAAU,cAAV,EAA0B,YAA1B,IAA0C,eAA1C;;AAGA,SAAM,IAAN,CAAW,UAAU,OAAV,CAAX,EAA+B,UAAC,IAAD,EAAO,EAAP,EAAc;AAC5C,SAAK,cAAL,IAAyB,KAAK,YAAL,IAAqB,eAAtB,GAAyC,GAAjE;AACA;AACA,IAHD,EAGG,UAAC,SAAD,EAAe;AACjB,QAAG,SAAH,EAAc;AACb,WAAM,KAAK,SAAL,CAAN;AACA;AACD,IAPD;;AASA,YAAS,IAAT;AACA,GAhDD;AAiDA,EAlDE;;AAoDA,KAAI,aAAa,SAAb,UAAa,CAAC,QAAD,EAAc;AACjC,oBAAkB,aAAlB,CAAgC,UAAC,GAAD,EAAM,MAAN,EAAiB;AAChD,OAAG,GAAH,EAAQ;AACP,UAAM,KAAK,GAAL,CAAN;AACA;;AAED,aAAU,SAAV,IAAuB,MAAvB;;AAEA,YAAS,IAAT;AACA,GARD;AASA,EAVE;;AAYH;AACA,OAAM,MAAN,CAAa,CACZ,SADY,EAEZ,QAFY,EAGZ,mBAHY,EAIZ,QAJY,EAKZ,UALY,CAAb,EAMG,UAAC,GAAD,EAAM,OAAN,EAAkB;;AAEpB,YAAU,WAAV,IAAyB,KAAK,SAAL,CAAe,UAAU,QAAV,CAAf,CAAzB;AACA,YAAU,UAAV,IAAwB,KAAK,SAAL,CAAe,UAAU,OAAV,CAAf,CAAxB;AACA,YAAU,UAAV,IAAwB,KAAK,SAAL,CAAe,UAAU,OAAV,CAAf,CAAxB;AACA,YAAU,YAAV,IAA0B,KAAK,SAAL,CAAe,UAAU,SAAV,CAAf,CAA1B;;AAEA,MAAI,MAAJ,CAAW,KAAX,EAAkB,SAAlB;AACA,EAdD;AAeA,CAhKD;;AAkKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsEA;AACA,SAAS,mBAAT,CAA6B,GAA7B,EAAkC,GAAlC,EAAuC,IAAvC,EAA6C;AACzC,KAAI,IAAI,eAAJ,EAAJ,EAA2B;AAAE,SAAO,MAAP;AAAgB;AAC7C,KAAI,QAAJ,CAAa,GAAb;AACH;;AAED,OAAO,OAAP,GAAiB,MAAjB","file":"wmp.js","sourcesContent":["import * as express from 'express';\n//import * as moment from '../../bower_components/bootstrap-daterangepicker/moment.min.js';\nimport * as _ from 'lodash';\nimport * as async from 'async';\n\n// model imports\nimport * as userModel from '../../models/user';\nimport * as storeModel from '../../models/store';\nimport * as transactionModel from '../../models/transactions';\nimport * as sellingHoursModel from '../../models/selling-hours';\n\n\n//let endOfWeek = moment().startOf('isoWeek').add(5,'day').format('YYYY-MM-DD');\n//let currentDate = moment().format(\"yyyy-MM-DD\");\n\nlet router = express.Router();\n\nrouter.get('/', ensureAuthenticated, function (req, res, next) {\n    if (req.user.privileged <= 2) { return res.redirect('/users/'); }\n\n\t// locals\n\tlet returnObj = { title: 'WMP', message: undefined };\n\tlet storeIds = [];\n\n    let setStores = (callback) => {\n\t\tstoreModel.getStoresByTNumber(req.user.t_number, (err, result) => {\n\t\t\tif(err) {\n\t\t\t\tthrow next(err);\n\t\t\t}\n\n\t\t\treturnObj['stores'] = result;\n\t\t\treturnObj['currentStore'] = _.find(result, (store) => store.store_id == req.session.store_id);\n\n\t\t\tasync.each(result, (item, cb) => {\n\t\t\t\tstoreIds.push(item.store_id);\n\t\t\t\tcb();\n\t\t\t}, (itemError) => {\n\t\t\t\tif(itemError) {\n\t\t\t\t\tthrow next(itemError);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcallback(null);\n\t\t});\n\t};\n\n    let setUsers = (callback) => {\n\t\tuserModel.getAllUsersByStoreIds(storeIds, (err, result) => {\n\t\t\tif(err) {\n\t\t\t\tthrow next(err);\n\t\t\t}\n\n\t\t\treturnObj['users'] = [];\n\n\t\t\tasync.each(result, (item, cb) => {\n\t\t\t\tdelete item['password'];\n\t\t\t\treturnObj['users'].push(item);\n\t\t\t\tcb();\n\t\t\t}, (itemError) => {\n\t\t\t\tif(itemError) {\n\t\t\t\t\tthrow next(itemError);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\treturnObj['selectedEmployee'] = req.user.t_number;\n\n\t\t\tcallback(null);\n\t\t});\n\t};\n\n    let setUserTransactions = (callback) => {\n\t\ttransactionModel.getUserTransactions((err, result) => {\n\t\t\tif(err) {\n\t\t\t\tthrow next(err);\n\t\t\t}\n\n\t\t\tasync.each(returnObj['users'], (item, cb) => {\n\t\t\t\tlet userTransaction = _.find(\n\t\t\t\t\tresult,\n\t\t\t\t\tuserTransactions => userTransactions.t_number === item.t_number\n\t\t\t\t);\n\n\t\t\t\titem['transactions'] =\n\t\t\t\t\tuserTransaction\n\t\t\t\t\t\t? userTransaction.count\n\t\t\t\t\t\t: 0;\n\t\t\t\tcb();\n\t\t\t}, (itemError) => {\n\t\t\t\tif(itemError) {\n\t\t\t\t\tthrow next(itemError);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcallback(null);\n\t\t});\n\t};\n\t\n    let setHours = (callback) => {\n\t\tsellingHoursModel.getHoursByStoreId(req.session.store_id, (err, result) => {\n\t\t\tif(err) {\n\t\t\t\tthrow next(err);\n\t\t\t}\n\n\t\t\treturnObj['hours'] = result;\n\n\t\t\tlet storeTotalHours = 0;\n\n\t\t\tasync.each(returnObj['users'], (item, cb) => {\n\n\t\t\t\titem['hours'] = _.filter(result, row => row.team_member == item.t_number);\n\n\t\t\t\tlet total = 0;\n\t\t\t\tfor (let hourIndex in item['hours']) {\n\t\t\t\t\ttotal += item['hours'][hourIndex].selling_hours;\n\t\t\t\t}\n\n\t\t\t\titem['totalHours'] = total;\n\t\t\t\tstoreTotalHours += total;\n\n\t\t\t\tcb();\n\t\t\t}, (itemError) => {\n\t\t\t\tif(itemError) {\n\t\t\t\t\tthrow next(itemError);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturnObj['stores'][\n\t\t\t\t_.findIndex(\n\t\t\t\t\treturnObj['stores'],\n\t\t\t\t\tstore => store.store_id === req.session.store_id\n\t\t\t\t)\n\t\t\t]['totalHours'] = storeTotalHours;\n\n\t\t\treturnObj['currentStore']['totalHours'] = storeTotalHours;\n\n\n\t\t\tasync.each(returnObj['users'], (item, cb) => {\n\t\t\t\titem['hoursPercent'] = ((item['totalHours'] / storeTotalHours) * 100);\n\t\t\t\tcb();\n\t\t\t}, (itemError) => {\n\t\t\t\tif(itemError) {\n\t\t\t\t\tthrow next(itemError);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcallback(null);\n\t\t});\n\t};\n\n    let setBudgets = (callback) => {\n\t\tsellingHoursModel.getAllBudgets((err, result) => {\n\t\t\tif(err) {\n\t\t\t\tthrow next(err);\n\t\t\t}\n\n\t\t\treturnObj['budgets'] = result;\n\n\t\t\tcallback(null);\n\t\t});\n\t};\n\n\t// async series\n\tasync.series([\n\t\tsetStores,\n\t\tsetUsers,\n\t\tsetUserTransactions,\n\t\tsetHours,\n\t\tsetBudgets\n\t], (err, results) => {\n\n\t\treturnObj['storesObj'] = JSON.stringify(returnObj['stores']);\n\t\treturnObj['usersObj'] = JSON.stringify(returnObj['users']);\n\t\treturnObj['hoursObj'] = JSON.stringify(returnObj['hours']);\n\t\treturnObj['budgetsObj'] = JSON.stringify(returnObj['budgets']);\n\n\t\tres.render('wmp', returnObj);\n\t});\n});\n\n/*\nrouter.post('/', ensureAuthenticated, (req, res, next) => {\n    if(req.body.dateRange != undefined && req.body.dateRange != '') {\n        var selectedDate = req.body.dateRange;\n        sellingHoursModel.getHoursByDate(req.session.store_id, selectedDate, (err, result) => {\n            if (err) {\n                throw next(err);\n            } //end if)\n            returnObj['hours'] = result;\n            returnObj['hoursObj'] = JSON.stringify(result);\n            returnObj['selectedDate'] = selectedDate;\n            console.log(returnObj['selectedDate']);\n            if (req.session.success) {\n                req.flash('success_messages', 'success');\n                req.session.success = false;\n            }  //end if\n            return res.redirect('/users/wmp');\n        });\n    }\n    else {\n        var data = req.body.name;\n        data = data.split(',');\n        for (var aData in data) {\n            console.log(aData);\n        }\n        //Update selling hours\n        sellingHoursModel.updateHoursByID([req.body.value, data[0], data[1], data[2]], (err, result) => {\n            if (err) {\n                return res.end('Error: ' + err.message);\n            }\n\n            //No rows affected, guess we have to insert\n            if (result == 0) {\n                utility.log({type: 'log', message: \"Selling Hours: \" + req.body.value});\n                utility.log({type: 'log', message: \"team_member: \" + data[0]});\n                utility.log({type: 'log', message: \"store_id: \" + data[1]});\n                utility.log({type: 'log', message: \"date: \" + data[2]});\n\n                var hours = {\n                    selling_hours: req.body.value,\n                    team_member: data[0],\n                    store_id: data[1],\n                    date: data[2]\n                };\n                sellingHoursModel.create(hours, (err, result) => {\n                    if (err) {\n                        return res.end('Error: ' + err.message);\n                    }\n                    res.send(JSON.stringify(req.body));\n                });\n            }\n            else\n                res.send(JSON.stringify(req.body));\n        });\n    }\n});\n\n//When a date is selected in the date picker, it reloads the page\n//Since there is only dummy data on the WMP page, this code doesn't actually update anything\nrouter.post('/ss', ensureAuthenticated, (req, res, next) => {\n    var selectedDate = req.body.dateRange;\n    returnObj['selectedDate'] = selectedDate;\n    console.log(returnObj['selectedDate']);\n    if (req.session.success) {\n        req.flash('success_messages', 'success');\n        req.session.success = false;\n    }  //end if\n    res.redirect('/users/wmp');\n});*/\n\n// Ensure sure the user is authenticated\nfunction ensureAuthenticated(req, res, next) {\n    if (req.isAuthenticated()) { return next(); }\n    res.redirect('/');\n}\n\nmodule.exports = router;"]}