{"version":3,"sources":["transactions.es6"],"names":[],"mappings":"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","file":"transactions.js","sourcesContent":["var express = require('express');\nvar connection = require('../../connection');\nvar passport = require('passport');\nvar async = require('async');\n\nvar userModel = require('../../models/user');\nvar storeModel = require('../../models/store');\nvar transactionModel = require('../../models/transactions');\n\nvar router = express.Router();\n\n// Ensure sure the user is authenticated\nfunction ensureAuthenticated(req, res, next) {\n    if (req.isAuthenticated()) {\n        return next();\n    }\n    res.redirect('/');\n}\n\n\nrouter.get('/', ensureAuthenticated, function (req, res, next) {\n    var returnObj = { title: 'Transaction History' };\n    renderTransactionHistoryPage(returnObj, req, res, next);\n});\n\n/********************************************************************************************\n ADD TRANSACTION\n ********************************************************************************************/\nrouter.get('/add-transaction', ensureAuthenticated, function (req, res, next) {\n    var returnObj = {\n        title: 'Add Transaction'\n    };\n\n    renderAddTransactionPage(returnObj, req, res, next);\n\n\n}); //end get for /add-transaction\n\nrouter.get('/add-transaction/:employee', ensureAuthenticated, function (req, res, next) {\n    if (req.user.privileged <= 2) {\n        return res.redirect('/users/');\n    }\n\n    var returnObj = {\n        title: 'Add Transaction'\n    };\n\n\n    renderAddTransactionPage(returnObj, req, res, next);\n\n}); //End get for add-transaction/:employee\n\nrouter.post('/', ensureAuthenticated, function (req, res, next) {\n    var transactionId = req.body.id;\n    transactionModel.deleteTransaction(transactionId, function(err, result) {\n        if (err) {\n            console.log('Error deleting transaction_id ' + transactionId + 'Error: ' + err.message);\n            return res.end('Error: ' + err.message);\n        }\n        res.send(transactionId);\n    });\n});\n\n//When the add transaction page is submitted\nrouter.post('/add-transaction', ensureAuthenticated, function (req, res, next) {\n    var returnObj = {\n        title: 'Add Transaction'\n    };\n\n    if (req.body.employeeDropdown == undefined) {\n        console.log(\"No user selected\");\n        returnObj['message'] = 'Please select a user';\n        return renderAddTransactionPage(returnObj, req, res, next);\n    }\n\n    if (req.body.transactionDropdown == undefined) {\n        console.log(\"No transaction selected\");\n        returnObj['message'] = 'Please select a transaction type';\n        return renderAddTransactionPage(returnObj, req, res, next);\n    }\n\n    //Get all the data from the form\n    var data = req.body;\n\n    //For transactions\n    var t_number = undefined;\n    var store_id = undefined;\n    var currentDate = undefined;\n    var transaction_type = undefined;\n\n    //For Transaction Items\n    var activation_type = undefined;\n    var device_type = undefined;\n    var warranty_type = undefined;\n    var attached = undefined;\n    var revenue = 0;\n    var num_of_accessories = undefined;\n    var sbs_activation = undefined;\n\n    //For Additional Metrics\n    var hasMetrics = false;\n    var hasItems = false;\n\n    var learning_sessions = undefined;\n    var learning_sessions_count = data.learningSessionsCount; // Get the value from the input\n    //Assign corresponding id if the value is greater than 0\n    if (learning_sessions_count > 0) {\n        learning_sessions = 1;\n        hasMetrics = true;\n    }\n\n    var credit_card = undefined;\n    var credit_card_count = data.creditCardCount; // Get the value from the input\n    //Assign corresponding id if the value is greater than 0\n    if (credit_card_count > 0) {\n        credit_card = 6;\n        hasMetrics = true;\n    }\n\n    var appointments = undefined;\n    var appointments_count = data.appointmentsCount; // Get the value from the input\n    //Assign corresponding id if the value is greater than 0\n    if (appointments_count > 0) {\n        appointments = 3;\n        hasMetrics = true;\n    }\n\n    var aotm = undefined;\n    var aotm_count = data.aotmCount; // Get the value from the input\n    //Assign corresponding id if the value is greater than 0\n    if (aotm_count > 0) {\n        aotm = 2;\n        hasMetrics = true;\n    }\n\n    var critters = undefined;\n    var critters_count = data.crittersCount; // Get the value from the input\n    //Assign corresponding id if the value is greater than 0\n    if (critters_count > 0) {\n        critters = 4;\n        hasMetrics = true;\n    }\n\n    var donations = undefined;\n    var donations_count = data.donationsCount; // Get the value from the input\n    //Assign corresponding id if the value is greater than 0\n    if (donations_count > 0) {\n        donations = 5;\n        hasMetrics = true;\n    }\n\n    var transaction = undefined;\n    var transaction_items = undefined;\n\n    //Objects for metrics\n    var learning_sessions_obj = undefined;\n    var credit_card_obj = undefined;\n    var appointments_obj = undefined;\n    var aotm_obj = undefined;\n    var critters_obj = undefined;\n    var donations_obj = undefined;\n\n    var metrics = undefined;\n\n    transaction_items = data;\n\n\n    //Call the following methods in order\n    async.series([getTNumber, getStoreID, getData, addTransaction, addTransactionItems, addMetrics, pageRedirect]);\n\n\n    /**\n     * First method in the async series\n     * Assigned t_number\n     * @param fnCallback\n     */\n    function getTNumber(fnCallback) {\n        t_number = req.body.employeeDropdown;\n\n        fnCallback(null);\n    }\n\n\n    /**\n     * Second method in the async series\n     * Get the users store number by their t_number\n     * @param fnCallback\n     */\n    function getStoreID(fnCallback) {\n        store_id = userModel.getById(t_number, function (err, rows) {\n            if (err) {\n                throw next(err);\n            }\n            else if (rows.length <= 0) {\n                console.error('Invalid profile id.');\n                fnCallback(null);\n                return res.redirect('/users/');\n\n            }\n            else {\n                store_id = rows[0].store_id;\n                fnCallback(null);\n                return store_id;\n            }\n        });\n    } //End getStoreID\n\n    /**\n     * Third method in the async series\n     * Gets all the data from the form and stores it in objects\n     * @param fnCallback\n     */\n    function getData(fnCallback) {\n        currentDate = getCurrentDate();\n        transaction_type = data.transactionDropdown;\n\n        //Transaction Items\n        activation_type = data.activationDropdown;\n        device_type = data.deviceDropdown;\n        warranty_type = data.warrantyDropdown;\n        attached = data.attachedDropdown;\n\n        if (data.revenueText != '') {\n            revenue = data.revenueText;\n        }\n\n        num_of_accessories = data.accessoryCount;\n\n        if (data.sbsActivation == \"on\") {\n            sbs_activation = 1;\n        } else {\n            sbs_activation = 0;\n        }\n\n        //Transaction object\n        transaction = {\n            t_number: t_number,\n            store_id: store_id,\n            transaction_date: currentDate,\n            transaction_type: transaction_type\n        };\n\n\n\n        //Learning sessions object\n        learning_sessions_obj = {\n            transaction_id: undefined,\n            additional_metrics_items_type: learning_sessions,\n            additional_metrics_items_count: learning_sessions_count\n        };\n\n        //Credit card object\n        credit_card_obj = {\n            transaction_id: undefined,\n            additional_metrics_items_type: credit_card,\n            additional_metrics_items_count: credit_card_count\n        };\n\n        //Appointments object\n        appointments_obj = {\n            transaction_id: undefined,\n            additional_metrics_items_type: appointments,\n            additional_metrics_items_count: appointments_count\n        };\n\n        //AOTM object\n        aotm_obj = {\n            additional_metrics_items_type: aotm,\n            additional_metrics_items_count: aotm_count\n        };\n\n        //Critters object\n        critters_obj = {\n            transaction_id: undefined,\n            additional_metrics_items_type: critters,\n            additional_metrics_items_count: critters_count\n        };\n\n        //Donations object\n        donations_obj = {\n            transaction_id: undefined,\n            additional_metrics_items_type: donations,\n            additional_metrics_items_count: donations_count\n        };\n\n\n        //Store the objects in an array for looping\n        metrics = [learning_sessions_obj, credit_card_obj, appointments_obj, aotm_obj, critters_obj, donations_obj]\n        fnCallback(null);\n    }//end getData\n\n    /**\n     * Fourth method in the async series\n     * @param fnCallback\n     */\n\n    function addTransaction(fnCallback) {\n        //Add the transaction models and assign the insert ID to the other objects\n        transactionModel.addTransaction(transaction, function (err, result) {\n            transaction_items['transaction_id'] = result.insertId;\n            learning_sessions_obj['transaction_id'] = result.insertId;\n            credit_card_obj['transaction_id'] = result.insertId;\n            appointments_obj['transaction_id'] = result.insertId;\n            aotm_obj['transaction_id'] = result.insertId;\n            critters_obj['transaction_id'] = result.insertId;\n            donations_obj['transaction_id'] = result.insertId;\n            fnCallback(null);\n        });\n    } //End addTransaction\n\n    /**\n     * Fifth method in the async series\n     * Add the transaction items, if there are some\n     * @param fnCallback\n     */\n\n    function addTransactionItems(fnCallback) {\n\n        //Check if any of the these fields have be filled out, to know if we are inserting or not\n        if (activation_type != undefined || device_type != undefined || warranty_type != undefined || attached != 'no' || revenue != '' || num_of_accessories != '0' || sbs_activation != 0) {\n            hasItems = true\n        }\n\n        //If there are transaction items, insert record to the DB\n        if (hasItems) {\n            var transaction_item = {};\n            //Add the object(s) to the database\n            async.eachSeries(Object.keys(transaction_items), function (item, callback) {\n                if(item.indexOf('activationDropdown') >= 0) {\n                    transaction_item['activation_type'] = transaction_items[item];\n                    callback(null);\n                }\n                else if(item.indexOf('sbsActivation') >= 0) {\n                    transaction_item['sbs_activation'] = 1;\n                    callback(null);\n                }\n                else if(item.indexOf('deviceDropdown') >= 0) {\n                    transaction_item['device_type'] = transaction_items[item];\n                    callback(null);\n                }\n                else if(item.indexOf('warrantyDropdown') >= 0) {\n                    transaction_item['warranty_type'] = transaction_items[item];\n                    callback(null);\n                }\n                else if(item.indexOf('attachedDropdown') >= 0) {\n                    transaction_item['attached'] = transaction_items[item];\n                    callback(null);\n                }\n                else if(item.indexOf('accessoryCount') >= 0) {\n                    transaction_item['num_of_accessories'] = transaction_items[item];\n                    callback(null);\n                }\n                else if(item.indexOf('revenue') >= 0) {\n                    transaction_item['revenue'] = transaction_items[item]\n                    if(transaction_item['revenue'] == ''){\n                        transaction_item['revenue'] = 0.00;\n                    }\n                    transaction_item['transaction_id'] = transaction_items['transaction_id'];\n                    if(transaction_item['sbs_activation'] == undefined){\n                        transaction_item['sbs_activation'] = 0;\n                    }\n                    transactionModel.addTransactionItems(transaction_item, function (err, result) {\n                        if (!err) {\n                            callback(null);\n                        } else {\n                            callback(null);\n                            console.log(err);\n                        }\n                    });\n                }\n                else {\n                   callback(null);\n                }\n            });\n        } else {\n            console.log(\"No Items\");\n        }\n        fnCallback(null);\n    } //End Transaction Items\n\n\n    /**\n     * Sixth method in the async series\n     * Add any additional metrics te transaction may have\n     * @param fnCallback\n     */\n    function addMetrics(fnCallback) {\n        if (hasMetrics) {\n            console.log(\"Additional Metrics\");\n\n            //Foreach object in the array of metrics objects\n            metrics.forEach(function (item) {\n                if (item.additional_metrics_items_count > 0) {\n                    transactionModel.addAdditionalMetrics(item, function (err, result) {\n                        if (!err) {\n                            console.log(item + ' added')\n                        } else {\n                            console.log('Error!' + item + ' not added' + err)\n                        }\n                    });\n                } else {\n                    console.log(item + \" not added\")\n                }\n            });\n\n        } else {\n            console.log(\"No Metrics\");\n        }\n\n        fnCallback(null);\n    } //End addMetrics\n\n    /**\n     * Seventh and last method in the async series\n     * Simply redirect to the summary page\n     * @param fnCallback\n     */\n\n    function pageRedirect(fnCallback) {\n        if(req.body.saveTransactionNew == undefined){\n            req.session.success = true;\n            res.redirect('/users/transactions');\n        } else {\n            res.redirect('/users/transactions/add-transaction');\n        }\n\n        fnCallback(null);\n    }\n\n}); //end post for add-transaction\n\n\n/**\n * Custom function that return the current date and time\n * @returns {string} in yyyy:mm:dd hh:mm:ss format\n */\nfunction getCurrentDate() {\n    var date = new Date();\n\n    var hour = date.getHours();\n    hour = (hour < 10 ? \"0\" : \"\") + hour;\n\n    var min = date.getMinutes();\n    min = (min < 10 ? \"0\" : \"\") + min;\n\n    var sec = date.getSeconds();\n    sec = (sec < 10 ? \"0\" : \"\") + sec;\n\n    var year = date.getFullYear();\n\n    var month = date.getMonth() + 1;\n    month = (month < 10 ? \"0\" : \"\") + month;\n\n    var day = date.getDate();\n    day = (day < 10 ? \"0\" : \"\") + day;\n\n    var today = year + \":\" + month + \":\" + day + \" \" + hour + \":\" + min + \":\" + sec;\n\n    return today;\n} //end getCurrentDate\n\n/**\n * This method pulls all the data required to load the transaction history page from the database and loads the page\n * @param returnObj\n * @param req\n * @param res\n * @param next\n */\nfunction renderTransactionHistoryPage(returnObj, req, res, next) {\n    storeModel.getStoresByTNumber(req.user.t_number,function(err, result) {\n        if(err) {\n            throw next(err);\n        } //end if\n\n        returnObj['stores'] = result;\n\n        transactionModel.getTransactionss(function(err, result) {\n            if(err) {\n                throw next(err);\n            } //end if\n\n            returnObj['transactions'] = result;\n\n            transactionModel.getTransactionTypes(function (err, result) {\n                if (err) {\n                    throw next(err);\n                } ///end if\n\n                returnObj['transactionTypes'] = {};\n                for(var index in result) {\n                    returnObj['transactionTypes'][result[index].transaction_type_id] = result[index].transaction_types;\n                } //end for\n\n                transactionModel.getTransactionItems(function(err, result) {\n                    if(err) {\n                        throw next(err);\n                    } //end if\n\n                    returnObj['transactionItems'] = result;\n\n                    transactionModel.getAdditionalMetricItems(function(err, result) {\n                        if (err) {\n                            throw next(err);\n                        } //end if\n\n                        returnObj['additionalMetricItems'] = result;\n\n                        transactionModel.getActivation(function (err, result) {\n                            if (err) {\n                                throw next(err);\n                            } //end if\n\n                            returnObj['activationTypes'] = {};\n                            for(var index in result) {\n                                returnObj['activationTypes'][result[index].activation_type_id] = result[index].activation_types;\n                            } //end if\n\n                            transactionModel.getDevice(function (err, result) {\n                                if (err) {\n                                    throw next(err);\n                                } //end if\n\n                                returnObj['deviceTypes'] = {};\n                                for(var index in result) {\n                                    returnObj['deviceTypes'][result[index].device_type_id] = result[index].device_types;\n                                } //end for\n\n                                transactionModel.getWarranty(function (err, result) {\n                                    if (err) {\n                                        throw next(err);\n                                    } //end if\n\n                                    returnObj['warrantyTypes'] = {};\n                                    for(var index in result) {\n                                        returnObj['warrantyTypes'][result[index].warranty_type_id] = result[index].warranty_types;\n                                    } //end for\n\n                                    returnObj['stores'].forEach(function(storeVal, storeIndex) {\n                                        returnObj['stores'][storeIndex]['transactions'] = returnObj['transactions'].filter(function(transVal) {\n                                            return transVal.store_id === storeVal.store_id;\n                                        }); //end filter;\n\n                                        returnObj['stores'][storeIndex]['transactions'].forEach(function(transVal, transIndex) {\n                                            returnObj['stores'][storeIndex]['transactions'][transIndex]['transactionItems'] = returnObj['transactionItems']\n                                                .filter(function(transItemVal) {\n                                                    return transItemVal.transaction_id === transVal.transaction_id;\n                                                }); //end filter\n\n                                            returnObj['stores'][storeIndex]['transactions'][transIndex]['additionalMetricItems'] = returnObj['additionalMetricItems']\n                                                .filter(function(addMetricItemVal) {\n                                                    return addMetricItemVal.transaction_id === transVal.transaction_id;\n                                                });\n\n                                            returnObj['stores'][storeIndex]['transactions'][transIndex]['totalRevenue'] = 0;\n                                            returnObj['stores'][storeIndex]\n                                                ['transactions'][transIndex]['transactionItems'].forEach(function(transItemVal, transItemIndex) {\n                                                returnObj['stores'][storeIndex]\n                                                    ['transactions'][transIndex]\n                                                    ['transactionItems'][transItemIndex]\n                                                    ['activation'] = returnObj['activationTypes'][transItemVal.activation_type];\n                                                returnObj['stores'][storeIndex]\n                                                    ['transactions'][transIndex]\n                                                    ['transactionItems'][transItemIndex]\n                                                    ['device'] = returnObj['deviceTypes'][transItemVal.device_type];\n                                                returnObj['stores'][storeIndex]\n                                                    ['transactions'][transIndex]\n                                                    ['transactionItems'][transItemIndex]\n                                                    ['warranty'] = returnObj['warrantyTypes'][transItemVal.warranty_type];\n                                                returnObj['stores'][storeIndex]\n                                                    ['transactions'][transIndex]\n                                                    ['transactionItems'][transItemIndex]\n                                                    ['transactionType'] = returnObj['transactionTypes'][transVal.transaction_type];\n                                                returnObj['stores'][storeIndex]['transactions'][transIndex]['totalRevenue'] += transItemVal.revenue;\n                                            }); //end for each\n                                        }); //end for each\n                                    }); //end for each\n\n                                    returnObj['storesObj'] = JSON.stringify(returnObj['stores']);\n\n                                    var storeIds = [];\n                                    for(var storeIndex in returnObj['stores']) {\n                                        storeIds.push(returnObj['stores'][storeIndex].store_id);\n                                    }\n\n                                    userModel.getAllUsersByStoreIds(storeIds, function(err, result) {\n                                            if(err) {\n                                                throw next(err);\n                                            } //end if\n\n                                            //Display success message on adding a transaction\n                                            if(req.session.success) {\n                                                req.flash('success_messages', 'Transaction successfully added!');\n                                                res.locals.success_messages = req.flash('success_messages');\n                                                req.session.success = false;\n                                            }  //end if\n                                            returnObj['users'] = result;\n                                            returnObj['usersObj'] = JSON.stringify(result);\n                                            returnObj['selectedEmployee']= req.user.t_number;\n                                            return res.render('transactions/transactions', returnObj);\n                                    }); //getAllUsersByStoreID;\n                                }); //getWarranty\n                            }); //get devices\n                        }); //end getActivation\n                    }); //end getAdditionalMetricItems\n                }); //end getTransactionItems\n            }); //end getTransactionTypes\n        }); //end getTransactions\n    }); //end getStoresByTNumber\n} //End renderTransactionHistoryPage\n\n/**\n * This method pulls all the data required to load the add-transaction page from the database and loads the page\n * @param returnObj\n * @param req\n * @param res\n * @param next\n */\nfunction renderAddTransactionPage(returnObj, req, res, next) {\n    userModel.getAllUsersByStoreID(req.user.store_id, function (err, userResult) {\n        //If an error is thrown\n        if (err) {\n            returnObj['message'] = req.flash('Our database servers maybe down. Please try again.');\n            //Render the page wth error messages\n            return res.render('transactions/add-transaction', returnObj);\n        } //End if\n\n        transactionModel.getTransactions(function (err, transactionResults) {\n            //If an error is thrown\n            if (err) {\n                returnObj['message'] = req.flash('Our database servers maybe down. Please try again.');\n                //Render the page wth error messages\n                return res.render('transactions/add-transaction', returnObj);\n            } //End if\n\n            transactionModel.getActivation(function (err, activationResults) {\n                //If an error is thrown\n                if (err) {\n                    returnObj['message'] = req.flash('Our database servers maybe down. Please try again.');\n                    //Render the page wth error messages\n                    return res.render('transactions/add-transaction', returnObj);\n                } //End if\n\n                transactionModel.getDevice(function (err, deviceResults) {\n                    //If an error is thrown\n                    if (err) {\n                        returnObj['message'] = req.flash('Our database servers maybe down. Please try again.');\n                        //Render the page wth error messages\n                        return res.render('transactions/add-transaction', returnObj);\n                    } //End if\n\n                    transactionModel.getWarranty(function (err, warrantyResults) {\n                        //If an error is thrown\n                        if (err) {\n                            returnObj['message'] = req.flash('Our database servers maybe down. Please try again.');\n                            //Render the page wth error messages\n                            return res.render('transactions/add-transaction', returnObj);\n                        } //End if\n                        returnObj['users'] = userResult;\n                        returnObj['transactions'] = transactionResults;\n                        returnObj['activations'] = activationResults;\n                        returnObj['devices'] = deviceResults;\n                        returnObj['warrantys'] = warrantyResults;\n                        returnObj['selectedEmployee'] = req.user.t_number;\n\n                        returnObj['warrentysObj'] = JSON.stringify(returnObj['warrantys']);\n                        returnObj['devicesObj'] = JSON.stringify(returnObj['devices']);\n                        returnObj['activationsObj'] = JSON.stringify(returnObj['activations']);\n\n                        return res.render('transactions/add-transaction', returnObj);\n                    }); //end getWarranty\n                }); //end getDevice\n            }); //end getActivation\n        }); //end getTransactions\n    }); //end getAll\n} //End renderAddTransactionPage\n\n\nmodule.exports = router;"]}