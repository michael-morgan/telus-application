{"version":3,"sources":["transactions.es6"],"names":[],"mappings":"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","file":"transactions.js","sourcesContent":["import * as express from 'express';\nimport * as connection from '../../connection';\nimport * as utility from '../../utility';\nimport * as passport from 'passport';\nimport * as async from 'async';\n\nimport * as userModel from '../../models/user';\nimport * as storeModel from '../../models/store';\nimport * as transactionModel from '../../models/transactions';\n\nlet router = express.Router();\n\n// Ensure sure the user is authenticated\nfunction ensureAuthenticated(req, res, next) {\n\treturn req.isAuthenticated()\n\t\t? next()\n\t\t: res.redirect('/');\n}\n\nrouter.get('/', ensureAuthenticated, (req, res, next) => {\n\n\t// locals\n\tlet returnObj = { title: 'Transaction History' };\n\tlet storeIds = [];\n\n\t// functions for async series\n\tlet setStores = (callback) => {\n\t\tstoreModel.getStoresByTNumber(req.user.t_number, (err, result) => {\n\t\t\tif (err) {\n\t\t\t\tthrow next(err);\n\t\t\t}\n\n\t\t\treturnObj['stores'] = result;\n\t\t\tcallback(null);\n\t\t});\n\t};\n\n\tlet setTransactions = (callback) => {\n\t\ttransactionModel.getTransactionss((err, result) => {\n\t\t\tif (err) {\n\t\t\t\tthrow next(err);\n\t\t\t}\n\n\t\t\treturnObj['transactions'] = result;\n\t\t\tcallback(null);\n\t\t});\n\t};\n\n\tlet setTransactionTypes = (callback) => {\n\t\ttransactionModel.getTransactionTypes((err, result) => {\n\t\t\tif (err) {\n\t\t\t\tthrow next(err);\n\t\t\t}\n\n\t\t\treturnObj['transactionTypes'] = {};\n\n\t\t\tasync.each(result, (item, cb) => {\n\t\t\t\treturnObj['transactionTypes'][item.transaction_type_id] = item.transaction_types;\n\t\t\t\tcb();\n\t\t\t}, (itemError) => {\n\t\t\t\tif(itemError) {\n\t\t\t\t\tthrow next(itemError);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcallback(null);\n\t\t});\n\t};\n\n\tlet setTransactionItems = (callback) => {\n\t\ttransactionModel.getTransactionItems((err, result) => {\n\t\t\tif (err) {\n\t\t\t\tthrow next(err);\n\t\t\t}\n\n\t\t\treturnObj['transactionItems'] = result;\n\t\t\tcallback(null);\n\t\t});\n\t};\n\n\tlet setAdditionalMetricItems = (callback) => {\n\t\ttransactionModel.getAdditionalMetricItems((err, result) => {\n\t\t\tif (err) {\n\t\t\t\tthrow next(err);\n\t\t\t}\n\n\t\t\treturnObj['additionalMetricItems'] = result;\n\t\t\tcallback(null);\n\t\t});\n\t};\n\n\tlet setActivation = (callback) => {\n\t\ttransactionModel.getActivation((err, result) => {\n\t\t\tif (err) {\n\t\t\t\tthrow next(err);\n\t\t\t}\n\n\t\t\treturnObj['activationTypes'] = {};\n\n\t\t\tasync.each(result, (item, cb) => {\n\t\t\t\treturnObj['activationTypes'][item.activation_type_id] = item.activation_types;\n\t\t\t\tcb();\n\t\t\t}, (itemError) => {\n\t\t\t\tif(itemError) {\n\t\t\t\t\tthrow next(itemError);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcallback(null);\n\t\t});\n\t};\n\n\tlet setDevices = (callback) => {\n\t\ttransactionModel.getDevice((err, result) => {\n\t\t\tif (err) {\n\t\t\t\tthrow next(err);\n\t\t\t}\n\n\t\t\treturnObj['deviceTypes'] = {};\n\n\t\t\tasync.each(result, (item, cb) => {\n\t\t\t\treturnObj['deviceTypes'][item.device_type_id] = item.device_types;\n\t\t\t\tcb();\n\t\t\t}, (itemError) => {\n\t\t\t\tif(itemError) {\n\t\t\t\t\tthrow next(itemError);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcallback(null);\n\t\t});\n\t};\n\n\tlet setWarranties = (callback) => {\n\t\ttransactionModel.getWarranty((err, result) => {\n\t\t\tif (err) {\n\t\t\t\tthrow next(err);\n\t\t\t}\n\n\t\t\treturnObj['warrantyTypes'] = {};\n\n\t\t\tasync.each(result, (item, cb) => {\n\t\t\t\treturnObj['warrantyTypes'][item.warranty_type_id] = item.warranty_types;\n\t\t\t\tcb();\n\t\t\t}, (itemError) => {\n\t\t\t\tif(itemError) {\n\t\t\t\t\tthrow next(itemError);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturnObj['stores'].forEach((storeVal, storeIndex) => {\n\t\t\t\treturnObj['stores'][storeIndex]['transactions'] = returnObj['transactions'].filter(\n\t\t\t\t\t(transVal) => transVal.store_id === storeVal.store_id\n\t\t\t\t);\n\n\t\t\t\treturnObj['stores'][storeIndex]['transactions'].forEach((transVal, transIndex) => {\n\t\t\t\t\treturnObj['stores'][storeIndex]['transactions'][transIndex]['transactionItems'] = returnObj['transactionItems']\n\t\t\t\t\t\t.filter((transItemVal) => transItemVal.transaction_id === transVal.transaction_id);\n\n\t\t\t\t\treturnObj['stores'][storeIndex]['transactions'][transIndex]['additionalMetricItems'] = returnObj['additionalMetricItems']\n\t\t\t\t\t\t.filter((addMetricItemVal) => addMetricItemVal.transaction_id === transVal.transaction_id);\n\n\t\t\t\t\treturnObj['stores'][storeIndex]['transactions'][transIndex]['totalRevenue'] = 0;\n\t\t\t\t\treturnObj['stores'][storeIndex]\n\t\t\t\t\t\t['transactions'][transIndex]['transactionItems'].forEach((transItemVal, transItemIndex) => {\n\t\t\t\t\t\treturnObj['stores'][storeIndex]\n\t\t\t\t\t\t\t['transactions'][transIndex]\n\t\t\t\t\t\t\t['transactionItems'][transItemIndex]\n\t\t\t\t\t\t\t['activation'] = returnObj['activationTypes'][transItemVal.activation_type];\n\t\t\t\t\t\treturnObj['stores'][storeIndex]\n\t\t\t\t\t\t\t['transactions'][transIndex]\n\t\t\t\t\t\t\t['transactionItems'][transItemIndex]\n\t\t\t\t\t\t\t['device'] = returnObj['deviceTypes'][transItemVal.device_type];\n\t\t\t\t\t\treturnObj['stores'][storeIndex]\n\t\t\t\t\t\t\t['transactions'][transIndex]\n\t\t\t\t\t\t\t['transactionItems'][transItemIndex]\n\t\t\t\t\t\t\t['warranty'] = returnObj['warrantyTypes'][transItemVal.warranty_type];\n\t\t\t\t\t\treturnObj['stores'][storeIndex]\n\t\t\t\t\t\t\t['transactions'][transIndex]\n\t\t\t\t\t\t\t['transactionItems'][transItemIndex]\n\t\t\t\t\t\t\t['transactionType'] = returnObj['transactionTypes'][transVal.transaction_type];\n\t\t\t\t\t\treturnObj['stores'][storeIndex]['transactions'][transIndex]['totalRevenue'] += transItemVal.revenue;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturnObj['storesObj'] = JSON.stringify(returnObj['stores']);\n\n\t\t\tasync.each(returnObj['stores'], (item, cb) => {\n\t\t\t\tstoreIds.push(item.store_id);\n\t\t\t\tcb();\n\t\t\t}, (itemError) => {\n\t\t\t\tif(itemError) {\n\t\t\t\t\tthrow next(itemError);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcallback(null);\n\t\t});\n\t};\n\n\tlet setUsers = (callback) => {\n\t\tuserModel.getAllUsersByStoreIds(storeIds, (err, result) => {\n\t\t\tif(err) {\n\t\t\t\tthrow next(err);\n\t\t\t}\n\n\t\t\t//Display success message on adding a transaction\n\t\t\tif(req.session.success) {\n\t\t\t\treq.flash('success_messages', 'Transaction successfully added!');\n\t\t\t\tres.locals.success_messages = req.flash('success_messages');\n\t\t\t\treq.session.success = false;\n\t\t\t}  //end if\n\n\t\t\treturnObj['users'] = [];\n\t\t\tresult.forEach((user) => {\n\t\t\t\tdelete user['password'];\n\t\t\t\treturnObj['users'].push(user);\n\t\t\t});\n\n\t\t\treturnObj['usersObj'] = JSON.stringify(returnObj['users']);\n\t\t\treturnObj['selectedEmployee']= req.user.t_number;\n\n\t\t\tcallback(null);\n\t\t}); //getAllUsersByStoreID;\n\t};\n\n\t// async series\n\tasync.series([\n\t\tsetStores,\n\t\tsetTransactions,\n\t\tsetTransactionTypes,\n\t\tsetTransactionItems,\n\t\tsetAdditionalMetricItems,\n\t\tsetActivation,\n\t\tsetDevices,\n\t\tsetWarranties,\n\t\tsetUsers\n\t], (err, results) => {\n\t\tres.render('transactions/transactions', returnObj);\n\t});\n});\n\nrouter.get('/add-transaction', ensureAuthenticated, (req, res, next) => {\n\n\n    renderAddTransactionPage({title: 'Add Transaction'}, req, res, next);\n});\n\nrouter.get('/add-transaction/:employee', ensureAuthenticated, (req, res, next) => {\n    if (req.user.privileged <= 2) {\n        return res.redirect('/users/');\n    }\n\n    renderAddTransactionPage({title: 'Add Transaction'}, req, res, next);\n});\n\nrouter.post('/', ensureAuthenticated, (req, res, next) => {\n    let transactionId = req.body.id;\n\n    transactionModel.deleteTransaction(transactionId, (err, result) => {\n        if (err) {\n            utility.log({ type: 'error', message: 'Error deleting transaction_id ' + transactionId + 'Error: ' + err.message });\n            return res.end('Error: ' + err.message);\n        }\n\n        res.send(transactionId);\n    });\n});\n\n//When the add transaction page is submitted\nrouter.post('/add-transaction', ensureAuthenticated, (req, res, next) => {\n    let returnObj = {\n        title: 'Add Transaction'\n    };\n\n    if (req.body.employeeDropdown == undefined) {\n        utility.log({ type: 'log', message: \"No user selected\" });\n        returnObj['message'] = 'Please select a user';\n        return renderAddTransactionPage(returnObj, req, res, next);\n    }\n\n    if (req.body.transactionDropdown == undefined) {\n        utility.log({ type: 'log', message: \"No transaction selected\" });\n        returnObj['message'] = 'Please select a transaction type';\n        return renderAddTransactionPage(returnObj, req, res, next);\n    }\n\n    //Get all the data from the form\n    let data = req.body;\n\n    //For transactions\n    let t_number = req.body.employeeDropdown;\n    let store_id = req.body.storeDropdown;\n    let currentDate = undefined;\n    let transaction_type = undefined;\n\n    //For Transaction Items\n    let activation_type = undefined;\n    let device_type = undefined;\n    let warranty_type = undefined;\n    let attached = undefined;\n    let revenue = 0;\n    let num_of_accessories = undefined;\n    let sbs_activation = undefined;\n\n    //For Additional Metrics\n    let hasMetrics = false;\n    let hasItems = false;\n\n    let learning_sessions = undefined;\n    let learning_sessions_count = data.learningSessionsCount; // Get the value from the input\n\n    //Assign corresponding id if the value is greater than 0\n    if (learning_sessions_count > 0) {\n        learning_sessions = 1;\n        hasMetrics = true;\n    }\n\n    let credit_card = undefined;\n    let credit_card_count = data.creditCardCount; // Get the value from the input\n\n    //Assign corresponding id if the value is greater than 0\n    if (credit_card_count > 0) {\n        credit_card = 6;\n        hasMetrics = true;\n    }\n\n    let appointments = undefined;\n    let appointments_count = data.appointmentsCount; // Get the value from the input\n\n    //Assign corresponding id if the value is greater than 0\n    if (appointments_count > 0) {\n        appointments = 3;\n        hasMetrics = true;\n    }\n\n    let aotm = undefined;\n    let aotm_count = data.aotmCount; // Get the value from the input\n\n    //Assign corresponding id if the value is greater than 0\n    if (aotm_count > 0) {\n        aotm = 2;\n        hasMetrics = true;\n    }\n\n    let critters = undefined;\n    let critters_count = data.crittersCount; // Get the value from the input\n\n    //Assign corresponding id if the value is greater than 0\n    if (critters_count > 0) {\n        critters = 4;\n        hasMetrics = true;\n    }\n\n    let donations = undefined;\n    let donations_count = data.donationsCount; // Get the value from the input\n\n    //Assign corresponding id if the value is greater than 0\n    if (donations_count > 0) {\n        donations = 5;\n        hasMetrics = true;\n    }\n\n    let transaction = undefined;\n    let transaction_items = undefined;\n\n    //Objects for metrics\n    let learning_sessions_obj = undefined;\n    let credit_card_obj = undefined;\n    let appointments_obj = undefined;\n    let aotm_obj = undefined;\n    let critters_obj = undefined;\n    let donations_obj = undefined;\n\n    let metrics = undefined;\n\n    transaction_items = data;\n\n    //Call the following methods in order\n    async.series([getData, addTransaction, addTransactionItems, addMetrics, pageRedirect]);\n\n\n    ///**\n    // * Second method in the async series\n    // * Get the users store number by their t_number\n    // * @param fnCallback\n    // */\n    //function getStoreID(fnCallback) {\n    //    storeModel.getFirstStoreByTNumber(t_number, (err, rows) => {\n    //        if (err) {\n    //            throw next(err);\n    //        }\n    //        else if (rows.length <= 0) {\n    //            console.error('Invalid profile id.');\n    //            return res.redirect('/users/');\n    //        }\n    //        else {\n    //            store_id = rows[0].store_id;\n    //            fnCallback(null);\n    //        }\n    //    });\n    //} //End getStoreID\n\n    /**\n     * Third method in the async series\n     * Gets all the data from the form and stores it in objects\n     * @param fnCallback\n     */\n    function getData(fnCallback) {\n        currentDate = utility.currentDate();\n        transaction_type = data.transactionDropdown;\n\n        //Transaction Items\n        activation_type = data.activationDropdown;\n        device_type = data.deviceDropdown;\n        warranty_type = data.warrantyDropdown;\n        attached = data.attachedDropdown;\n\n        if (data.revenueText != '') {\n            revenue = data.revenueText;\n        }\n\n        num_of_accessories = data.accessoryCount;\n\n        if (data.sbsActivation == \"on\") {\n            sbs_activation = 1;\n        } else {\n            sbs_activation = 0;\n        }\n\n        //Transaction object\n        transaction = {\n            t_number: t_number,\n            store_id: store_id,\n            transaction_date: currentDate,\n            transaction_type: transaction_type\n        };\n\n\n\n        //Learning sessions object\n        learning_sessions_obj = {\n            transaction_id: undefined,\n            additional_metrics_items_type: learning_sessions,\n            additional_metrics_items_count: learning_sessions_count\n        };\n\n        //Credit card object\n        credit_card_obj = {\n            transaction_id: undefined,\n            additional_metrics_items_type: credit_card,\n            additional_metrics_items_count: credit_card_count\n        };\n\n        //Appointments object\n        appointments_obj = {\n            transaction_id: undefined,\n            additional_metrics_items_type: appointments,\n            additional_metrics_items_count: appointments_count\n        };\n\n        //AOTM object\n        aotm_obj = {\n            additional_metrics_items_type: aotm,\n            additional_metrics_items_count: aotm_count\n        };\n\n        //Critters object\n        critters_obj = {\n            transaction_id: undefined,\n            additional_metrics_items_type: critters,\n            additional_metrics_items_count: critters_count\n        };\n\n        //Donations object\n        donations_obj = {\n            transaction_id: undefined,\n            additional_metrics_items_type: donations,\n            additional_metrics_items_count: donations_count\n        };\n\n        //Store the objects in an array for looping\n        metrics = [learning_sessions_obj, credit_card_obj, appointments_obj, aotm_obj, critters_obj, donations_obj];\n\n        fnCallback(null);\n    }//end getData\n\n    /**\n     * Fourth method in the async series\n     * @param fnCallback\n     */\n    function addTransaction(fnCallback) {\n        //Add the transaction models and assign the insert ID to the other objects\n        transactionModel.addTransaction(transaction, (err, result) => {\n            transaction_items['transaction_id'] = result.insertId;\n            learning_sessions_obj['transaction_id'] = result.insertId;\n            credit_card_obj['transaction_id'] = result.insertId;\n            appointments_obj['transaction_id'] = result.insertId;\n            aotm_obj['transaction_id'] = result.insertId;\n            critters_obj['transaction_id'] = result.insertId;\n            donations_obj['transaction_id'] = result.insertId;\n            fnCallback(null);\n        });\n    } //End addTransaction\n\n    /**\n     * Fifth method in the async series\n     * Add the transaction items, if there are some\n     * @param fnCallback\n     */\n    function addTransactionItems(fnCallback) {\n\n        //Check if any of the these fields have be filled out, to know if we are inserting or not\n        hasItems = activation_type != undefined || device_type != undefined ||\n            warranty_type != undefined || attached != 'no' || revenue != '' ||\n            num_of_accessories != '0' || sbs_activation != 0;\n\n        //If there are transaction items, insert record to the DB\n        if (hasItems) {\n            let transaction_item = {};\n\n            //Add the object(s) to the database\n            async.eachSeries(Object.keys(transaction_items), (item, callback) => {\n                if(item.indexOf('activationDropdown') >= 0) {\n                    transaction_item['activation_type'] = transaction_items[item];\n                    callback(null);\n                }\n                else if(item.indexOf('sbsActivation') >= 0) {\n                    transaction_item['sbs_activation'] = 1;\n                    callback(null);\n                }\n                else if(item.indexOf('deviceDropdown') >= 0) {\n                    transaction_item['device_type'] = transaction_items[item];\n                    callback(null);\n                }\n                else if(item.indexOf('warrantyDropdown') >= 0) {\n                    transaction_item['warranty_type'] = transaction_items[item];\n                    callback(null);\n                }\n                else if(item.indexOf('attachedDropdown') >= 0) {\n                    transaction_item['attached'] = transaction_items[item];\n                    callback(null);\n                }\n                else if(item.indexOf('accessoryCount') >= 0) {\n                    transaction_item['num_of_accessories'] = transaction_items[item];\n                    callback(null);\n                }\n                else if(item.indexOf('revenue') >= 0) {\n                    transaction_item['revenue'] = transaction_items[item];\n                    if(transaction_item['revenue'] == ''){\n                        transaction_item['revenue'] = 0.00;\n                    }\n                    transaction_item['transaction_id'] = transaction_items['transaction_id'];\n                    if(transaction_item['sbs_activation'] == undefined){\n                        transaction_item['sbs_activation'] = 0;\n                    }\n                    transactionModel.addTransactionItems(transaction_item, (err, result) => {\n                        if (!err) {\n                            callback(null);\n                        } else {\n                            utility.log({ type: 'error', message: err });\n                            callback(null);\n                        }\n                    });\n                }\n                else {\n                   callback(null);\n                }\n            });\n        } else {\n            utility.log({ type: 'log', message: \"No Items\" });\n        }\n\n        fnCallback(null);\n    } //End Transaction Items\n\n\n    /**\n     * Sixth method in the async series\n     * Add any additional metrics te transaction may have\n     * @param fnCallback\n     */\n    function addMetrics(fnCallback) {\n        if (hasMetrics) {\n            utility.log({ type: 'log', message: \"Additional Metrics\" });\n\n            //Foreach object in the array of metrics objects\n            metrics.forEach((item) => {\n                if (item.additional_metrics_items_count > 0) {\n                    transactionModel.addAdditionalMetrics(item, (err, result) => {\n                        if (!err) {\n                            utility.log({ type: 'log', message: item + ' added' });\n                        } else {\n                            utility.log({ type: 'error', message: 'Error!' + item + ' not added' + err });\n                        }\n                    });\n                } else {\n                    utility.log({ type: 'log', message: item + \" not added\" });\n                }\n            });\n\n        } else {\n            utility.log({ type: 'log', message: \"No Metrics\" });\n        }\n\n        fnCallback(null);\n    } //End addMetrics\n\n    /**\n     * Seventh and last method in the async series\n     * Simply redirect to the summary page\n     * @param fnCallback\n     */\n    function pageRedirect(fnCallback) {\n        if(req.body.saveTransactionNew == undefined) {\n            req.session.success = true;\n            res.redirect('/users/transactions');\n        } else {\n            res.redirect('/users/transactions/add-transaction');\n        }\n\n        fnCallback(null);\n    }\n\n}); //end post for add-transaction\n\n/**\n * This method pulls all the data required to load the add-transaction page from the database and loads the page\n * @param returnObj\n * @param req\n * @param res\n * @param next\n */\nfunction renderAddTransactionPage(returnObj, req, res, next) {\n    storeModel.getAllStoresAndUsers((err, storeResults) => {\n        //If an error is thrown\n        if (err) {\n            returnObj['message'] = req.flash('Our database servers maybe down. Please try again.');\n            //Render the page wth error messages\n            return res.render('transactions/add-transaction', returnObj);\n        } //End if\n\n\n\n        userModel.getAllUsersByStoreID(req.session.store_id, (err, userResult) => {\n            //If an error is thrown\n            if (err) {\n                returnObj['message'] = req.flash('Our database servers maybe down. Please try again.');\n                //Render the page wth error messages\n                return res.render('transactions/add-transaction', returnObj);\n            } //End if\n\n            transactionModel.getTransactions((err, transactionResults) => {\n                //If an error is thrown\n                if (err) {\n                    returnObj['message'] = req.flash('Our database servers maybe down. Please try again.');\n                    //Render the page wth error messages\n                    return res.render('transactions/add-transaction', returnObj);\n                } //End if\n\n                transactionModel.getActivation((err, activationResults) => {\n                    //If an error is thrown\n                    if (err) {\n                        returnObj['message'] = req.flash('Our database servers maybe down. Please try again.');\n                        //Render the page wth error messages\n                        return res.render('transactions/add-transaction', returnObj);\n                    } //End if\n\n                    transactionModel.getDevice((err, deviceResults) => {\n                        //If an error is thrown\n                        if (err) {\n                            returnObj['message'] = req.flash('Our database servers maybe down. Please try again.');\n                            //Render the page wth error messages\n                            return res.render('transactions/add-transaction', returnObj);\n                        } //End if\n\n                        transactionModel.getWarranty((err, warrantyResults) => {\n                            //If an error is thrown\n                            if (err) {\n                                returnObj['message'] = req.flash('Our database servers maybe down. Please try again.');\n                                //Render the page wth error messages\n                                return res.render('transactions/add-transaction', returnObj);\n                            } //End if\n\n                            returnObj['users'] = userResult;\n                            returnObj['transactions'] = transactionResults;\n                            returnObj['activations'] = activationResults;\n                            returnObj['devices'] = deviceResults;\n                            returnObj['warrantys'] = warrantyResults;\n                            returnObj['stores'] = storeResults;\n                            returnObj['selectedEmployee'] = req.user.t_number;\n                            returnObj['defaultStore'] = req.user.store_id;\n\n                            returnObj['warrentysObj'] = JSON.stringify(returnObj['warrantys']);\n                            returnObj['devicesObj'] = JSON.stringify(returnObj['devices']);\n                            returnObj['activationsObj'] = JSON.stringify(returnObj['activations']);\n                            returnObj['storesObject'] = JSON.stringify(returnObj['stores']);\n\n                            return res.render('transactions/add-transaction', returnObj);\n                        }); //end getWarranty\n                    }); //end getDevice\n                }); //end getActivation\n            }); //end getTransactions\n        }); //end getAll\n    }); //end getAllStores\n} //End renderAddTransactionPage\n\nmodule.exports = router;"]}