{"version":3,"sources":["users.es6"],"names":[],"mappings":";;AAKA;;IAAY,S;;AACZ;;IAAY,M;;;;AANZ,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,aAAa,QAAQ,eAAR,CAAjB;AACA,IAAI,aAAa,QAAQ,eAAR,CAAjB;AACA,IAAI,WAAW,QAAQ,UAAR,CAAf;AACA,IAAI,aAAa,QAAQ,YAAR,CAAjB;;AAGA,IAAI,SAAS,QAAQ,MAAR,EAAb;;AAEA,IAAI,YAAY,QAAQ,gBAAR,CAAhB;AACA,IAAI,aAAa,QAAQ,iBAAR,CAAjB;AACA,IAAI,cAAc,QAAQ,iBAAR,CAAlB;;AAEA;AACA,OAAO,GAAP,CAAW,GAAX,EAAgB,mBAAhB,EAAqC,UAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAoB;;AAErD;AACA;AACA,QAAG,CAAC,IAAI,OAAJ,CAAY,QAAhB,EAA0B;AACtB,oBAAY,sBAAZ,CAAmC,IAAI,IAAJ,CAAS,QAA5C,EAAsD,UAAC,GAAD,EAAM,MAAN,EAAiB;AACnE,gBAAG,GAAH,EAAQ;AACJ,wBAAQ,GAAR,CAAY,+BAAZ;AACA;AACH;;AAED,gBAAI,OAAJ,CAAY,QAAZ,GAAuB,OAAO,CAAP,EAAU,QAAjC;;AAEA;AACA,oBAAQ,GAAR,CAAY,IAAI,OAAJ,CAAY,QAAxB;AACH,SAVD;AAWH;;AAED,QAAI,YAAY;AACZ,eAAO,WADK;AAEZ,yBAAiB,IAAI,KAAJ,CAAU,SAAV,CAFL;AAGZ,uBAAe,IAAI,KAAJ,CAAU,OAAV;AAHH,KAAhB;;AAMA;AACA,0BAAsB,UAAC,GAAD,EAAM,UAAN,EAAqB;AACvC;AACA,YAAI,GAAJ,EAAS;AACL,sBAAU,SAAV,IAAuB,oDAAvB;AACA;AACA,mBAAO,IAAI,MAAJ,CAAW,OAAX,EAAoB,SAApB,CAAP;AACH;;AAED,kBAAU,oBAAV,IAAkC,UAAlC;;AAEA;AACA,YAAI,MAAJ,CAAW,OAAX,EAAoB,SAApB;AACH,KAZD;AAaH,CAtCD;;AAwCA;AACA,OAAO,GAAP,CAAW,WAAX,EAAwB,mBAAxB,EAA6C,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AACnE,QAAI,IAAI,IAAJ,CAAS,UAAT,IAAuB,CAA3B,EAA8B;AAC1B,eAAO,IAAI,QAAJ,CAAa,SAAb,CAAP;AACH;;AAED,gBAAY,SAAZ,CAAsB,UAAC,GAAD,EAAM,MAAN,EAAiB;AACnC,YAAG,GAAH,EAAQ;AACJ,kBAAM,KAAK,GAAL,CAAN;AACH;;AAED,eAAO,IAAI,MAAJ,CAAW,UAAX,EAAuB;AAC1B,mBAAO,UADmB;AAE1B,mBAAO,EAFmB;AAG1B,kBAAM,EAHoB;AAI1B,sBAAU,EAJgB;AAK1B,wBAAY,EALc;AAM1B,mBAAO,EANmB;AAO1B,oBAAQ,MAPkB;AAQ1B,uBAAW,KAAK,SAAL,CAAe,MAAf;AARe,SAAvB,CAAP;AAUH,KAfD;AAgBH,CArBD;;AAuBA;AACA,OAAO,IAAP,CAAY,WAAZ,EAAyB,mBAAzB,EAA8C,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AACpE,QAAG,CAAC,IAAI,IAAR,EAAc;AACV,eAAO,IAAI,UAAJ,CAAe,GAAf,CAAP;AACH;AACD,QAAG,IAAI,IAAJ,CAAS,UAAT,IAAuB,CAA1B,EAA6B;AACzB,eAAO,IAAI,QAAJ,CAAa,SAAb,CAAP;AACH;;AAED;AACA,QAAI,QAAQ,IAAI,IAAJ,CAAS,SAArB;AACA,YAAQ,MAAM,MAAN,CAAa,CAAb,EAAgB,WAAhB,KAAgC,MAAM,SAAN,CAAgB,CAAhB,EAAmB,WAAnB,EAAxC;;AAEA,QAAI,OAAO,IAAI,IAAJ,CAAS,QAApB;AACA,WAAO,KAAK,MAAL,CAAY,CAAZ,EAAe,WAAf,KAA+B,KAAK,SAAL,CAAe,CAAf,EAAkB,WAAlB,EAAtC;;AAEA,QAAI,WAAW,IAAI,IAAJ,CAAS,QAAxB;AACA,eAAW,SAAS,WAAT,EAAX;;AAEA,QAAI,aAAa,IAAI,IAAJ,CAAS,UAA1B;;AAEA,QAAI,QAAQ,IAAI,IAAJ,CAAS,KAArB;AACA,YAAQ,MAAM,WAAN,EAAR;;AAEA;AACA,QAAI,YAAY;AACZ,eAAO,UADK;AAEZ,eAAO,KAFK;AAGZ,cAAM,IAHM;AAIZ,eAAO,KAJK;AAKZ,oBAAY,UALA;AAMZ,kBAAU;AANE,KAAhB;;AASA;AACA,QAAI,SAAJ,CAAc,WAAd,EAA2B,8BAA3B,EAA2D,QAA3D;AACA,QAAI,SAAJ,CAAc,WAAd,EAA2B,+CAA3B,EAA4E,OAA5E,CAAoF,aAApF;AACA,QAAI,SAAJ,CAAc,UAAd,EAA0B,6BAA1B,EAAyD,QAAzD;AACA,QAAI,SAAJ,CAAc,UAAd,EAA0B,8CAA1B,EAA0E,OAA1E,CAAkF,aAAlF;AACA,QAAI,SAAJ,CAAc,OAAd,EAAuB,8CAAvB,EAAuE,OAAvE,GAAiF,OAAjF,CAAyF,4BAAzF;AACA,QAAI,SAAJ,CAAc,UAAd,EAA0B,mCAA1B,EAA+D,OAA/D,CAAuE,WAAvE;;AAEA;AACA,gBAAY,SAAZ,CAAsB,UAAC,GAAD,EAAM,MAAN,EAAiB;AACnC,YAAG,GAAH,EAAQ;AACJ,kBAAM,KAAK,GAAL,CAAN;AACH;;AAED,kBAAU,QAAV,IAAsB,MAAtB;AACA,kBAAU,WAAV,IAAyB,KAAK,SAAL,CAAe,MAAf,CAAzB;;AAEA;AACA,YAAI,SAAS,IAAI,gBAAJ,EAAb;;AAEA,YAAG,MAAH,EAAW;AACP,sBAAU,QAAV,IAAsB,MAAtB;AACA,mBAAO,IAAI,MAAJ,CAAW,UAAX,EAAuB,SAAvB,CAAP;AACH,SAHD,MAIK;AACD;AACA,sBAAU,MAAV,CAAiB,QAAjB,EAA2B,UAAS,GAAT,EAAc,IAAd,EAAoB;AAC3C,oBAAI,KAAK,MAAL,GAAc,CAAlB,EAAqB;AACjB,8BAAU,SAAV,IAAuB,wCAAvB;AACA,2BAAO,IAAI,MAAJ,CAAW,UAAX,EAAuB,SAAvB,CAAP;AACH,iBAHD,MAIK;AACD;AACA,8BAAU,WAAV,CAAsB,KAAtB,EAA6B,UAAS,GAAT,EAAc,IAAd,EAAoB;AAC7C,4BAAI,KAAK,MAAL,GAAc,CAAlB,EAAqB;AACjB,sCAAU,SAAV,IAAuB,qCAAvB;AACA,mCAAO,IAAI,MAAJ,CAAW,UAAX,EAAuB,SAAvB,CAAP;AACH;AACD;AAJA,6BAKK;AACD;AACA,oCAAI,QAAQ,UAAU,QAAV,CAAmB,EAAnB,CAAZ;;AAEA;AACA,oCAAI,cAAc,WAAW,eAAX,CAA2B;AACzC,6CAAS,OADgC;AAEzC,0CAAM;AACF,8CAAM,WAAW,cADf;AAEF,8CAAM,WAAW;AAFf;AAFmC,iCAA3B,CAAlB;;AAQA;AACA,oCAAI,cAAc;AACd,0CAAM,+BADQ,EACyB;AACvC,wCAAI,KAFU,EAEH;AACX,6CAAS,cAHK,EAGW;AACzB,0CAAM,cAAc,KAAd,GAAsB,GAAtB,GAA4B,IAA5B,GAAmC,QAAnC,GACN,4DADM,GAEN,iCAFM,GAE8B;AANtB,iCAAlB;;AASA;AACA,4CAAY,QAAZ,CAAqB,WAArB,EAAkC,UAAU,GAAV,EAAe,IAAf,EAAqB;;AAEnD;AACA,wCAAI,GAAJ,EAAS;AACL;AACA,4CAAI,KAAJ,CAAU,qDAAV,EAAiE,qDAAjE;AACA,kDAAU,SAAV,IAAuB,qDAAvB;AACA;AACA,+CAAO,IAAI,MAAJ,CAAW,UAAX,EAAuB,SAAvB,CAAP;AACH;AACD,4CAAQ,GAAR,CAAY,mBAAmB,KAAK,QAApC;AACH,iCAXD;;AAaA;AACA,oCAAI,OAAO;AACP,gDAAY,KADL;AAEP,+CAAW,IAFJ;AAGP,2CAAO,KAHA;AAIP,gDAAY,UAJL;AAKP,8CAAU,QALH;AAMP,8CAAU;AANH,iCAAX;;AASA;AACA,0CAAU,MAAV,CAAiB,IAAjB,EAAuB,UAAU,GAAV,EAAe,MAAf,EAAuB;AAC1C;AACA,wCAAI,GAAJ,EAAS;AACL,4CAAI,KAAJ,CAAU,mDAAV,EAA+D,mDAA/D;AACA,kDAAU,SAAV,IAAuB,mDAAvB;AACA;AACA,+CAAO,IAAI,MAAJ,CAAW,UAAX,EAAuB,SAAvB,CAAP;AACH;;AAED,4CAAQ,GAAR,CAAY,0BAAZ;;AAEA;AACA,wCAAI,WAAW;AACX,kDAAU,QADC;AAEX,+CAAO;AAFI,qCAAf;;AAKA;AACA,+CAAW,MAAX,CAAkB,QAAlB,EAA4B,UAAU,GAAV,EAAe,MAAf,EAAuB;AAC/C;AACA,4CAAI,GAAJ,EAAS;AACL,gDAAI,KAAJ,CAAU,mDAAV,EAA+D,mDAA/D;AACA,sDAAU,SAAV,IAAuB,mDAAvB;AACA;AACA,mDAAO,IAAI,MAAJ,CAAW,UAAX,EAAuB,SAAvB,CAAP;AACH;;AAED,gDAAQ,GAAR,CAAY,aAAZ;;AAEA,4CAAI,SAAS,IAAI,IAAJ,CAAS,UAAT,CAAb;;AAEA;AACA,4CAAI,cAAc,EAAlB;;AAEA,6CAAI,IAAI,KAAR,IAAiB,MAAjB,EAAyB;AACrB,wDAAY,KAAZ,IAAqB,CAAC,IAAI,IAAJ,CAAS,QAAV,EAAoB,OAAO,KAAP,CAApB,CAArB;AACH;;AAED,oDAAY,QAAZ,CAAqB,WAArB,EAAkC,UAAU,GAAV,EAAe,MAAf,EAAuB;AACrD;AACA,gDAAI,GAAJ,EAAS;AACL,oDAAI,KAAJ,CAAU,mDAAV,EAA+D,mDAA/D;AACA,0DAAU,SAAV,IAAuB,mDAAvB;AACA;AACA,uDAAO,IAAI,MAAJ,CAAW,UAAX,EAAuB,SAAvB,CAAP;AACH;;AAED,oDAAQ,GAAR,CAAY,2BAAZ;;AAEA,gDAAI,KAAJ,CAAU,kBAAV,EAA8B,kEAA9B;AACA,gDAAI,MAAJ,CAAW,gBAAX,GAA8B,IAAI,KAAJ,CAAU,kBAAV,CAA9B;AACA,gDAAI,MAAJ,CAAW,UAAX,EAAuB;AACnB,uDAAO,UADY;AAEnB,uDAAO,EAFY;AAGnB,sDAAM,EAHa;AAInB,0DAAU,EAJS;AAKnB,4DAAY,EALO;AAMnB,uDAAO,EANY;AAOnB,wDAAQ,UAAU,QAAV,CAPW;AAQnB,2DAAW,UAAU,WAAV;AARQ,6CAAvB;AAUH,yCAvBD;AAwBH,qCA5CD;AA6CH,iCA/DD;AAgEH;AACJ,qBAvHD;AAwHH;AACJ,aAhID;AAiIH;AACJ,KAnJD;AAoJH,CA9LD;;AAiMA;AACA,OAAO,GAAP,CAAW,OAAX,EAAoB,mBAApB,EAAyC,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AAC/D;AACA,QAAI,IAAI,IAAJ,CAAS,UAAT,IAAuB,CAA3B,EAA8B;AAAE,eAAO,IAAI,QAAJ,CAAa,SAAb,CAAP;AAAiC;;AAEjE,QAAI,YAAY,EAAE,OAAO,MAAT,EAAhB;;AAEA,gBAAY,SAAZ,CAAsB,UAAC,GAAD,EAAM,YAAN,EAAuB;AACzC,YAAG,GAAH,EAAQ;AACJ,kBAAM,KAAK,GAAL,CAAN;AACH;;AAED,kBAAU,QAAV,IAAsB,YAAtB;AACA,kBAAU,WAAV,IAAyB,KAAK,SAAL,CAAe,YAAf,CAAzB;;AAEA,oBAAY,aAAZ,CAA0B,UAAC,GAAD,EAAM,iBAAN,EAA4B;AAClD,gBAAG,GAAH,EAAQ;AACJ,sBAAM,KAAK,GAAL,CAAN;AACH;;AAED,gBAAI,gBAAgB,iBAApB;;AAEA;AACA,sBAAU,MAAV,CAAiB,UAAC,GAAD,EAAM,WAAN,EAAsB;AACnC,oBAAI,GAAJ,EAAS;AACL,0BAAM,KAAK,GAAL,CAAN;AACH;;AAED,0BAAU,OAAV,IAAqB,EAArB;AACA,4BAAY,OAAZ,CAAoB,UAAC,IAAD,EAAU;AAC1B,2BAAO,KAAK,UAAL,CAAP;;AAEA,yBAAK,QAAL,IAAiB,cAAc,MAAd,CAAqB,UAAC,KAAD;AAAA,+BAAW,MAAM,QAAN,IAAkB,KAAK,QAAlC;AAAA,qBAArB,CAAjB;;AAEA,8BAAU,OAAV,EAAmB,IAAnB,CAAwB,IAAxB;AACH,iBAND;;AAQA,0BAAU,UAAV,IAAwB,KAAK,SAAL,CAAe,UAAU,OAAV,CAAf,CAAxB;;AAEA,oBAAI,MAAJ,CAAW,MAAX,EAAmB,SAAnB;AACH,aAjBD;AAkBH,SA1BD;AA2BH,KAnCD;AAoCH,CA1CD;;AA4CA,OAAO,IAAP,CAAY,OAAZ,EAAqB,mBAArB,EAA0C,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AAChE,QAAI,CAAC,IAAI,IAAT,EAAe;AAAE,eAAO,IAAI,UAAJ,CAAe,GAAf,CAAP;AAA6B;AAC9C,QAAI,IAAI,IAAJ,CAAS,UAAT,IAAuB,CAA3B,EAA8B;AAAE,eAAO,IAAI,QAAJ,CAAa,SAAb,CAAP;AAAiC;;AAEjE,cAAU,MAAV,CAAiB,CAAC,IAAI,IAAJ,CAAS,QAAV,EAAoB,IAAI,IAAJ,CAAS,UAA7B,EAAyC,IAAI,IAAJ,CAAS,SAAlD,EACD,IAAI,IAAJ,CAAS,KADR,EACe,IAAI,IAAJ,CAAS,KADxB,EAC+B,IAAI,IAAJ,CAAS,QADxC,CAAjB,EACoE,UAAC,GAAD,EAAM,MAAN,EAAiB;AACjF,YAAI,GAAJ,EAAS;AACL,oBAAQ,GAAR,CAAY,yBAAyB,IAAI,IAAJ,CAAS,QAA9C;AACH;;AAED,gBAAQ,GAAR,CAAY,kBAAkB,IAAI,IAAJ,CAAS,QAAvC;;AAEA,oBAAY,YAAZ,CAAyB,IAAI,IAAJ,CAAS,QAAlC,EAA4C,UAAU,GAAV,EAAe,MAAf,EAAuB;AAC/D;AACA,gBAAI,GAAJ,EAAS;AACL,wBAAQ,GAAR,CAAY,uBAAZ;AACH;;AAED,gBAAI,SAAS,KAAK,KAAL,CAAW,IAAI,IAAJ,CAAS,MAApB,CAAb;;AAEA;AACA,gBAAI,cAAc,EAAlB;;AAEA,iBAAI,IAAI,KAAR,IAAiB,MAAjB,EAAyB;AACrB,oBAAG,CAAC,OAAO,cAAP,CAAsB,KAAtB,CAAJ,EAAkC;AAAE;AAAW;AAC/C,4BAAY,KAAZ,IAAqB,CAAC,IAAI,IAAJ,CAAS,QAAV,EAAoB,OAAO,KAAP,EAAc,QAAlC,CAArB;AACH;;AAED,wBAAY,QAAZ,CAAqB,WAArB,EAAkC,UAAU,GAAV,EAAe,MAAf,EAAuB;AACrD;AACA,oBAAI,GAAJ,EAAS;AACL,4BAAQ,GAAR,CAAY,uBAAZ;AACH;;AAED,oBAAI,IAAJ,CAAS,KAAK,SAAL,CAAe,IAAI,IAAnB,CAAT;AACH,aAPD;AAQH,SAxBD;AAyBH,KAjCD;AAkCH,CAtCD;;AAwCA;AACA,OAAO,IAAP,CAAY,SAAZ,EAAuB,mBAAvB,EAA4C,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AAClE,QAAI,CAAC,IAAI,IAAT,EAAe;AAAE,eAAO,IAAI,UAAJ,CAAe,GAAf,CAAP;AAA6B;AAC9C,QAAI,IAAI,IAAJ,CAAS,UAAT,IAAuB,CAAvB,IAA4B,IAAI,IAAJ,CAAS,MAAT,IAAmB,QAAnD,EAA6D;AAAE,eAAO,IAAI,QAAJ,CAAa,SAAb,CAAP;AAAiC;;AAEhG;AACA,cAAU,MAAV,CAAiB,UAAS,GAAT,EAAc,OAAd,EAAuB;AACpC,YAAI,YAAY;AACZ,mBAAO,QADK;AAEZ,mBAAO;AAFK,SAAhB;;AAKA;AACA,YAAI,GAAJ,EAAS;AACL,sBAAU,SAAV,IAAuB,IAAI,QAAJ,EAAvB;AACA;AACA,mBAAO,IAAI,MAAJ,CAAW,MAAX,EAAmB,SAAnB,CAAP;AACH;;AAED,YAAI,YAAY,EAAhB,CAboC,CAahB;;AAEpB;AACA,gBAAQ,OAAR,CAAgB,UAAU,KAAV,EAAiB,KAAjB,EAAwB;AACpC,gBAAI,IAAI,IAAJ,CAAS,cAAT,CAAwB,WAAW,MAAM,QAAzC,CAAJ,EAAwD;AACpD;AACA,oBAAG,IAAI,IAAJ,CAAS,QAAT,IAAqB,MAAM,QAA9B,EAAuC;AACnC,wBAAI,KAAJ,CAAU,gBAAV,EAA4B,yBAA5B;AACA,wBAAI,MAAJ,CAAW,cAAX,GAA4B,IAAI,KAAJ,CAAU,gBAAV,CAA5B;AACH,iBAHD,MAIK;AACD,8BAAU,IAAV,CAAe,MAAM,QAArB;AACH;AACJ;AACJ,SAXD;;AAaA;AACA,kBAAU,WAAV,CAAsB,SAAtB,EAAiC,UAAS,GAAT,EAAc,OAAd,EAAuB;AACpD;AACA,gBAAI,GAAJ,EAAS;AACL,0BAAU,SAAV,IAAuB,IAAI,QAAJ,EAAvB;AACA;AACA,uBAAO,IAAI,MAAJ,CAAW,MAAX,EAAmB,SAAnB,CAAP;AACH,aAJD,MAMA;AACI,oBAAI,KAAJ,CAAU,kBAAV,EAA8B,2BAA9B;AACA,oBAAI,MAAJ,CAAW,gBAAX,GAA8B,IAAI,KAAJ,CAAU,kBAAV,CAA9B;AACH;;AAED;AACA,sBAAU,MAAV,CAAiB,UAAS,GAAT,EAAc,OAAd,EAAuB;AACpC;AACA,oBAAI,GAAJ,EAAS;AACL,8BAAU,SAAV,IAAuB,IAAI,QAAJ,EAAvB;AACA;AACA,2BAAO,IAAI,MAAJ,CAAW,MAAX,EAAmB,SAAnB,CAAP;AACH;;AAED,0BAAU,OAAV,IAAqB,OAArB;AACA;AACA,oBAAI,MAAJ,CAAW,MAAX,EAAmB,SAAnB;AACH,aAXD;AAYH,SA1BD;AA2BH,KAzDD;AA0DH,CA/DD;;AAiEA,OAAO,GAAP,CAAW,eAAX,EAA4B,mBAA5B,EAAiD,UAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAoB;AACjE,QAAI,KAAK,IAAI,MAAJ,CAAW,EAAX,CAAc,WAAd,EAAT;;AAEA,QAAI,MAAJ,CAAW,UAAX,EAAuB;AACnB,eAAO,cADY;AAEnB,YAAI,EAFe;AAGnB,uBAAe,IAAI,KAAJ,CAAU,OAAV;AAHI,KAAvB;AAKH,CARD;;AAUA,OAAO,IAAP,CAAY,WAAZ,EAAyB,mBAAzB,EAA8C,UAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAoB;AAC9D,QAAI,CAAC,IAAI,IAAT,EAAe;AAAE,eAAO,IAAI,UAAJ,CAAe,GAAf,CAAP;AAA6B;;AAE9C,YAAQ,GAAR,CAAY,YAAY,IAAI,IAAJ,CAAS,aAAjC;AACA,YAAQ,GAAR,CAAY,eAAe,IAAI,IAAJ,CAAS,aAApC;AACA,YAAQ,GAAR,CAAY,sBAAsB,IAAI,IAAJ,CAAS,mBAA3C;;AAEA;AACA,QAAI,QAAQ,IAAI,IAAJ,CAAS,aAArB;AACA,QAAI,WAAW,IAAI,IAAJ,CAAS,aAAxB;AACA,QAAI,iBAAiB,IAAI,IAAJ,CAAS,mBAA9B;;AAEA,QAAG,aAAa,cAAhB,EAAgC;AAC5B,YAAI,KAAJ,CAAU,OAAV,EAAmB,uBAAnB;AACA,eAAO,IAAI,QAAJ,CAAa,qBAAqB,KAAlC,CAAP;AACH;;AAED;AACA,QAAI,SAAJ,CAAc,eAAd,2KAGgE,QAHhE,GAG2E,OAH3E,CAGmF,gDAHnF;;AAKA;AACA,QAAI,SAAS,IAAI,gBAAJ,EAAb;;AAEA,QAAG,MAAH,EAAW;AACP,YAAI,KAAJ,CAAU,OAAV,EAAmB,OAAO,CAAP,EAAU,GAA7B;AACA,eAAO,IAAI,QAAJ,CAAa,qBAAqB,KAAlC,CAAP;AACH,KAHD,MAIK;AACD,eAAO,IAAP,CAAY,QAAZ,EAAsB,CAAtB,EAAyB,UAAC,GAAD,EAAM,IAAN,EAAe;AACpC,gBAAG,GAAH,EAAQ;AACJ,sBAAM,KAAK,GAAL,CAAN;AACH;;AAED,uBAAW,GAAX,GAAiB,KAAjB,2KAG6B,CAAC,IAAD,EAAO,KAAP,CAH7B,EAG4C,UAAC,GAAD,EAAM,IAAN,EAAe;AACvD,oBAAI,GAAJ,EAAS;AACL,wBAAI,KAAJ,CAAU,OAAV,EAAmB,mDAAnB;;AAEA,2BAAO,IAAI,QAAJ,CAAa,qBAAqB,KAAlC,CAAP;AACH;;AAED,wBAAQ,GAAR,CAAY,uBAAZ;;AAEA,wBAAQ,GAAR,CAAY,sBAAsB,KAAlC;;AAEA,2BAAW,UAAX,CAAsB,KAAtB,EAA6B,UAAC,GAAD,EAAM,IAAN,EAAe;AACxC,wBAAI,GAAJ,EAAS;AACL,4BAAI,KAAJ,CAAU,OAAV,EAAmB,mDAAnB;;AAEA,+BAAO,IAAI,QAAJ,CAAa,qBAAqB,KAAlC,CAAP;AACH;AACD,4BAAQ,GAAR,CAAY,sBAAZ;;AAEA,wBAAI,KAAJ,CAAU,SAAV,EAAqB,gCAArB;AACA,wBAAI,QAAJ,CAAa,SAAb;AACH,iBAVD;AAWH,aAzBD;AA0BH,SA/BD;AAgCH;AACJ,CAhED;;AAkEA,OAAO,GAAP,CAAW,kBAAX,EAA+B,mBAA/B,EAAoD,UAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAoB;AACpE,QAAI,QAAQ,UAAU,QAAV,CAAmB,EAAnB,CAAZ;;AAEA,YAAQ,GAAR,CAAY,YAAY,KAAxB;AACA,YAAQ,GAAR,CAAY,eAAe,IAAI,IAAJ,CAAS,QAApC;;AAEA;AACA,eAAW,MAAX,CAAkB,EAAE,UAAU,IAAI,IAAJ,CAAS,QAArB,EAA+B,OAAO,KAAtC,EAAlB,EAAiE,UAAU,GAAV,EAAe,MAAf,EAAuB;AACpF;AACA,YAAI,GAAJ,EAAS;AACL,gBAAI,KAAJ,CAAU,OAAV,EAAmB,mDAAnB;;AAEA;AACA,mBAAO,IAAI,QAAJ,CAAa,kBAAb,CAAP;AACH;;AAED,gBAAQ,GAAR,CAAY,aAAZ;;AAEA;AACA,YAAI,cAAc,WAAW,eAAX,CAA2B;AACzC,qBAAS,OADgC;AAEzC,kBAAM;AACF,sBAAM,WAAW,cADf;AAEF,sBAAM,WAAW;AAFf;AAFmC,SAA3B,CAAlB;;AAQA,YAAI,QAAQ,kCAAZ;;AAEA;AACA,YAAI,cAAc;AACd,kBAAM,+BADQ,EACyB;AACvC,gBAAI,KAFU,EAEH;AACX,qBAAS,gBAHK,EAGa;AAC3B,kBAAM,cAAc,IAAI,IAAJ,CAAS,UAAvB,GAAoC,GAApC,GAA0C,IAAI,IAAJ,CAAS,SAAnD,GAA+D,QAA/D,GACN,2DADM,GAEN,uCAFM,GAEoC;AAN5B,SAAlB;;AASA;AACA,oBAAY,QAAZ,CAAqB,WAArB,EAAkC,UAAU,GAAV,EAAe,IAAf,EAAqB;AACnD;AACA,gBAAI,GAAJ,EAAS;AACL;AACA,oBAAI,KAAJ,CAAU,OAAV,EAAmB,yDAAnB;;AAEA;AACA,uBAAO,IAAI,QAAJ,CAAa,kBAAb,CAAP;AACH;;AAED,oBAAQ,GAAR,CAAY,mBAAmB,KAAK,QAApC;;AAEA;AACA,gBAAI,KAAJ,CAAU,SAAV,EAAqB,uDAArB;AACA,gBAAI,QAAJ,CAAa,kBAAb;AACH,SAfD;AAgBH,KAjDD;AAkDH,CAzDD;;AA2DA;AACA,OAAO,GAAP,CAAW,SAAX,EAAsB,mBAAtB,EAA2C,UAAU,GAAV,EAAe,GAAf,EAAoB;AAC3D,QAAI,MAAJ,GAD2D,CAC7C;AACd,QAAI,KAAJ,CAAU,SAAV,EAAqB,qBAArB;AACA,QAAI,QAAJ,CAAa,GAAb;AACH,CAJD;;AAMA;AACA,SAAS,mBAAT,CAA6B,GAA7B,EAAkC,GAAlC,EAAuC,IAAvC,EAA6C;AACzC,QAAI,IAAI,eAAJ,EAAJ,EAA2B;AAAE,eAAO,MAAP;AAAgB;AAC7C,QAAI,QAAJ,CAAa,GAAb;AACH;;AAED,OAAO,GAAP,CAAW,WAAX,EAAwB,mBAAxB,EAA6C,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EAAyB;AAClE,QAAI,IAAI,IAAJ,CAAS,UAAT,IAAuB,CAA3B,EAA8B;AAC1B,eAAO,IAAI,QAAJ,CAAa,SAAb,CAAP;AACH;;AAED;AACA,QAAI,MAAJ,CAAW,UAAX,EAAuB;AACnB,eAAO,UADY;AAEnB,yBAAiB,IAAI,KAAJ,CAAU,SAAV,CAFE;AAGnB,uBAAe,IAAI,KAAJ,CAAU,OAAV;AAHI,KAAvB;AAKH,CAXD;;AAaA,OAAO,GAAP,CAAW,cAAX,EAA2B,mBAA3B,EAAgD,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EAAyB;AACrE,QAAI,KAAK,IAAI,MAAJ,CAAW,EAAX,CAAc,WAAd,EAAT;;AAEA,cAAU,OAAV,CAAkB,EAAlB,EAAsB,UAAS,GAAT,EAAc,IAAd,EAAoB;AACtC,YAAG,GAAH,EAAQ;AACJ,kBAAM,KAAK,GAAL,CAAN;AACH,SAFD,MAGK,IAAG,KAAK,MAAL,IAAe,CAAlB,EAAqB;AACtB,oBAAQ,KAAR,CAAc,qBAAd;AACA,mBAAO,IAAI,QAAJ,CAAa,SAAb,CAAP;AACH,SAHI,MAIA;AACD,gBAAI,YAAY;AACZ,4BAAY,KAAK,CAAL,EAAQ,UADR;AAEZ,2BAAW,KAAK,CAAL,EAAQ,SAFP;AAGZ,0BAAU,KAAK,CAAL,EAAQ,QAHN;AAIZ,uBAAO,KAAK,CAAL,EAAQ,KAJH;AAKZ,4BAAY,KAAK,CAAL,EAAQ;AALR,aAAhB;;AAQA;AACA,gBAAI,MAAJ,CAAW,SAAX,EAAsB,EAAE,SAAS,SAAX,EAAtB;AACH;AACJ,KApBD;AAqBH,CAxBD;;AA0BA;AACA,OAAO,GAAP,CAAW,gBAAX,EAA6B,mBAA7B,EAAkD,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AACxE,QAAI,IAAI,IAAJ,CAAS,UAAT,IAAuB,CAA3B,EAA8B;AAC1B,eAAO,IAAI,QAAJ,CAAa,SAAb,CAAP;AACH;;AAED,QAAI,MAAJ,CAAW,eAAX,EAA4B;AACxB,eAAO;AADiB,KAA5B;AAGH,CARD;;AAUA,SAAS,qBAAT,CAA+B,QAA/B,EAAwC;AACpC,eAAW,GAAX,GAAiB,KAAjB,CAAuB,gLACvB,0HADuB,GAEvB,uEAFuB,GAGvB,+EAHuB,GAIvB,6DAJuB,GAKvB,oKALuB,GAMvB,iKANuB,GAOvB,mFAPuB,GAQvB,UARA,EAQY,UAAS,GAAT,EAAc,IAAd,EAAoB;AAC5B,YAAI,GAAJ,EAAS;AACL,qBAAS,GAAT,EAAc,IAAd;AACH,SAFD,MAGI,SAAS,IAAT,EAAe,IAAf;AACP,KAbD;AAcH;;AAED,OAAO,OAAP,GAAiB,MAAjB","file":"users.js","sourcesContent":["var express = require('express');\nvar connection = require('../connection');\nvar credential = require('../credential');\nvar passport = require('passport');\nvar nodemailer = require('nodemailer');\nimport * as randtoken from \"rand-token\";\nimport * as bcrypt from \"bcryptjs\";\nvar router = express.Router();\n\nvar userModel = require('../models/user');\nvar tokenModel = require('../models/token');\nvar storesModel = require('../models/store');\n\n// get the users listing\nrouter.get('/', ensureAuthenticated, (req, res, next) => {\n\n    // Check if store_id session value is set\n    // if not then set it\n    if(!req.session.store_id) {\n        storesModel.getFirstStoreByTNumber(req.user.t_number, (err, result) => {\n            if(err) {\n                console.log('Error retrieving first store.');\n                return;\n            }\n\n            req.session.store_id = result[0].store_id;\n\n            // log the store id\n            console.log(req.session.store_id);\n        });\n    }\n\n    var returnObj = {\n        title: 'Dashboard',\n        success_message: req.flash('success'),\n        error_message: req.flash('error')\n    };\n\n    //Connection to get all of the observations for each employee ordered by date\n    getRecentObservations((err, obsResults) => {\n        //If an error is thrown\n        if (err) {\n            returnObj['message'] = 'Our database servers maybe down. Please try again.';\n            //Render the page wth error messages\n            return res.render('index', returnObj);\n        }\n\n        returnObj['recentObservations'] = obsResults;\n\n        //Render the observations page with the list of users and observations\n        res.render('index', returnObj);\n    });\n});\n\n// If accessing the register page, reset the form variables\nrouter.get('/register', ensureAuthenticated, function (req, res, next) {\n    if (req.user.privileged <= 2) {\n        return res.redirect('/users/');\n    }\n\n    storesModel.getStores((err, result) => {\n        if(err) {\n            throw next(err);\n        }\n\n        return res.render('register', {\n            title: 'Register',\n            first: '',\n            last: '',\n            username: '',\n            privileged: '',\n            email: '',\n            stores: result,\n            storesObj: JSON.stringify(result)\n        });\n    });\n});\n\n// Form validation for the register page\nrouter.post('/register', ensureAuthenticated, function (req, res, next) {\n    if(!req.body) {\n        return res.sendStatus(400);\n    }\n    if(req.user.privileged <= 2) {\n        return res.redirect('/users/');\n    }\n\n    //Store the variables form the register page\n    var first = req.body.firstName;\n    first = first.charAt(0).toUpperCase() + first.substring(1).toLowerCase();\n\n    var last = req.body.lastName;\n    last = last.charAt(0).toUpperCase() + last.substring(1).toLowerCase();\n\n    var username = req.body.username;\n    username = username.toLowerCase();\n\n    var privileged = req.body.privileged;\n\n    var email = req.body.email;\n    email = email.toLowerCase();\n\n    // return object\n    var returnObj = {\n        title: 'Register',\n        first: first,\n        last: last,\n        email: email,\n        privileged: privileged,\n        username: username\n    };\n\n    //Custom form validation\n    req.checkBody('firstName', \"First name field is required\").notEmpty();\n    req.checkBody('firstName', \"Only letters A-Z maybe used in the first name\").matches(/^[a-zA-Z]*$/);\n    req.checkBody('lastName', \"Last name field is required\").notEmpty();\n    req.checkBody('lastName', \"Only letters A-Z maybe used in the last name\").matches(/^[a-zA-Z]*$/);\n    req.checkBody('email', \"Invalid email, must follow example@telus.com\").isEmail().matches(/^[A-Z0-9._%+-]+@telus.com$/);\n    req.checkBody('username', \"T number required format: t123456\").matches(/t[0-9]{6}/);\n\n    // grab stores for returnObj\n    storesModel.getStores((err, result) => {\n        if(err) {\n            throw next(err);\n        }\n\n        returnObj['stores'] = result;\n        returnObj['storesObj'] = JSON.stringify(result);\n\n        //Check for errors\n        var errors = req.validationErrors();\n\n        if(errors) {\n            returnObj['errors'] = errors;\n            return res.render('register', returnObj);\n        }\n        else {\n            //Check for duplicate users\n            userModel.exists(username, function(err, rows) {\n                if (rows.length > 0) {\n                    returnObj['message'] = 'Duplicate T#, please enter a unique T#';\n                    return res.render('register', returnObj);\n                }\n                else {\n                    //Check for duplicate emails\n                    userModel.emailExists(email, function(err, rows) {\n                        if (rows.length > 0) {\n                            returnObj['message'] = 'Sorry that email is already in use!';\n                            return res.render('register', returnObj);\n                        }\n                        //The user is unique, insert the user into the database and send them a token\n                        else {\n                            //generate token\n                            var token = randtoken.generate(16);\n\n                            // create reusable transporter object using the default SMTP transport\n                            var transporter = nodemailer.createTransport({\n                                service: 'Gmail',\n                                auth: {\n                                    user: credential.EMAIL_USERNAME,\n                                    pass: credential.EMAIL_PASSWORD\n                                }\n                            });\n\n                            // setup e-mail data with unicode symbols\n                            var mailOptions = {\n                                from: 'no-reply <no-reply@telus.com>', // sender address\n                                to: email, // list of receivers\n                                subject: 'Verification', // subject line\n                                html: '<p>Hello ' + first + ' ' + last + ', </p>' +\n                                '<p>Click the following link to activate your account: </p>' +\n                                'http://localhost:3000/activate/' + token\n                            };\n\n                            // Send mail with defined transport object\n                            transporter.sendMail(mailOptions, function (err, info) {\n\n                                //If an error is thrown\n                                if (err) {\n                                    //Check if email can be sent\n                                    req.flash('The activation email did not send, please try again', 'The activation email did not send, please try again');\n                                    returnObj['message'] = 'The activation email did not send, please try again';\n                                    //Render the page wth error messages\n                                    return res.render('register', returnObj);\n                                }\n                                console.log('Message sent: ' + info.response);\n                            });\n\n                            //Create a user object\n                            var user = {\n                                first_name: first,\n                                last_name: last,\n                                email: email,\n                                privileged: privileged,\n                                username: username,\n                                t_number: username\n                            };\n\n                            // Create connection to add the user to the database\n                            userModel.create(user, function (err, result) {\n                                //If an error is thrown\n                                if (err) {\n                                    req.flash('Our database servers maybe down, please try again', 'Our database servers maybe down, please try again');\n                                    returnObj['message'] = 'Our database servers maybe down, please try again';\n                                    //Render the page wth error messages\n                                    return res.render('register', returnObj);\n                                }\n\n                                console.log(\"User added successfully.\");\n\n                                // create a token object\n                                var tokenObj = {\n                                    t_number: username,\n                                    token: token\n                                };\n\n                                // create a connection to add the email token to the database\n                                tokenModel.create(tokenObj, function (err, result) {\n                                    //If an error is thrown\n                                    if (err) {\n                                        req.flash('Our database servers maybe down, please try again', 'Our database servers maybe down, please try again');\n                                        returnObj['message'] = 'Our database servers maybe down, please try again';\n                                        //Render the page wth error messages\n                                        return res.render('register', returnObj);\n                                    }\n\n                                    console.log(\"Token added\");\n\n                                    let stores = req.body['stores[]'];\n\n                                    //Create a user object\n                                    let storeObjArr = [];\n\n                                    for(var store in stores) {\n                                        storeObjArr[store] = [req.body.username, stores[store]];\n                                    }\n\n                                    storesModel.addStore(storeObjArr, function (err, result) {\n                                        //If an error is thrown\n                                        if (err) {\n                                            req.flash('Our database servers maybe down, please try again', 'Our database servers maybe down, please try again');\n                                            returnObj['message'] = 'Our database servers maybe down, please try again';\n                                            //Render the page wth error messages\n                                            return res.render('register', returnObj);\n                                        }\n\n                                        console.log(\"Store added successfully.\");\n\n                                        req.flash('success_messages', 'User successfully registered, a registration email has been sent');\n                                        res.locals.success_messages = req.flash('success_messages');\n                                        res.render('register', {\n                                            title: 'Register',\n                                            first: '',\n                                            last: '',\n                                            username: '',\n                                            privileged: '',\n                                            email: '',\n                                            stores: returnObj['stores'],\n                                            storesObj: returnObj['storesObj']\n                                        });\n                                    });\n                                });\n                            });\n                        }\n                    });\n                }\n            });\n        }\n    });\n});\n\n\n// Get method for edit users when the page is loaded\nrouter.get('/edit', ensureAuthenticated, function (req, res, next) {\n    //Ensure user is logged in\n    if (req.user.privileged <= 2) { return res.redirect('/users/'); }\n\n    let returnObj = { title: 'Edit' };\n\n    storesModel.getStores((err, storeResults) => {\n        if(err) {\n            throw next(err);\n        }\n\n        returnObj['stores'] = storeResults;\n        returnObj['storesObj'] = JSON.stringify(storeResults);\n\n        storesModel.getStoresUtil((err, storesUtilResults) => {\n            if(err) {\n                throw next(err);\n            }\n\n            let storesUtilObj = storesUtilResults;\n\n            //Connect to the database and get all the user to show the user the list of deletable users\n            userModel.getAll((err, userResults) => {\n                if (err) {\n                    throw next(err);\n                }\n\n                returnObj['users'] = [];\n                userResults.forEach((user) => {\n                    delete user['password'];\n\n                    user['stores'] = storesUtilObj.filter((store) => store.t_number == user.t_number);\n\n                    returnObj['users'].push(user);\n                });\n\n                returnObj['usersObj'] = JSON.stringify(returnObj['users']);\n\n                res.render('edit', returnObj);\n            });\n        });\n    });\n});\n\nrouter.post('/edit', ensureAuthenticated, function (req, res, next) {\n    if (!req.body) { return res.sendStatus(400); }\n    if (req.user.privileged <= 2) { return res.redirect('/users/'); }\n\n    userModel.update([req.body.t_number, req.body.first_name, req.body.last_name,\n                    req.body.email, req.body.title, req.body.t_number], (err, result) => {\n        if (err) {\n            console.log('Error updating user ' + req.body.t_number);\n        }\n\n        console.log('Updated user ' + req.body.t_number);\n\n        storesModel.deleteStores(req.body.t_number, function (err, result) {\n            //If an error is thrown\n            if (err) {\n                console.log('Error deleting stores');\n            }\n\n            let stores = JSON.parse(req.body.stores);\n\n            //Create a user object\n            let storeObjArr = [];\n\n            for(var store in stores) {\n                if(!stores.hasOwnProperty(store)) { continue; }\n                storeObjArr[store] = [req.body.t_number, stores[store].store_id];\n            }\n\n            storesModel.addStore(storeObjArr, function (err, result) {\n                //If an error is thrown\n                if (err) {\n                    console.log('Error updating stores');\n                }\n\n                res.send(JSON.stringify(req.body));\n            });\n        });\n    });\n});\n\n// Post for edit when the submit button is pressed\nrouter.post('/remove', ensureAuthenticated, function (req, res, next) {\n    if (!req.body) { return res.sendStatus(400); }\n    if (req.user.privileged <= 2 || req.body.submit == \"cancel\") { return res.redirect('/users/'); }\n\n    //Connection for getting all the users\n    userModel.getAll(function(err, results) {\n        var returnObj = {\n            title: 'Remove',\n            users: results\n        };\n\n        //If an error is thrown\n        if (err) {\n            returnObj['message'] = err.toString();\n            //Render the page wth error messages\n            return res.render('edit', returnObj);\n        }\n\n        var removeIds = []; // User(s) to be deleted\n\n        //Add to removeIds the user that where selected of the edit page\n        results.forEach(function (value, index) {\n            if (req.body.hasOwnProperty('remove' + value.t_number)) {\n                //Check if the user is trying to delete themselves\n                if(req.user.t_number == value.t_number){\n                    req.flash('error_messages', 'Can\\'t delete yourself!');\n                    res.locals.error_messages = req.flash('error_messages');\n                }\n                else {\n                    removeIds.push(value.t_number);\n                }\n            }\n        });\n\n        //Connection for deleted the users. Deletes the users who are in 'removeIds'\n        userModel.deleteByIds(removeIds, function(err, results) {\n            //If an error is thrown\n            if (err) {\n                returnObj['message'] = err.toString();\n                //Render the page wth error messages\n                return res.render('edit', returnObj);\n            }\n            else\n            {\n                req.flash('success_messages', 'User successfully deleted');\n                res.locals.success_messages = req.flash('success_messages');\n            }\n\n            //Connection to get the the users after the selected users where deleted\n            userModel.getAll(function(err, results) {\n                //If an error is thrown\n                if (err) {\n                    returnObj['message'] = err.toString();\n                    //Render the page wth error messages\n                    return res.render('edit', returnObj);\n                }\n\n                returnObj['users'] = results;\n                //Re-render the edit users page\n                res.render('edit', returnObj);\n            });\n        });\n    });\n});\n\nrouter.get('/password/:id', ensureAuthenticated, (req, res, next) => {\n    let id = req.params.id.toLowerCase();\n\n    res.render('password', {\n        title: 'New Password',\n        id: id,\n        error_message: req.flash('error')\n    });\n});\n\nrouter.post('/password', ensureAuthenticated, (req, res, next) => {\n    if (!req.body) { return res.sendStatus(400); }\n\n    console.log('Token: ' + req.body.passwordToken);\n    console.log('Password: ' + req.body.inputPassword);\n    console.log('Password Verify: ' + req.body.inputPasswordVerify);\n\n    //Store the variables form the register page\n    let token = req.body.passwordToken;\n    let password = req.body.inputPassword;\n    let passwordVerify = req.body.inputPasswordVerify;\n\n    if(password !== passwordVerify) {\n        req.flash('error', 'Passwords must match.');\n        return res.redirect('/users/password/' + token);\n    }\n\n    //Custom form validation\n    req.checkBody('inputPassword',\n    `Password must be a minimum of 6 characters. \n    Password must contain only letters and numbers. \n    Password must contain at least 1 uppercase letter and number.`).notEmpty().matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{6,}$/);\n\n    //Check for errors\n    let errors = req.validationErrors();\n\n    if(errors) {\n        req.flash('error', errors[0].msg);\n        return res.redirect('/users/password/' + token);\n    }\n    else {\n        bcrypt.hash(password, 8, (err, hash) => {\n            if(err) {\n                throw next(err);\n            }\n\n            connection.get().query(`UPDATE users \n                INNER JOIN tokens ON users.t_number = tokens.t_number \n                SET users.password = ? \n                WHERE tokens.token = ?`, [hash, token], (err, rows) => {\n                if (err) {\n                    req.flash('error', 'Our database servers maybe down, please try again');\n\n                    return res.redirect('/users/password/' + token);\n                }\n\n                console.log('Changed user password');\n\n                console.log('Token to delete: ' + token);\n\n                tokenModel.deleteById(token, (err, rows) => {\n                    if (err) {\n                        req.flash('error', 'Our database servers maybe down, please try again');\n\n                        return res.redirect('/users/password/' + token);\n                    }\n                    console.log('Token record removed');\n\n                    req.flash('success', 'Password successfully changed.');\n                    res.redirect('/users/');\n                });\n            });\n        });\n    }\n});\n\nrouter.get('/password-change', ensureAuthenticated, (req, res, next) => {\n    let token = randtoken.generate(16);\n\n    console.log('Token: ' + token);\n    console.log('T_number: ' + req.user.t_number);\n\n    // create a connection to add the password token to the database\n    tokenModel.create({ t_number: req.user.t_number, token: token }, function (err, result) {\n        //If an error is thrown\n        if (err) {\n            req.flash('error', 'Our database servers maybe down, please try again');\n\n            // redirect with error messages\n            return res.redirect('/users/settings/');\n        }\n\n        console.log(\"Token added\");\n\n        // create reusable transporter object using the default SMTP transport\n        let transporter = nodemailer.createTransport({\n            service: 'Gmail',\n            auth: {\n                user: credential.EMAIL_USERNAME,\n                pass: credential.EMAIL_PASSWORD\n            }\n        });\n\n        let email = 'personal.michaelmorgan@gmail.com';\n\n        // setup e-mail data with unicode symbols\n        let mailOptions = {\n            from: 'no-reply <no-reply@telus.com>', // sender address\n            to: email, // list of receivers\n            subject: 'Password Reset', // subject line\n            html: '<p>Hello ' + req.user.first_name + ' ' + req.user.last_name + ', </p>' +\n            '<p>Click the following link to change your password: </p>' +\n            'http://localhost:3000/users/password/' + token\n        };\n\n        // Send mail with defined transport object\n        transporter.sendMail(mailOptions, function (err, info) {\n            //If an error is thrown\n            if (err) {\n                //Check if email can be sent\n                req.flash('error', 'The password reset email did not send, please try again');\n\n                // redirect with error messages\n                return res.redirect('/users/settings/');\n            }\n\n            console.log('Message sent: ' + info.response);\n\n            // successful redirect\n            req.flash('success', 'The password change email has been successfully sent.');\n            res.redirect('/users/settings/');\n        });\n    });\n});\n\n// Get method for the logout page\nrouter.get('/logout', ensureAuthenticated, function (req, res) {\n    req.logout(); //Log the user out\n    req.flash('success', 'You have logged out');\n    res.redirect('/');\n});\n\n// Ensure sure the user is authenticated\nfunction ensureAuthenticated(req, res, next) {\n    if (req.isAuthenticated()) { return next(); }\n    res.redirect('/');\n}\n\nrouter.get('/settings', ensureAuthenticated, function(req, res, next) {\n    if (req.user.privileged <= 1) {\n        return res.redirect('/users/');\n    }\n\n    //Show the Settings page\n    res.render('settings', {\n        title: 'Settings',\n        success_message: req.flash('success'),\n        error_message: req.flash('error')\n    });\n});\n\nrouter.get('/profile/:id', ensureAuthenticated, function(req, res, next) {\n    var id = req.params.id.toLowerCase();\n\n    userModel.getById(id, function(err, rows) {\n        if(err) {\n            throw next(err);\n        }\n        else if(rows.length <= 0) {\n            console.error('Invalid profile id.');\n            return res.redirect('/users/');\n        }\n        else {\n            var returnObj = {\n                first_name: rows[0].first_name,\n                last_name: rows[0].last_name,\n                t_number: rows[0].t_number,\n                email: rows[0].email,\n                privileged: rows[0].privileged\n            };\n\n            //Render profile page with supplied user\n            res.render('profile', { userObj: returnObj });\n        }\n    });\n});\n\n// If accessing the documentation page\nrouter.get('/documentation', ensureAuthenticated, function (req, res, next) {\n    if (req.user.privileged <= 2) {\n        return res.redirect('/users/');\n    }\n\n    res.render('documentation', {\n        title: 'Documentation'\n    });\n});\n\nfunction getRecentObservations(callback){\n    connection.get().query('SELECT users.t_number,users.first_name, behaviour_desc, observations.observation_id, skills.skill_title, observations.observation_comment, observations.observation_date , '+\n    'observations.assigned_by, ASSIGNED_BY_STATEMENT.full_name AS assigned_by_name, observations.observation_type FROM users '+\n    'INNER JOIN observations on users.t_number = observations.assigned_to ' +\n    'INNER JOIN behaviours on observations.behaviour_id = behaviours.behaviour_id '+\n    'INNER JOIN skills on behaviours.skill_id = skills.skill_id '+\n    'INNER JOIN (SELECT users.t_number AS assigned_by, observations.assigned_to AS assigned_to, CONCAT(users.first_name, \" \", users.last_name) AS full_name FROM users '+\n    'INNER JOIN observations on users.t_number = observations.assigned_by) as ASSIGNED_BY_STATEMENT on observations.assigned_by = ASSIGNED_BY_STATEMENT.assigned_by '+\n    'GROUP BY observations.observation_id ORDER BY observations.observation_date DESC '+\n    'LIMIT 3;', function(err, rows) {\n        if (err) {\n            callback(err, null);\n        } else\n            callback(null, rows);\n    });\n}\n\nmodule.exports = router;\n\n\n"]}