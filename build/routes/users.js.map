{"version":3,"sources":["users.es6"],"names":[],"mappings":"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","file":"users.js","sourcesContent":["var express = require('express');\nvar connection = require('../connection');\nvar credential = require('../credential');\nvar passport = require('passport');\nvar nodemailer = require('nodemailer');\nvar randtoken = require('rand-token');\nvar router = express.Router();\n\nvar userModel = require('../models/user');\nvar tokenModel = require('../models/token');\nvar storesModel = require('../models/store');\n\n// get the users listing\nrouter.get('/', ensureAuthenticated, (req, res, next) => {\n    // Check if store_id session value is set\n    // if not then set it\n    if(!req.session.store_id) {\n        storesModel.getFirstStoreByTNumber(req.user.t_number, (err, result) => {\n            if(err) {\n                console.log('Error retrieving first store.');\n                return;\n            }\n\n            req.session.store_id = result[0].store_id;\n\n            // log the store id\n            console.log(req.session.store_id);\n        });\n    }\n\n    var returnObj = {\n        title: 'Dashboard'\n    };\n\n    //Connection to get all of the observations for each employee ordered by date\n    getRecentObservations((err, obsResults) => {\n        //If an error is thrown\n        if (err) {\n            returnObj['message'] = 'Our database servers maybe down. Please try again.';\n            //Render the page wth error messages\n            return res.render('index', returnObj);\n        }\n\n        returnObj['recentObservations'] = obsResults;\n\n        //Render the observations page with the list of users and observations\n        res.render('index', returnObj);\n    });\n});\n\n// If accessing the register page, reset the form variables\nrouter.get('/register', ensureAuthenticated, function (req, res, next) {\n    if (req.user.privileged <= 2) {\n        return res.redirect('/users/');\n    }\n\n    storesModel.getStores((err, result) => {\n        if(err) {\n            throw next(err);\n        }\n\n        return res.render('register', {\n            title: 'Register',\n            first: '',\n            last: '',\n            username: '',\n            privileged: '',\n            email: '',\n            stores: result,\n            storesObj: JSON.stringify(result)\n        });\n    });\n});\n\n// Form validation for the register page\nrouter.post('/register', ensureAuthenticated, function (req, res, next) {\n    if (!req.body) {\n        return res.sendStatus(400);\n    }\n    if (req.user.privileged <= 2) {\n        return res.redirect('/users/');\n    }\n\n    console.log(req.body.privilege);\n\n    //Store the variables form the register page\n    var first = req.body.firstName;\n    var last = req.body.lastName;\n    var username = req.body.username;\n    var privileged = req.body.privileged;\n    var email = req.body.email;\n\n    // return object\n    var returnObj = {\n        title: 'Register',\n        first: first,\n        last: last,\n        email: email,\n        privileged: privileged,\n        username: username\n    };\n\n    //Custom form validation\n    req.checkBody('firstName', \"First name field is required\").notEmpty();\n    req.checkBody('firstName', \"Only letters A-Z maybe used in the first name\").matches(/^[a-zA-Z]*$/);\n    req.checkBody('lastName', \"Last name field is required\").notEmpty();\n    req.checkBody('lastName', \"Only letters A-Z maybe used in the last name\").matches(/^[a-zA-Z]*$/);\n    req.checkBody('email', \"Invalid email\").isEmail();\n    req.checkBody('username', \"T number required format: t123456\").matches(/t[0-9]{6}/);\n\n    //Check for errors\n    var errors = req.validationErrors();\n    if(errors) {\n        returnObj['errors'] = errors;\n        res.render('register', returnObj);\n    }\n    else {\n        //Check for duplicate users\n        userModel.exists(username, function(err, rows) {\n            if (rows.length > 0) {\n                returnObj['message'] = 'Duplicate T#, please enter a unique T#';\n                return res.render('register', returnObj);\n            }\n            else {\n                //Check for duplicate emails\n                userModel.emailExists(email, function(err, rows) {\n                    if (rows.length > 0) {\n                        returnObj['message'] = 'Sorry that email is already in use!';\n                        return res.render('register', returnObj);\n                    }\n                    //The user is unique, insert the user into the database and send them a token\n                    else {\n                        //generate token\n                        var token = randtoken.generate(16);\n\n                        // create reusable transporter object using the default SMTP transport\n                        var transporter = nodemailer.createTransport({\n                            service: 'Gmail',\n                            auth: {\n                                user: credential.EMAIL_USERNAME,\n                                pass: credential.EMAIL_PASSWORD\n                            }\n                        });\n\n                        // setup e-mail data with unicode symbols\n                        var mailOptions = {\n                            from: 'no-reply <no-reply@telus.com>', // sender address\n                            to: email, // list of receivers\n                            subject: 'Verification', // subject line\n                            html: '<p>Hello ' + first + ' ' + last + ', </p>' +\n                            '<p>Click the following link to activate your account: </p>' +\n                            'http://localhost:3000/activate/' + token\n                        };\n\n                        // Send mail with defined transport object\n                        transporter.sendMail(mailOptions, function (err, info) {\n\n                            //If an error is thrown\n                            if (err) {\n                                //Check if email can be sent\n                                req.flash('The activation email did not send, please try again', 'The activation email did not send, please try again');\n                                returnObj['message'] = 'The activation email did not send, please try again';\n                                //Render the page wth error messages\n                                return res.render('register', returnObj);\n                            }\n                            console.log('Message sent: ' + info.response);\n                        });\n\n                        //Create a user object\n                        var user = {\n                            first_name: first,\n                            last_name: last,\n                            email: email,\n                            privileged: privileged,\n                            username: username,\n                            t_number: username\n                        };\n\n                        // Create connection to add the user to the database\n                        userModel.create(user, function (err, result) {\n                            //If an error is thrown\n                            if (err) {\n                                req.flash('Our database servers maybe down, please try again', 'Our database servers maybe down, please try again');\n                                returnObj['message'] = 'Our database servers maybe down, please try again';\n                                //Render the page wth error messages\n                                return res.render('register', returnObj);\n                            }\n\n                            console.log(\"User added successfully.\");\n\n                            // create a token object\n                            var tokenObj = {\n                                t_number: username,\n                                token: token\n                            };\n\n                            // create a connection to add the email token to the database\n                            tokenModel.create(tokenObj, function (err, result) {\n                                //If an error is thrown\n                                if (err) {\n                                    req.flash('Our database servers maybe down, please try again', 'Our database servers maybe down, please try again');\n                                    returnObj['message'] = 'Our database servers maybe down, please try again';\n                                    //Render the page wth error messages\n                                    return res.render('register', returnObj);\n                                }\n\n                                console.log(\"Token added\");\n\n                                let stores = req.body['stores[]'];\n\n                                //Create a user object\n                                let storeObjArr = [];\n\n                                for(var store in stores) {\n                                    storeObjArr[store] = [req.body.username, stores[store]];\n                                }\n\n                                storesModel.addStore(storeObjArr, function (err, result) {\n                                    //If an error is thrown\n                                    if (err) {\n                                        req.flash('Our database servers maybe down, please try again', 'Our database servers maybe down, please try again');\n                                        returnObj['message'] = 'Our database servers maybe down, please try again';\n                                        //Render the page wth error messages\n                                        return res.render('register', returnObj);\n                                    }\n\n                                    console.log(\"Store added successfully.\");\n\n                                    storesModel.getStores((err, result) => {\n                                        if(err) {\n                                            throw next(err);\n                                        }\n\n                                        req.flash('success_messages', 'User successfully registered, a registration email has been sent');\n                                        res.locals.success_messages = req.flash('success_messages');\n                                        res.render('register', {\n                                            title: 'Register',\n                                            first: '',\n                                            last: '',\n                                            username: '',\n                                            privileged: '',\n                                            email: '',\n                                            stores: result,\n                                            storesObj: JSON.stringify(result)\n                                        });\n                                    });\n                                });\n                            });\n                        });\n                    }\n                });\n            }\n        });\n    }\n});\n\n\n// Get method for edit users when the page is loaded\nrouter.get('/edit', ensureAuthenticated, function (req, res, next) {\n    //Ensure user is logged in\n    if (req.user.privileged <= 2) { return res.redirect('/users/'); }\n\n    //Connect to the database and get all the user to show the user the list of deletable users\n    userModel.getAll(function(err, results) {\n        if (err) {\n            throw next(err);\n        }\n\n        res.render('edit', {\n            title: 'Edit',\n            users: results\n        });\n    });\n});\n\n// Post for edit when the submit button is pressed\nrouter.post('/edit', ensureAuthenticated, function (req, res, next) {\n    if (!req.body) { return res.sendStatus(400); }\n    if (req.user.privileged <= 2 || req.body.submit == \"cancel\") { return res.redirect('/users/'); }\n\n    //Connection for getting all the users\n    userModel.getAll(function(err, results) {\n        var returnObj = {\n            title: 'Remove',\n            users: results\n        };\n\n        //If an error is thrown\n        if (err) {\n            returnObj['message'] = err.toString();\n            //Render the page wth error messages\n            return res.render('edit', returnObj);\n        }\n\n        var removeIds = []; // User(s) to be deleted\n\n        //Add to removeIds the user that where selected of the edit page\n        results.forEach(function (value, index) {\n            if (req.body.hasOwnProperty('remove' + value.t_number)) {\n                //Check if the user is trying to delete themselves\n                if(req.user.t_number == value.t_number){\n                    req.flash('error_messages', 'Can\\'t delete yourself!');\n                    res.locals.error_messages = req.flash('error_messages');\n                }\n                else {\n                    removeIds.push(value.t_number);\n                }\n            }\n        });\n\n        //Connection for deleted the users. Deletes the users who are in 'removeIds'\n        userModel.deleteByIds(removeIds, function(err, results) {\n            //If an error is thrown\n            if (err) {\n                returnObj['message'] = err.toString();\n                //Render the page wth error messages\n                return res.render('edit', returnObj);\n            }\n            else\n            {\n                req.flash('success_messages', 'User successfully deleted');\n                res.locals.success_messages = req.flash('success_messages');\n            }\n\n            //Connection to get the the users after the selected users where deleted\n            userModel.getAll(function(err, results) {\n                //If an error is thrown\n                if (err) {\n                    returnObj['message'] = err.toString();\n                    //Render the page wth error messages\n                    return res.render('edit', returnObj);\n                }\n\n                returnObj['users'] = results;\n                //Re-render the edit users page\n                res.render('edit', returnObj);\n            });\n        });\n    });\n});\n\n// Get method for the logout page\nrouter.get('/logout', ensureAuthenticated, function (req, res) {\n    req.logout(); //Log the user out\n    req.flash('success', 'You have logged out');\n    res.redirect('/');\n});\n\n// Ensure sure the user is authenticated\nfunction ensureAuthenticated(req, res, next) {\n    if (req.isAuthenticated()) { return next(); }\n    res.redirect('/');\n}\n\nrouter.get('/settings', ensureAuthenticated, function (req, res, next) {\n    if (req.user.privileged <= 1){\n        return res.redirect('/users/');\n    }\n\n    //Show the Settings page\n    res.render('settings', {\n        title: 'Settings'\n    });\n});\n\nrouter.get('/profile/:id', ensureAuthenticated, function(req, res, next) {\n    var id = req.params.id.toLowerCase();\n\n    userModel.getById(id, function(err, rows) {\n        if(err) {\n            throw next(err);\n        }\n        else if(rows.length <= 0) {\n            console.error('Invalid profile id.');\n            return res.redirect('/users/');\n        }\n        else {\n            var returnObj = {\n                first_name: rows[0].first_name,\n                last_name: rows[0].last_name,\n                t_number: rows[0].t_number,\n                email: rows[0].email,\n                privileged: rows[0].privileged\n            };\n\n            //Render profile page with supplied user\n            res.render('profile', { userObj: returnObj });\n        }\n    });\n});\n\n// If accessing the documentation page\nrouter.get('/documentation', ensureAuthenticated, function (req, res, next) {\n    if (req.user.privileged <= 2) {\n        return res.redirect('/users/');\n    }\n\n    res.render('documentation', {\n        title: 'Documentation'\n    });\n});\n\nfunction getRecentObservations(callback){\n    connection.get().query('SELECT users.t_number,users.first_name, behaviour_desc, observations.observation_id, skills.skill_title, observations.observation_comment, observations.observation_date , '+\n    'observations.assigned_by, ASSIGNED_BY_STATEMENT.full_name AS assigned_by_name, observations.observation_type FROM users '+\n    'INNER JOIN observations on users.t_number = observations.assigned_to ' +\n    'INNER JOIN behaviours on observations.behaviour_id = behaviours.behaviour_id '+\n    'INNER JOIN skills on behaviours.skill_id = skills.skill_id '+\n    'INNER JOIN (SELECT users.t_number AS assigned_by, observations.assigned_to AS assigned_to, CONCAT(users.first_name, \" \", users.last_name) AS full_name FROM users '+\n    'INNER JOIN observations on users.t_number = observations.assigned_by) as ASSIGNED_BY_STATEMENT on observations.assigned_by = ASSIGNED_BY_STATEMENT.assigned_by '+\n    'GROUP BY observations.observation_id ORDER BY observations.observation_date DESC '+\n    'LIMIT 3;', function(err, rows) {\n        if (err) {\n            callback(err, null);\n        } else\n            callback(null, rows);\n    });\n}\n\nmodule.exports = router;\n\n\n"]}