{"version":3,"sources":["users.es6"],"names":[],"mappings":";;AAAA,IAAI,UAAU,QAAQ,SAAR,CAAd;AACA,IAAI,aAAa,QAAQ,eAAR,CAAjB;AACA,IAAI,aAAa,QAAQ,eAAR,CAAjB;AACA,IAAI,WAAW,QAAQ,UAAR,CAAf;AACA,IAAI,aAAa,QAAQ,YAAR,CAAjB;AACA,IAAI,YAAY,QAAQ,YAAR,CAAhB;AACA,IAAI,SAAS,QAAQ,MAAR,EAAb;;AAEA,IAAI,YAAY,QAAQ,gBAAR,CAAhB;AACA,IAAI,aAAa,QAAQ,iBAAR,CAAjB;AACA,IAAI,cAAc,QAAQ,iBAAR,CAAlB;;AAEA;AACA,OAAO,GAAP,CAAW,GAAX,EAAgB,mBAAhB,EAAqC,UAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAoB;AACrD;AACA;AACA,QAAG,CAAC,IAAI,OAAJ,CAAY,QAAhB,EAA0B;AACtB,oBAAY,sBAAZ,CAAmC,IAAI,IAAJ,CAAS,QAA5C,EAAsD,UAAC,GAAD,EAAM,MAAN,EAAiB;AACnE,gBAAG,GAAH,EAAQ;AACJ,wBAAQ,GAAR,CAAY,+BAAZ;AACA;AACH;;AAED,gBAAI,OAAJ,CAAY,QAAZ,GAAuB,OAAO,CAAP,EAAU,QAAjC;;AAEA;AACA,oBAAQ,GAAR,CAAY,IAAI,OAAJ,CAAY,QAAxB;AACH,SAVD;AAWH;;AAED,QAAI,YAAY;AACZ,eAAO;AADK,KAAhB;;AAIA;AACA,0BAAsB,UAAC,GAAD,EAAM,UAAN,EAAqB;AACvC;AACA,YAAI,GAAJ,EAAS;AACL,sBAAU,SAAV,IAAuB,oDAAvB;AACA;AACA,mBAAO,IAAI,MAAJ,CAAW,OAAX,EAAoB,SAApB,CAAP;AACH;;AAED,kBAAU,oBAAV,IAAkC,UAAlC;;AAEA;AACA,YAAI,MAAJ,CAAW,OAAX,EAAoB,SAApB;AACH,KAZD;AAaH,CAnCD;;AAqCA;AACA,OAAO,GAAP,CAAW,WAAX,EAAwB,mBAAxB,EAA6C,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AACnE,QAAI,IAAI,IAAJ,CAAS,UAAT,IAAuB,CAA3B,EAA8B;AAC1B,eAAO,IAAI,QAAJ,CAAa,SAAb,CAAP;AACH;;AAED,gBAAY,SAAZ,CAAsB,UAAC,GAAD,EAAM,MAAN,EAAiB;AACnC,YAAG,GAAH,EAAQ;AACJ,kBAAM,KAAK,GAAL,CAAN;AACH;;AAED,eAAO,IAAI,MAAJ,CAAW,UAAX,EAAuB;AAC1B,mBAAO,UADmB;AAE1B,mBAAO,EAFmB;AAG1B,kBAAM,EAHoB;AAI1B,sBAAU,EAJgB;AAK1B,wBAAY,EALc;AAM1B,mBAAO,EANmB;AAO1B,oBAAQ,MAPkB;AAQ1B,uBAAW,KAAK,SAAL,CAAe,MAAf;AARe,SAAvB,CAAP;AAUH,KAfD;AAgBH,CArBD;;AAuBA;AACA,OAAO,IAAP,CAAY,WAAZ,EAAyB,mBAAzB,EAA8C,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AACpE,QAAG,CAAC,IAAI,IAAR,EAAc;AACV,eAAO,IAAI,UAAJ,CAAe,GAAf,CAAP;AACH;AACD,QAAG,IAAI,IAAJ,CAAS,UAAT,IAAuB,CAA1B,EAA6B;AACzB,eAAO,IAAI,QAAJ,CAAa,SAAb,CAAP;AACH;;AAED;AACA,QAAI,QAAQ,IAAI,IAAJ,CAAS,SAArB;AACA,QAAI,OAAO,IAAI,IAAJ,CAAS,QAApB;AACA,QAAI,WAAW,IAAI,IAAJ,CAAS,QAAxB;AACA,QAAI,aAAa,IAAI,IAAJ,CAAS,UAA1B;AACA,QAAI,QAAQ,IAAI,IAAJ,CAAS,KAArB;;AAEA;AACA,QAAI,YAAY;AACZ,eAAO,UADK;AAEZ,eAAO,KAFK;AAGZ,cAAM,IAHM;AAIZ,eAAO,KAJK;AAKZ,oBAAY,UALA;AAMZ,kBAAU;AANE,KAAhB;;AASA;AACA,QAAI,SAAJ,CAAc,WAAd,EAA2B,8BAA3B,EAA2D,QAA3D;AACA,QAAI,SAAJ,CAAc,WAAd,EAA2B,+CAA3B,EAA4E,OAA5E,CAAoF,aAApF;AACA,QAAI,SAAJ,CAAc,UAAd,EAA0B,6BAA1B,EAAyD,QAAzD;AACA,QAAI,SAAJ,CAAc,UAAd,EAA0B,8CAA1B,EAA0E,OAA1E,CAAkF,aAAlF;AACA,QAAI,SAAJ,CAAc,OAAd,EAAuB,8CAAvB,EAAuE,OAAvE,GAAiF,OAAjF,CAAyF,4BAAzF;AACA,QAAI,SAAJ,CAAc,UAAd,EAA0B,mCAA1B,EAA+D,OAA/D,CAAuE,WAAvE;;AAEA;AACA,gBAAY,SAAZ,CAAsB,UAAC,GAAD,EAAM,MAAN,EAAiB;AACnC,YAAG,GAAH,EAAQ;AACJ,kBAAM,KAAK,GAAL,CAAN;AACH;;AAED,kBAAU,QAAV,IAAsB,MAAtB;AACA,kBAAU,WAAV,IAAyB,KAAK,SAAL,CAAe,MAAf,CAAzB;;AAEA;AACA,YAAI,SAAS,IAAI,gBAAJ,EAAb;;AAEA,YAAG,MAAH,EAAW;AACP,sBAAU,QAAV,IAAsB,MAAtB;AACA,mBAAO,IAAI,MAAJ,CAAW,UAAX,EAAuB,SAAvB,CAAP;AACH,SAHD,MAIK;AACD;AACA,sBAAU,MAAV,CAAiB,QAAjB,EAA2B,UAAS,GAAT,EAAc,IAAd,EAAoB;AAC3C,oBAAI,KAAK,MAAL,GAAc,CAAlB,EAAqB;AACjB,8BAAU,SAAV,IAAuB,wCAAvB;AACA,2BAAO,IAAI,MAAJ,CAAW,UAAX,EAAuB,SAAvB,CAAP;AACH,iBAHD,MAIK;AACD;AACA,8BAAU,WAAV,CAAsB,KAAtB,EAA6B,UAAS,GAAT,EAAc,IAAd,EAAoB;AAC7C,4BAAI,KAAK,MAAL,GAAc,CAAlB,EAAqB;AACjB,sCAAU,SAAV,IAAuB,qCAAvB;AACA,mCAAO,IAAI,MAAJ,CAAW,UAAX,EAAuB,SAAvB,CAAP;AACH;AACD;AAJA,6BAKK;AACD;AACA,oCAAI,QAAQ,UAAU,QAAV,CAAmB,EAAnB,CAAZ;;AAEA;AACA,oCAAI,cAAc,WAAW,eAAX,CAA2B;AACzC,6CAAS,OADgC;AAEzC,0CAAM;AACF,8CAAM,WAAW,cADf;AAEF,8CAAM,WAAW;AAFf;AAFmC,iCAA3B,CAAlB;;AAQA;AACA,oCAAI,cAAc;AACd,0CAAM,+BADQ,EACyB;AACvC,wCAAI,KAFU,EAEH;AACX,6CAAS,cAHK,EAGW;AACzB,0CAAM,cAAc,KAAd,GAAsB,GAAtB,GAA4B,IAA5B,GAAmC,QAAnC,GACN,4DADM,GAEN,iCAFM,GAE8B;AANtB,iCAAlB;;AASA;AACA,4CAAY,QAAZ,CAAqB,WAArB,EAAkC,UAAU,GAAV,EAAe,IAAf,EAAqB;;AAEnD;AACA,wCAAI,GAAJ,EAAS;AACL;AACA,4CAAI,KAAJ,CAAU,qDAAV,EAAiE,qDAAjE;AACA,kDAAU,SAAV,IAAuB,qDAAvB;AACA;AACA,+CAAO,IAAI,MAAJ,CAAW,UAAX,EAAuB,SAAvB,CAAP;AACH;AACD,4CAAQ,GAAR,CAAY,mBAAmB,KAAK,QAApC;AACH,iCAXD;;AAaA;AACA,oCAAI,OAAO;AACP,gDAAY,KADL;AAEP,+CAAW,IAFJ;AAGP,2CAAO,KAHA;AAIP,gDAAY,UAJL;AAKP,8CAAU,QALH;AAMP,8CAAU;AANH,iCAAX;;AASA;AACA,0CAAU,MAAV,CAAiB,IAAjB,EAAuB,UAAU,GAAV,EAAe,MAAf,EAAuB;AAC1C;AACA,wCAAI,GAAJ,EAAS;AACL,4CAAI,KAAJ,CAAU,mDAAV,EAA+D,mDAA/D;AACA,kDAAU,SAAV,IAAuB,mDAAvB;AACA;AACA,+CAAO,IAAI,MAAJ,CAAW,UAAX,EAAuB,SAAvB,CAAP;AACH;;AAED,4CAAQ,GAAR,CAAY,0BAAZ;;AAEA;AACA,wCAAI,WAAW;AACX,kDAAU,QADC;AAEX,+CAAO;AAFI,qCAAf;;AAKA;AACA,+CAAW,MAAX,CAAkB,QAAlB,EAA4B,UAAU,GAAV,EAAe,MAAf,EAAuB;AAC/C;AACA,4CAAI,GAAJ,EAAS;AACL,gDAAI,KAAJ,CAAU,mDAAV,EAA+D,mDAA/D;AACA,sDAAU,SAAV,IAAuB,mDAAvB;AACA;AACA,mDAAO,IAAI,MAAJ,CAAW,UAAX,EAAuB,SAAvB,CAAP;AACH;;AAED,gDAAQ,GAAR,CAAY,aAAZ;;AAEA,4CAAI,SAAS,IAAI,IAAJ,CAAS,UAAT,CAAb;;AAEA;AACA,4CAAI,cAAc,EAAlB;;AAEA,6CAAI,IAAI,KAAR,IAAiB,MAAjB,EAAyB;AACrB,wDAAY,KAAZ,IAAqB,CAAC,IAAI,IAAJ,CAAS,QAAV,EAAoB,OAAO,KAAP,CAApB,CAArB;AACH;;AAED,oDAAY,QAAZ,CAAqB,WAArB,EAAkC,UAAU,GAAV,EAAe,MAAf,EAAuB;AACrD;AACA,gDAAI,GAAJ,EAAS;AACL,oDAAI,KAAJ,CAAU,mDAAV,EAA+D,mDAA/D;AACA,0DAAU,SAAV,IAAuB,mDAAvB;AACA;AACA,uDAAO,IAAI,MAAJ,CAAW,UAAX,EAAuB,SAAvB,CAAP;AACH;;AAED,oDAAQ,GAAR,CAAY,2BAAZ;;AAEA,gDAAI,KAAJ,CAAU,kBAAV,EAA8B,kEAA9B;AACA,gDAAI,MAAJ,CAAW,gBAAX,GAA8B,IAAI,KAAJ,CAAU,kBAAV,CAA9B;AACA,gDAAI,MAAJ,CAAW,UAAX,EAAuB;AACnB,uDAAO,UADY;AAEnB,uDAAO,EAFY;AAGnB,sDAAM,EAHa;AAInB,0DAAU,EAJS;AAKnB,4DAAY,EALO;AAMnB,uDAAO,EANY;AAOnB,wDAAQ,UAAU,QAAV,CAPW;AAQnB,2DAAW,UAAU,WAAV;AARQ,6CAAvB;AAUH,yCAvBD;AAwBH,qCA5CD;AA6CH,iCA/DD;AAgEH;AACJ,qBAvHD;AAwHH;AACJ,aAhID;AAiIH;AACJ,KAnJD;AAoJH,CAtLD;;AAyLA;AACA,OAAO,GAAP,CAAW,OAAX,EAAoB,mBAApB,EAAyC,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AAC/D;AACA,QAAI,IAAI,IAAJ,CAAS,UAAT,IAAuB,CAA3B,EAA8B;AAAE,eAAO,IAAI,QAAJ,CAAa,SAAb,CAAP;AAAiC;;AAEjE;AACA,cAAU,MAAV,CAAiB,UAAS,GAAT,EAAc,OAAd,EAAuB;AACpC,YAAI,GAAJ,EAAS;AACL,kBAAM,KAAK,GAAL,CAAN;AACH;;AAED,YAAI,MAAJ,CAAW,MAAX,EAAmB;AACf,mBAAO,MADQ;AAEf,mBAAO;AAFQ,SAAnB;AAIH,KATD;AAUH,CAfD;;AAiBA,OAAO,IAAP,CAAY,OAAZ,EAAqB,mBAArB,EAA0C,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AAChE,QAAI,CAAC,IAAI,IAAT,EAAe;AAAE,eAAO,IAAI,UAAJ,CAAe,GAAf,CAAP;AAA6B;AAC9C,QAAI,IAAI,IAAJ,CAAS,UAAT,IAAuB,CAA3B,EAA8B;AAAE,eAAO,IAAI,QAAJ,CAAa,SAAb,CAAP;AAAiC;;AAEjE,cAAU,MAAV,CAAiB,CAAC,IAAI,IAAJ,CAAS,QAAV,EAAoB,IAAI,IAAJ,CAAS,UAA7B,EAAyC,IAAI,IAAJ,CAAS,SAAlD,EACD,IAAI,IAAJ,CAAS,KADR,EACe,IAAI,IAAJ,CAAS,KADxB,EAC+B,IAAI,IAAJ,CAAS,QADxC,CAAjB,EACoE,UAAC,GAAD,EAAM,MAAN,EAAiB;AACjF,YAAI,GAAJ,EAAS;AACL,oBAAQ,GAAR,CAAY,yBAAyB,IAAI,IAAJ,CAAS,QAA9C;AACH;;AAED,gBAAQ,GAAR,CAAY,kBAAkB,IAAI,IAAJ,CAAS,QAAvC;AACA,YAAI,IAAJ,CAAS,KAAK,SAAL,CAAe,IAAI,IAAnB,CAAT;AACH,KARD;AASH,CAbD;;AAeA;AACA,OAAO,IAAP,CAAY,SAAZ,EAAuB,mBAAvB,EAA4C,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AAClE,QAAI,CAAC,IAAI,IAAT,EAAe;AAAE,eAAO,IAAI,UAAJ,CAAe,GAAf,CAAP;AAA6B;AAC9C,QAAI,IAAI,IAAJ,CAAS,UAAT,IAAuB,CAAvB,IAA4B,IAAI,IAAJ,CAAS,MAAT,IAAmB,QAAnD,EAA6D;AAAE,eAAO,IAAI,QAAJ,CAAa,SAAb,CAAP;AAAiC;;AAEhG;AACA,cAAU,MAAV,CAAiB,UAAS,GAAT,EAAc,OAAd,EAAuB;AACpC,YAAI,YAAY;AACZ,mBAAO,QADK;AAEZ,mBAAO;AAFK,SAAhB;;AAKA;AACA,YAAI,GAAJ,EAAS;AACL,sBAAU,SAAV,IAAuB,IAAI,QAAJ,EAAvB;AACA;AACA,mBAAO,IAAI,MAAJ,CAAW,MAAX,EAAmB,SAAnB,CAAP;AACH;;AAED,YAAI,YAAY,EAAhB,CAboC,CAahB;;AAEpB;AACA,gBAAQ,OAAR,CAAgB,UAAU,KAAV,EAAiB,KAAjB,EAAwB;AACpC,gBAAI,IAAI,IAAJ,CAAS,cAAT,CAAwB,WAAW,MAAM,QAAzC,CAAJ,EAAwD;AACpD;AACA,oBAAG,IAAI,IAAJ,CAAS,QAAT,IAAqB,MAAM,QAA9B,EAAuC;AACnC,wBAAI,KAAJ,CAAU,gBAAV,EAA4B,yBAA5B;AACA,wBAAI,MAAJ,CAAW,cAAX,GAA4B,IAAI,KAAJ,CAAU,gBAAV,CAA5B;AACH,iBAHD,MAIK;AACD,8BAAU,IAAV,CAAe,MAAM,QAArB;AACH;AACJ;AACJ,SAXD;;AAaA;AACA,kBAAU,WAAV,CAAsB,SAAtB,EAAiC,UAAS,GAAT,EAAc,OAAd,EAAuB;AACpD;AACA,gBAAI,GAAJ,EAAS;AACL,0BAAU,SAAV,IAAuB,IAAI,QAAJ,EAAvB;AACA;AACA,uBAAO,IAAI,MAAJ,CAAW,MAAX,EAAmB,SAAnB,CAAP;AACH,aAJD,MAMA;AACI,oBAAI,KAAJ,CAAU,kBAAV,EAA8B,2BAA9B;AACA,oBAAI,MAAJ,CAAW,gBAAX,GAA8B,IAAI,KAAJ,CAAU,kBAAV,CAA9B;AACH;;AAED;AACA,sBAAU,MAAV,CAAiB,UAAS,GAAT,EAAc,OAAd,EAAuB;AACpC;AACA,oBAAI,GAAJ,EAAS;AACL,8BAAU,SAAV,IAAuB,IAAI,QAAJ,EAAvB;AACA;AACA,2BAAO,IAAI,MAAJ,CAAW,MAAX,EAAmB,SAAnB,CAAP;AACH;;AAED,0BAAU,OAAV,IAAqB,OAArB;AACA;AACA,oBAAI,MAAJ,CAAW,MAAX,EAAmB,SAAnB;AACH,aAXD;AAYH,SA1BD;AA2BH,KAzDD;AA0DH,CA/DD;;AAiEA;AACA,OAAO,GAAP,CAAW,SAAX,EAAsB,mBAAtB,EAA2C,UAAU,GAAV,EAAe,GAAf,EAAoB;AAC3D,QAAI,MAAJ,GAD2D,CAC7C;AACd,QAAI,KAAJ,CAAU,SAAV,EAAqB,qBAArB;AACA,QAAI,QAAJ,CAAa,GAAb;AACH,CAJD;;AAMA;AACA,SAAS,mBAAT,CAA6B,GAA7B,EAAkC,GAAlC,EAAuC,IAAvC,EAA6C;AACzC,QAAI,IAAI,eAAJ,EAAJ,EAA2B;AAAE,eAAO,MAAP;AAAgB;AAC7C,QAAI,QAAJ,CAAa,GAAb;AACH;;AAED,OAAO,GAAP,CAAW,WAAX,EAAwB,mBAAxB,EAA6C,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AACnE,QAAI,IAAI,IAAJ,CAAS,UAAT,IAAuB,CAA3B,EAA6B;AACzB,eAAO,IAAI,QAAJ,CAAa,SAAb,CAAP;AACH;;AAED;AACA,QAAI,MAAJ,CAAW,UAAX,EAAuB;AACnB,eAAO;AADY,KAAvB;AAGH,CATD;;AAWA,OAAO,GAAP,CAAW,cAAX,EAA2B,mBAA3B,EAAgD,UAAS,GAAT,EAAc,GAAd,EAAmB,IAAnB,EAAyB;AACrE,QAAI,KAAK,IAAI,MAAJ,CAAW,EAAX,CAAc,WAAd,EAAT;;AAEA,cAAU,OAAV,CAAkB,EAAlB,EAAsB,UAAS,GAAT,EAAc,IAAd,EAAoB;AACtC,YAAG,GAAH,EAAQ;AACJ,kBAAM,KAAK,GAAL,CAAN;AACH,SAFD,MAGK,IAAG,KAAK,MAAL,IAAe,CAAlB,EAAqB;AACtB,oBAAQ,KAAR,CAAc,qBAAd;AACA,mBAAO,IAAI,QAAJ,CAAa,SAAb,CAAP;AACH,SAHI,MAIA;AACD,gBAAI,YAAY;AACZ,4BAAY,KAAK,CAAL,EAAQ,UADR;AAEZ,2BAAW,KAAK,CAAL,EAAQ,SAFP;AAGZ,0BAAU,KAAK,CAAL,EAAQ,QAHN;AAIZ,uBAAO,KAAK,CAAL,EAAQ,KAJH;AAKZ,4BAAY,KAAK,CAAL,EAAQ;AALR,aAAhB;;AAQA;AACA,gBAAI,MAAJ,CAAW,SAAX,EAAsB,EAAE,SAAS,SAAX,EAAtB;AACH;AACJ,KApBD;AAqBH,CAxBD;;AA0BA;AACA,OAAO,GAAP,CAAW,gBAAX,EAA6B,mBAA7B,EAAkD,UAAU,GAAV,EAAe,GAAf,EAAoB,IAApB,EAA0B;AACxE,QAAI,IAAI,IAAJ,CAAS,UAAT,IAAuB,CAA3B,EAA8B;AAC1B,eAAO,IAAI,QAAJ,CAAa,SAAb,CAAP;AACH;;AAED,QAAI,MAAJ,CAAW,eAAX,EAA4B;AACxB,eAAO;AADiB,KAA5B;AAGH,CARD;;AAUA,SAAS,qBAAT,CAA+B,QAA/B,EAAwC;AACpC,eAAW,GAAX,GAAiB,KAAjB,CAAuB,gLACvB,0HADuB,GAEvB,uEAFuB,GAGvB,+EAHuB,GAIvB,6DAJuB,GAKvB,oKALuB,GAMvB,iKANuB,GAOvB,mFAPuB,GAQvB,UARA,EAQY,UAAS,GAAT,EAAc,IAAd,EAAoB;AAC5B,YAAI,GAAJ,EAAS;AACL,qBAAS,GAAT,EAAc,IAAd;AACH,SAFD,MAGI,SAAS,IAAT,EAAe,IAAf;AACP,KAbD;AAcH;;AAED,OAAO,OAAP,GAAiB,MAAjB","file":"users.js","sourcesContent":["var express = require('express');\r\nvar connection = require('../connection');\r\nvar credential = require('../credential');\r\nvar passport = require('passport');\r\nvar nodemailer = require('nodemailer');\r\nvar randtoken = require('rand-token');\r\nvar router = express.Router();\r\n\r\nvar userModel = require('../models/user');\r\nvar tokenModel = require('../models/token');\r\nvar storesModel = require('../models/store');\r\n\r\n// get the users listing\r\nrouter.get('/', ensureAuthenticated, (req, res, next) => {\r\n    // Check if store_id session value is set\r\n    // if not then set it\r\n    if(!req.session.store_id) {\r\n        storesModel.getFirstStoreByTNumber(req.user.t_number, (err, result) => {\r\n            if(err) {\r\n                console.log('Error retrieving first store.');\r\n                return;\r\n            }\r\n\r\n            req.session.store_id = result[0].store_id;\r\n\r\n            // log the store id\r\n            console.log(req.session.store_id);\r\n        });\r\n    }\r\n\r\n    var returnObj = {\r\n        title: 'Dashboard'\r\n    };\r\n\r\n    //Connection to get all of the observations for each employee ordered by date\r\n    getRecentObservations((err, obsResults) => {\r\n        //If an error is thrown\r\n        if (err) {\r\n            returnObj['message'] = 'Our database servers maybe down. Please try again.';\r\n            //Render the page wth error messages\r\n            return res.render('index', returnObj);\r\n        }\r\n\r\n        returnObj['recentObservations'] = obsResults;\r\n\r\n        //Render the observations page with the list of users and observations\r\n        res.render('index', returnObj);\r\n    });\r\n});\r\n\r\n// If accessing the register page, reset the form variables\r\nrouter.get('/register', ensureAuthenticated, function (req, res, next) {\r\n    if (req.user.privileged <= 2) {\r\n        return res.redirect('/users/');\r\n    }\r\n\r\n    storesModel.getStores((err, result) => {\r\n        if(err) {\r\n            throw next(err);\r\n        }\r\n\r\n        return res.render('register', {\r\n            title: 'Register',\r\n            first: '',\r\n            last: '',\r\n            username: '',\r\n            privileged: '',\r\n            email: '',\r\n            stores: result,\r\n            storesObj: JSON.stringify(result)\r\n        });\r\n    });\r\n});\r\n\r\n// Form validation for the register page\r\nrouter.post('/register', ensureAuthenticated, function (req, res, next) {\r\n    if(!req.body) {\r\n        return res.sendStatus(400);\r\n    }\r\n    if(req.user.privileged <= 2) {\r\n        return res.redirect('/users/');\r\n    }\r\n\r\n    //Store the variables form the register page\r\n    var first = req.body.firstName;\r\n    var last = req.body.lastName;\r\n    var username = req.body.username;\r\n    var privileged = req.body.privileged;\r\n    var email = req.body.email;\r\n\r\n    // return object\r\n    var returnObj = {\r\n        title: 'Register',\r\n        first: first,\r\n        last: last,\r\n        email: email,\r\n        privileged: privileged,\r\n        username: username\r\n    };\r\n\r\n    //Custom form validation\r\n    req.checkBody('firstName', \"First name field is required\").notEmpty();\r\n    req.checkBody('firstName', \"Only letters A-Z maybe used in the first name\").matches(/^[a-zA-Z]*$/);\r\n    req.checkBody('lastName', \"Last name field is required\").notEmpty();\r\n    req.checkBody('lastName', \"Only letters A-Z maybe used in the last name\").matches(/^[a-zA-Z]*$/);\r\n    req.checkBody('email', \"Invalid email, must follow example@telus.com\").isEmail().matches(/^[A-Z0-9._%+-]+@telus.com$/);\r\n    req.checkBody('username', \"T number required format: t123456\").matches(/t[0-9]{6}/);\r\n\r\n    // grab stores for returnObj\r\n    storesModel.getStores((err, result) => {\r\n        if(err) {\r\n            throw next(err);\r\n        }\r\n\r\n        returnObj['stores'] = result;\r\n        returnObj['storesObj'] = JSON.stringify(result);\r\n\r\n        //Check for errors\r\n        var errors = req.validationErrors();\r\n\r\n        if(errors) {\r\n            returnObj['errors'] = errors;\r\n            return res.render('register', returnObj);\r\n        }\r\n        else {\r\n            //Check for duplicate users\r\n            userModel.exists(username, function(err, rows) {\r\n                if (rows.length > 0) {\r\n                    returnObj['message'] = 'Duplicate T#, please enter a unique T#';\r\n                    return res.render('register', returnObj);\r\n                }\r\n                else {\r\n                    //Check for duplicate emails\r\n                    userModel.emailExists(email, function(err, rows) {\r\n                        if (rows.length > 0) {\r\n                            returnObj['message'] = 'Sorry that email is already in use!';\r\n                            return res.render('register', returnObj);\r\n                        }\r\n                        //The user is unique, insert the user into the database and send them a token\r\n                        else {\r\n                            //generate token\r\n                            var token = randtoken.generate(16);\r\n\r\n                            // create reusable transporter object using the default SMTP transport\r\n                            var transporter = nodemailer.createTransport({\r\n                                service: 'Gmail',\r\n                                auth: {\r\n                                    user: credential.EMAIL_USERNAME,\r\n                                    pass: credential.EMAIL_PASSWORD\r\n                                }\r\n                            });\r\n\r\n                            // setup e-mail data with unicode symbols\r\n                            var mailOptions = {\r\n                                from: 'no-reply <no-reply@telus.com>', // sender address\r\n                                to: email, // list of receivers\r\n                                subject: 'Verification', // subject line\r\n                                html: '<p>Hello ' + first + ' ' + last + ', </p>' +\r\n                                '<p>Click the following link to activate your account: </p>' +\r\n                                'http://localhost:3000/activate/' + token\r\n                            };\r\n\r\n                            // Send mail with defined transport object\r\n                            transporter.sendMail(mailOptions, function (err, info) {\r\n\r\n                                //If an error is thrown\r\n                                if (err) {\r\n                                    //Check if email can be sent\r\n                                    req.flash('The activation email did not send, please try again', 'The activation email did not send, please try again');\r\n                                    returnObj['message'] = 'The activation email did not send, please try again';\r\n                                    //Render the page wth error messages\r\n                                    return res.render('register', returnObj);\r\n                                }\r\n                                console.log('Message sent: ' + info.response);\r\n                            });\r\n\r\n                            //Create a user object\r\n                            var user = {\r\n                                first_name: first,\r\n                                last_name: last,\r\n                                email: email,\r\n                                privileged: privileged,\r\n                                username: username,\r\n                                t_number: username\r\n                            };\r\n\r\n                            // Create connection to add the user to the database\r\n                            userModel.create(user, function (err, result) {\r\n                                //If an error is thrown\r\n                                if (err) {\r\n                                    req.flash('Our database servers maybe down, please try again', 'Our database servers maybe down, please try again');\r\n                                    returnObj['message'] = 'Our database servers maybe down, please try again';\r\n                                    //Render the page wth error messages\r\n                                    return res.render('register', returnObj);\r\n                                }\r\n\r\n                                console.log(\"User added successfully.\");\r\n\r\n                                // create a token object\r\n                                var tokenObj = {\r\n                                    t_number: username,\r\n                                    token: token\r\n                                };\r\n\r\n                                // create a connection to add the email token to the database\r\n                                tokenModel.create(tokenObj, function (err, result) {\r\n                                    //If an error is thrown\r\n                                    if (err) {\r\n                                        req.flash('Our database servers maybe down, please try again', 'Our database servers maybe down, please try again');\r\n                                        returnObj['message'] = 'Our database servers maybe down, please try again';\r\n                                        //Render the page wth error messages\r\n                                        return res.render('register', returnObj);\r\n                                    }\r\n\r\n                                    console.log(\"Token added\");\r\n\r\n                                    let stores = req.body['stores[]'];\r\n\r\n                                    //Create a user object\r\n                                    let storeObjArr = [];\r\n\r\n                                    for(var store in stores) {\r\n                                        storeObjArr[store] = [req.body.username, stores[store]];\r\n                                    }\r\n\r\n                                    storesModel.addStore(storeObjArr, function (err, result) {\r\n                                        //If an error is thrown\r\n                                        if (err) {\r\n                                            req.flash('Our database servers maybe down, please try again', 'Our database servers maybe down, please try again');\r\n                                            returnObj['message'] = 'Our database servers maybe down, please try again';\r\n                                            //Render the page wth error messages\r\n                                            return res.render('register', returnObj);\r\n                                        }\r\n\r\n                                        console.log(\"Store added successfully.\");\r\n\r\n                                        req.flash('success_messages', 'User successfully registered, a registration email has been sent');\r\n                                        res.locals.success_messages = req.flash('success_messages');\r\n                                        res.render('register', {\r\n                                            title: 'Register',\r\n                                            first: '',\r\n                                            last: '',\r\n                                            username: '',\r\n                                            privileged: '',\r\n                                            email: '',\r\n                                            stores: returnObj['stores'],\r\n                                            storesObj: returnObj['storesObj']\r\n                                        });\r\n                                    });\r\n                                });\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    });\r\n});\r\n\r\n\r\n// Get method for edit users when the page is loaded\r\nrouter.get('/edit', ensureAuthenticated, function (req, res, next) {\r\n    //Ensure user is logged in\r\n    if (req.user.privileged <= 2) { return res.redirect('/users/'); }\r\n\r\n    //Connect to the database and get all the user to show the user the list of deletable users\r\n    userModel.getAll(function(err, results) {\r\n        if (err) {\r\n            throw next(err);\r\n        }\r\n\r\n        res.render('edit', {\r\n            title: 'Edit',\r\n            users: results\r\n        });\r\n    });\r\n});\r\n\r\nrouter.post('/edit', ensureAuthenticated, function (req, res, next) {\r\n    if (!req.body) { return res.sendStatus(400); }\r\n    if (req.user.privileged <= 2) { return res.redirect('/users/'); }\r\n\r\n    userModel.update([req.body.t_number, req.body.first_name, req.body.last_name,\r\n                    req.body.email, req.body.title, req.body.t_number], (err, result) => {\r\n        if (err) {\r\n            console.log('Error updating user ' + req.body.t_number);\r\n        }\r\n\r\n        console.log('Updated user ' + req.body.t_number);\r\n        res.send(JSON.stringify(req.body));\r\n    });\r\n});\r\n\r\n// Post for edit when the submit button is pressed\r\nrouter.post('/remove', ensureAuthenticated, function (req, res, next) {\r\n    if (!req.body) { return res.sendStatus(400); }\r\n    if (req.user.privileged <= 2 || req.body.submit == \"cancel\") { return res.redirect('/users/'); }\r\n\r\n    //Connection for getting all the users\r\n    userModel.getAll(function(err, results) {\r\n        var returnObj = {\r\n            title: 'Remove',\r\n            users: results\r\n        };\r\n\r\n        //If an error is thrown\r\n        if (err) {\r\n            returnObj['message'] = err.toString();\r\n            //Render the page wth error messages\r\n            return res.render('edit', returnObj);\r\n        }\r\n\r\n        var removeIds = []; // User(s) to be deleted\r\n\r\n        //Add to removeIds the user that where selected of the edit page\r\n        results.forEach(function (value, index) {\r\n            if (req.body.hasOwnProperty('remove' + value.t_number)) {\r\n                //Check if the user is trying to delete themselves\r\n                if(req.user.t_number == value.t_number){\r\n                    req.flash('error_messages', 'Can\\'t delete yourself!');\r\n                    res.locals.error_messages = req.flash('error_messages');\r\n                }\r\n                else {\r\n                    removeIds.push(value.t_number);\r\n                }\r\n            }\r\n        });\r\n\r\n        //Connection for deleted the users. Deletes the users who are in 'removeIds'\r\n        userModel.deleteByIds(removeIds, function(err, results) {\r\n            //If an error is thrown\r\n            if (err) {\r\n                returnObj['message'] = err.toString();\r\n                //Render the page wth error messages\r\n                return res.render('edit', returnObj);\r\n            }\r\n            else\r\n            {\r\n                req.flash('success_messages', 'User successfully deleted');\r\n                res.locals.success_messages = req.flash('success_messages');\r\n            }\r\n\r\n            //Connection to get the the users after the selected users where deleted\r\n            userModel.getAll(function(err, results) {\r\n                //If an error is thrown\r\n                if (err) {\r\n                    returnObj['message'] = err.toString();\r\n                    //Render the page wth error messages\r\n                    return res.render('edit', returnObj);\r\n                }\r\n\r\n                returnObj['users'] = results;\r\n                //Re-render the edit users page\r\n                res.render('edit', returnObj);\r\n            });\r\n        });\r\n    });\r\n});\r\n\r\n// Get method for the logout page\r\nrouter.get('/logout', ensureAuthenticated, function (req, res) {\r\n    req.logout(); //Log the user out\r\n    req.flash('success', 'You have logged out');\r\n    res.redirect('/');\r\n});\r\n\r\n// Ensure sure the user is authenticated\r\nfunction ensureAuthenticated(req, res, next) {\r\n    if (req.isAuthenticated()) { return next(); }\r\n    res.redirect('/');\r\n}\r\n\r\nrouter.get('/settings', ensureAuthenticated, function (req, res, next) {\r\n    if (req.user.privileged <= 1){\r\n        return res.redirect('/users/');\r\n    }\r\n\r\n    //Show the Settings page\r\n    res.render('settings', {\r\n        title: 'Settings'\r\n    });\r\n});\r\n\r\nrouter.get('/profile/:id', ensureAuthenticated, function(req, res, next) {\r\n    var id = req.params.id.toLowerCase();\r\n\r\n    userModel.getById(id, function(err, rows) {\r\n        if(err) {\r\n            throw next(err);\r\n        }\r\n        else if(rows.length <= 0) {\r\n            console.error('Invalid profile id.');\r\n            return res.redirect('/users/');\r\n        }\r\n        else {\r\n            var returnObj = {\r\n                first_name: rows[0].first_name,\r\n                last_name: rows[0].last_name,\r\n                t_number: rows[0].t_number,\r\n                email: rows[0].email,\r\n                privileged: rows[0].privileged\r\n            };\r\n\r\n            //Render profile page with supplied user\r\n            res.render('profile', { userObj: returnObj });\r\n        }\r\n    });\r\n});\r\n\r\n// If accessing the documentation page\r\nrouter.get('/documentation', ensureAuthenticated, function (req, res, next) {\r\n    if (req.user.privileged <= 2) {\r\n        return res.redirect('/users/');\r\n    }\r\n\r\n    res.render('documentation', {\r\n        title: 'Documentation'\r\n    });\r\n});\r\n\r\nfunction getRecentObservations(callback){\r\n    connection.get().query('SELECT users.t_number,users.first_name, behaviour_desc, observations.observation_id, skills.skill_title, observations.observation_comment, observations.observation_date , '+\r\n    'observations.assigned_by, ASSIGNED_BY_STATEMENT.full_name AS assigned_by_name, observations.observation_type FROM users '+\r\n    'INNER JOIN observations on users.t_number = observations.assigned_to ' +\r\n    'INNER JOIN behaviours on observations.behaviour_id = behaviours.behaviour_id '+\r\n    'INNER JOIN skills on behaviours.skill_id = skills.skill_id '+\r\n    'INNER JOIN (SELECT users.t_number AS assigned_by, observations.assigned_to AS assigned_to, CONCAT(users.first_name, \" \", users.last_name) AS full_name FROM users '+\r\n    'INNER JOIN observations on users.t_number = observations.assigned_by) as ASSIGNED_BY_STATEMENT on observations.assigned_by = ASSIGNED_BY_STATEMENT.assigned_by '+\r\n    'GROUP BY observations.observation_id ORDER BY observations.observation_date DESC '+\r\n    'LIMIT 3;', function(err, rows) {\r\n        if (err) {\r\n            callback(err, null);\r\n        } else\r\n            callback(null, rows);\r\n    });\r\n}\r\n\r\nmodule.exports = router;\r\n\r\n\r\n"]}