{"version":3,"sources":["index.es6"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["var express = require('express');\n\nvar connection = require('../connection');\nvar passport = require('passport');\nvar bcrypt = require('bcryptjs');\n\nvar tokenModel = require('../models/token');\n\nvar router = express.Router();\n\n// render the login page when the user goes to index/root\nrouter.get('/', (req, res, next) => {\n    if(req.user) {\n        return res.redirect('/users/');\n    }\n\n    res.render('login', {\n        title: 'Login',\n        messages: req.flash('error')\n    });\n});\n\n// authenticate the login, if successful redirect to the users page\nrouter.post('/', passport.authenticate('local', {\n    successRedirect: '/users/',\n    failureRedirect: '/',\n    failureFlash: true\n}));\n\n// after the user has clicked the register button, check if the token generated is valid.\n// if valid go to the activate page\nrouter.get('/activate/:token', (req, res, next) => {\n    if(req.params.token.length != 16) {\n        return res.redirect('/');\n    }\n\n    tokenModel.getById([req.params.token], (err, rows) => {\n        if (err) {\n            throw next(err);\n        }\n        if(rows.length <= 0) {\n            res.redirect('/');\n        }\n        else {\n            res.render('activate', {\n                title: 'Activate',\n                row: rows[0]\n            });\n        }\n    });\n});\n\n// when the activate form is submitted make sure the new passwords match.\n// then insert the password into the users table where the generated token match.\n// then delete the token from the tokens table.\n// lastly redirect to the login page.\nrouter.post('/activate/:token', (req, res, next) => {\n    if(!req.body) {\n        return res.sendStatus(400);\n    }\n    if(req.params.token.length != 16) {\n        return res.redirect('/');\n    }\n\n    // store form variables\n    let password = req.body.password;\n    let passwordVerify = req.body.passwordVerify;\n\n    req.checkBody('password', \"Passwords must match\").equals(passwordVerify);\n\n    let errors = req.validationErrors();\n    if(errors) {\n        res.render('activate', {\n            title: 'Activate',\n            errors: errors,\n            row: {\n                token: req.params.token\n            }\n        });\n    }\n    else {\n        bcrypt.hash(password, 8, (err, hash) => {\n            if(err) {\n                throw next(err);\n            }\n\n            connection.get().query('UPDATE users ' +\n                'INNER JOIN tokens ON users.t_number = tokens.t_number' +\n                ' SET users.password = ?' +\n                ' WHERE tokens.token = ?', [hash, req.params.token], (err, rows) => {\n                if (err) {\n                    req.flash('Our database servers maybe down, please try again','Our database servers maybe down, please try again');\n                    res.render('activate', {\n                        title: 'Activate',\n                        token: req.params.token,\n                        message: req.flash('Our database servers maybe down, please try again')});\n                    return;\n                }\n                console.log('Updated user password');\n            });\n\n            tokenModel.deleteById([req.params.token], function (err, rows) {\n                if (err) {\n                    req.flash('Our database servers maybe down, please try again','Our database servers maybe down, please try again');\n                    res.render('activate', {\n                        title: 'Activate',\n                        token: req.params.token,\n                        message: req.flash('Our database servers maybe down, please try again')});\n                    return;\n                }\n                console.log('Token record removed');\n\n                if(req.user) {\n                    res.redirect('/users/');\n                }\n                else {\n                    res.redirect('/');\n                }\n            });\n        });\n    }\n});\n\nmodule.exports = router;"]}